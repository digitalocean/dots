/**
 * -------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.
 * See License in the project root for license information.
 * -------------------------------------------------------------------------------------------
 */
import type { RequestOption } from "@microsoft/kiota-abstractions";
/** Holds the tracing, metrics and logging configuration for the request adapter */
export interface ObservabilityOptions {
    includeEUIIAttributes: boolean;
}
/** Internal interface not meant to be used externally and designed to facilitate JSON usage of the other interface. */
interface ObservabilityOptionsInternal {
    getTracerInstrumentationName(): string;
}
export declare const ObservabilityOptionKey = "ObservabilityOptionKey";
export declare class ObservabilityOptionsImpl implements ObservabilityOptions, ObservabilityOptionsInternal, RequestOption {
    private readonly _originalOptions;
    constructor(originalOptions?: ObservabilityOptions);
    getKey(): string;
    get includeEUIIAttributes(): boolean;
    set includeEUIIAttributes(value: boolean);
    getTracerInstrumentationName(): string;
}
/**
 * Gets the observability options from the request options
 * @param requestOptions The request options
 * @returns The observability options
 */
export declare function getObservabilityOptionsFromRequest(requestOptions?: Record<string, RequestOption>): ObservabilityOptionsInternal | undefined;
export {};
//# sourceMappingURL=observabilityOptions.d.ts.map