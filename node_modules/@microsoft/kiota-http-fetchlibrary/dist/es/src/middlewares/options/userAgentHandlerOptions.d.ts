/**
 * -------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.
 * See License in the project root for license information.
 * -------------------------------------------------------------------------------------------
 */
import type { RequestOption } from "@microsoft/kiota-abstractions";
export declare const UserAgentHandlerOptionsKey = "UserAgentHandlerOptionKey";
/**
 *
 * Represents the options for the UserAgentHandler.
 */
export interface UserAgentHandlerOptionsParams {
    /**
     * @default true
     * Specifies whether to add the user agent header to the request
     */
    enable?: boolean;
    /**
     * @default "kiota-typescript"
     * The product name to be added to the user agent header
     */
    productName?: string;
    /**
     * @default "1.0.0-preview.12"
     * The product version to be added to the user agent header
     */
    productVersion?: string;
}
/**
 * Represents the options for the UserAgentHandler.
 */
export declare class UserAgentHandlerOptions implements RequestOption {
    /**
     * Specifies whether to add the user agent header to the request
     */
    enable: boolean;
    /**
     * @default "kiota-typescript"
     * The product name to be added to the user agent header
     */
    productName: string;
    /**
     * The product version to be added to the user agent header
     */
    productVersion: string;
    getKey(): string;
    /**
     *
     * To create an instance of UserAgentHandlerOptions
     * @param [options] - The options for the UserAgentHandler
     * @example	const options = new UserAgentHandlerOptions({ enable: false });
     */
    constructor(options?: Partial<UserAgentHandlerOptionsParams>);
}
//# sourceMappingURL=userAgentHandlerOptions.d.ts.map