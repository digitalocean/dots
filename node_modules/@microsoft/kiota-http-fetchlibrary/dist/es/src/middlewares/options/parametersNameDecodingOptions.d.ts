/**
 * -------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.
 * See License in the project root for license information.
 * -------------------------------------------------------------------------------------------
 */
/**
 * @module ParametersNameDecodingHandlerOptions
 */
import type { RequestOption } from "@microsoft/kiota-abstractions";
export declare const ParametersNameDecodingHandlerOptionsKey = "RetryHandlerOptionKey";
/**
 * Signature to define the ParametersNameDecodingHandlerOptions constructor parameters
 */
export interface ParametersNameDecodingHandlerOptionsParams {
    /**
     * Whether to decode the specified characters in the request query parameters names
     * @default true
     */
    enable?: boolean;
    /**
     * The characters to decode
     * @default [".", "-", "~", "$"]
     */
    charactersToDecode?: string[];
}
/** The ParametersNameDecodingOptions request class */
export declare class ParametersNameDecodingHandlerOptions implements RequestOption {
    /**
     *
     * Whether to decode the specified characters in the request query parameters names
     */
    enable: boolean;
    /**
     *
     * The characters to decode
     * @default [".", "-", "~", "$"]
     */
    charactersToDecode: string[];
    getKey(): string;
    /**
     *
     * To create an instance of ParametersNameDecodingHandlerOptions
     * @param [options] - The optional parameters
     * @returns An instance of ParametersNameDecodingHandlerOptions
     * @example ParametersNameDecodingHandlerOptions({ enable: true, charactersToDecode: [".", "-", "~", "$"] });
     */
    constructor(options?: Partial<ParametersNameDecodingHandlerOptionsParams>);
}
//# sourceMappingURL=parametersNameDecodingOptions.d.ts.map