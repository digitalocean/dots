export const TelemetryHandlerOptionsKey = "TelemetryHandlerOptionsKey";
export class TelemetryHandler {
    constructor(telemetryHandlerOptions) {
        this.telemetryHandlerOptions = telemetryHandlerOptions;
    }
    execute(url, requestInit, requestOptions) {
        var _a;
        if ((_a = this.telemetryHandlerOptions) === null || _a === void 0 ? void 0 : _a.telemetryConfigurator) {
            this.telemetryHandlerOptions.telemetryConfigurator(url, requestInit, requestOptions, this.telemetryHandlerOptions.telemetryInformation);
        }
        else if (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions[TelemetryHandlerOptionsKey]) {
            requestOptions[TelemetryHandlerOptionsKey].telemetryConfigurator(url, requestInit, requestOptions);
        }
        if (!this.next) {
            throw new Error("Please set the next middleware to continue the request");
        }
        return this.next.execute(url, requestInit, requestOptions);
    }
}
//# sourceMappingURL=telemetryHandler.js.map