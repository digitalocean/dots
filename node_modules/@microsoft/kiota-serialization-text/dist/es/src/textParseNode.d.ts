/**
 * -------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.
 * See License in the project root for license information.
 * -------------------------------------------------------------------------------------------
 */
import { DateOnly, Duration, type Parsable, type ParsableFactory, type ParseNode, TimeOnly } from "@microsoft/kiota-abstractions";
/**
 * This class represents a text parse node.
 */
export declare class TextParseNode implements ParseNode {
    private readonly text;
    private static readonly noStructuredDataMessage;
    constructor(text: string);
    getByteArrayValue(): ArrayBuffer | undefined;
    onBeforeAssignFieldValues: ((value: Parsable) => void) | undefined;
    onAfterAssignFieldValues: ((value: Parsable) => void) | undefined;
    getStringValue: () => string;
    getChildNode: (identifier: string) => ParseNode | undefined;
    getBooleanValue: () => boolean | undefined;
    getNumberValue: () => number;
    getGuidValue: () => string | undefined;
    getDateValue: () => Date;
    getDateOnlyValue: () => DateOnly | undefined;
    getTimeOnlyValue: () => TimeOnly | undefined;
    getDurationValue: () => Duration | undefined;
    getCollectionOfPrimitiveValues: <T>() => T[] | undefined;
    getCollectionOfObjectValues<T extends Parsable>(parsableFactory: ParsableFactory<T>): T[] | undefined;
    getObjectValue<T extends Parsable>(parsableFactory: ParsableFactory<T>): T;
    getCollectionOfEnumValues: <T>(type: any) => T[];
    getEnumValue: <T>(type: any) => T | undefined;
}
//# sourceMappingURL=textParseNode.d.ts.map