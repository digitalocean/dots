/**
 * -------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.
 * See License in the project root for license information.
 * -------------------------------------------------------------------------------------------
 */
import type { GetTokenOptions, TokenCredential } from "@azure/core-auth";
import { BaseBearerTokenAuthenticationProvider } from "@microsoft/kiota-abstractions";
import { type ObservabilityOptions } from "./observabilityOptions.js";
export declare class AzureIdentityAuthenticationProvider extends BaseBearerTokenAuthenticationProvider {
    /**
     *@param credentials The tokenCredential implementation to use for authentication.
     *@param scopes The scopes to use for authentication.
     *@param options The options to use for authentication.
     *@param allowedHosts The allowed hosts to use for authentication.
     *@param observabilityOptions The observability options to use for authentication.
     *@param isCaeEnabled A flag to determine if Continuous Access Evaluation is enabled
     */
    constructor(credentials: TokenCredential, scopes?: string[], options?: GetTokenOptions, allowedHosts?: Set<string>, observabilityOptions?: ObservabilityOptions, isCaeEnabled?: boolean);
}
//# sourceMappingURL=azureIdentityAuthenticationProvider.d.ts.map