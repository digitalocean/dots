/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDomain_recordFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeDomain_record } from '../../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithDomain_record_GetResponse}
 */
// @ts-ignore
export function createWithDomain_record_GetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithDomain_record_GetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithDomain_record_PatchResponse}
 */
// @ts-ignore
export function createWithDomain_record_PatchResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithDomain_record_PatchResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithDomain_record_PutResponse}
 */
// @ts-ignore
export function createWithDomain_record_PutResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithDomain_record_PutResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithDomain_record_GetResponse(withDomain_record_GetResponse = {}) {
    return {
        "domain_record": n => { withDomain_record_GetResponse.domainRecord = n.getObjectValue(createDomain_recordFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithDomain_record_PatchResponse(withDomain_record_PatchResponse = {}) {
    return {
        "domain_record": n => { withDomain_record_PatchResponse.domainRecord = n.getObjectValue(createDomain_recordFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithDomain_record_PutResponse(withDomain_record_PutResponse = {}) {
    return {
        "domain_record": n => { withDomain_record_PutResponse.domainRecord = n.getObjectValue(createDomain_recordFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithDomain_record_GetResponse(writer, withDomain_record_GetResponse = {}) {
    if (withDomain_record_GetResponse) {
        writer.writeObjectValue("domain_record", withDomain_record_GetResponse.domainRecord, serializeDomain_record);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithDomain_record_PatchResponse(writer, withDomain_record_PatchResponse = {}) {
    if (withDomain_record_PatchResponse) {
        writer.writeObjectValue("domain_record", withDomain_record_PatchResponse.domainRecord, serializeDomain_record);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithDomain_record_PutResponse(writer, withDomain_record_PutResponse = {}) {
    if (withDomain_record_PutResponse) {
        writer.writeObjectValue("domain_record", withDomain_record_PutResponse.domainRecord, serializeDomain_record);
    }
}
/**
 * Uri template for the request builder.
 */
export const WithDomain_record_ItemRequestBuilderUriTemplate = "{+baseurl}/v2/domains/{domain_name}/records/{domain_record_id}";
/**
 * Metadata for all the requests in the request builder.
 */
export const WithDomain_record_ItemRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: WithDomain_record_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithDomain_record_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithDomain_record_GetResponseFromDiscriminatorValue,
    },
    patch: {
        uriTemplate: WithDomain_record_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithDomain_record_PatchResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDomain_record,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
    put: {
        uriTemplate: WithDomain_record_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithDomain_record_PutResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDomain_record,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
