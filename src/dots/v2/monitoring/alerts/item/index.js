/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createAlert_policyFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeAlert_policy, serializeAlert_policy_request } from '../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithAlert_uuGetResponse}
 */
// @ts-ignore
export function createWithAlert_uuGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithAlert_uuGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithAlert_uuPutResponse}
 */
// @ts-ignore
export function createWithAlert_uuPutResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithAlert_uuPutResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithAlert_uuGetResponse(withAlert_uuGetResponse = {}) {
    return {
        "policy": n => { withAlert_uuGetResponse.policy = n.getObjectValue(createAlert_policyFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithAlert_uuPutResponse(withAlert_uuPutResponse = {}) {
    return {
        "policy": n => { withAlert_uuPutResponse.policy = n.getObjectValue(createAlert_policyFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithAlert_uuGetResponse(writer, withAlert_uuGetResponse = {}) {
    if (withAlert_uuGetResponse) {
        writer.writeObjectValue("policy", withAlert_uuGetResponse.policy, serializeAlert_policy);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithAlert_uuPutResponse(writer, withAlert_uuPutResponse = {}) {
    if (withAlert_uuPutResponse) {
        writer.writeObjectValue("policy", withAlert_uuPutResponse.policy, serializeAlert_policy);
    }
}
/**
 * Uri template for the request builder.
 */
export const WithAlert_uuItemRequestBuilderUriTemplate = "{+baseurl}/v2/monitoring/alerts/{alert_uuid}";
/**
 * Metadata for all the requests in the request builder.
 */
export const WithAlert_uuItemRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: WithAlert_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithAlert_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithAlert_uuGetResponseFromDiscriminatorValue,
    },
    put: {
        uriTemplate: WithAlert_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithAlert_uuPutResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAlert_policy_request,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
