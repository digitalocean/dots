/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createMetricsFromDiscriminatorValue } from '../../../../../models/index.js';
/**
 * Uri template for the request builder.
 */
export const BandwidthRequestBuilderUriTemplate = "{+baseurl}/v2/monitoring/metrics/droplet/bandwidth?direction={direction}&end={end}&host_id={host_id}&interface={interface}&start={start}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const BandwidthRequestBuilderGetQueryParametersMapper = {
    "hostId": "host_id",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const BandwidthRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: BandwidthRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createMetricsFromDiscriminatorValue,
        queryParametersMapper: BandwidthRequestBuilderGetQueryParametersMapper,
    },
};
export const GetDirectionQueryParameterTypeObject = {
    Inbound: "inbound",
    Outbound: "outbound",
};
export const GetInterfaceQueryParameterTypeObject = {
    Private: "private",
    Public: "public",
};
/* tslint:enable */
/* eslint-enable */
