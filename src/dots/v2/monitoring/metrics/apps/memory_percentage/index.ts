/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createMetricsFromDiscriminatorValue, type ErrorEscaped, type Metrics } from '../../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/monitoring/metrics/apps/memory_percentage
 */
export interface Memory_percentageRequestBuilder extends BaseRequestBuilder<Memory_percentageRequestBuilder> {
    /**
     * To retrieve memory percentage metrics for a given app, send a GET request to `/v2/monitoring/metrics/apps/memory_percentage`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Metrics>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<Memory_percentageRequestBuilderGetQueryParameters> | undefined) : Promise<Metrics | undefined>;
    /**
     * To retrieve memory percentage metrics for a given app, send a GET request to `/v2/monitoring/metrics/apps/memory_percentage`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<Memory_percentageRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * To retrieve memory percentage metrics for a given app, send a GET request to `/v2/monitoring/metrics/apps/memory_percentage`.
 */
export interface Memory_percentageRequestBuilderGetQueryParameters {
    /**
     * The app component name.
     */
    appComponent?: string;
    /**
     * The app UUID.
     */
    appId?: string;
    /**
     * UNIX timestamp to end metric window.
     */
    end?: string;
    /**
     * UNIX timestamp to start metric window.
     */
    start?: string;
}
/**
 * Uri template for the request builder.
 */
export const Memory_percentageRequestBuilderUriTemplate = "{+baseurl}/v2/monitoring/metrics/apps/memory_percentage?app_id={app_id}&end={end}&start={start}{&app_component*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const Memory_percentageRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "appComponent": "app_component",
    "appId": "app_id",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Memory_percentageRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Memory_percentageRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createMetricsFromDiscriminatorValue,
        queryParametersMapper: Memory_percentageRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
