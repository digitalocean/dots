/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDestination_omit_credentialsFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeDestination_omit_credentials, serializeDestination_request } from '../../../../models/index.js';
// @ts-ignore
import { WithDestination_uuItemRequestBuilderRequestsMetadata } from './item/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DestinationsGetResponse}
 */
// @ts-ignore
export function createDestinationsGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoDestinationsGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DestinationsPostResponse}
 */
// @ts-ignore
export function createDestinationsPostResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoDestinationsPostResponse;
}
/**
 * The deserialization information for the current model
 * @param DestinationsGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDestinationsGetResponse(destinationsGetResponse = {}) {
    return {
        "destinations": n => { destinationsGetResponse.destinations = n.getCollectionOfObjectValues(createDestination_omit_credentialsFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @param DestinationsPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDestinationsPostResponse(destinationsPostResponse = {}) {
    return {
        "destination": n => { destinationsPostResponse.destination = n.getObjectValue(createDestination_omit_credentialsFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param DestinationsGetResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDestinationsGetResponse(writer, destinationsGetResponse = {}, isSerializingDerivedType = false) {
    if (!destinationsGetResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeCollectionOfObjectValues("destinations", destinationsGetResponse.destinations, serializeDestination_omit_credentials);
    writer.writeAdditionalData(destinationsGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param DestinationsPostResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDestinationsPostResponse(writer, destinationsPostResponse = {}, isSerializingDerivedType = false) {
    if (!destinationsPostResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeObjectValue("destination", destinationsPostResponse.destination, serializeDestination_omit_credentials);
    writer.writeAdditionalData(destinationsPostResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const DestinationsRequestBuilderUriTemplate = "{+baseurl}/v2/monitoring/sinks/destinations";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const DestinationsRequestBuilderNavigationMetadata = {
    byDestination_uuid: {
        requestsMetadata: WithDestination_uuItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["destination_uuid"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const DestinationsRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: DestinationsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createDestinationsGetResponseFromDiscriminatorValue,
    },
    post: {
        uriTemplate: DestinationsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createDestinationsPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDestination_request,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
