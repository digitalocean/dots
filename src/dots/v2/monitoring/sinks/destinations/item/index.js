/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDestination_omit_credentialsFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeDestination_omit_credentials, serializeDestination_request } from '../../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithDestination_uuGetResponse}
 */
// @ts-ignore
export function createWithDestination_uuGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithDestination_uuGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithDestination_uuGetResponse(withDestination_uuGetResponse = {}) {
    return {
        "destination": n => { withDestination_uuGetResponse.destination = n.getObjectValue(createDestination_omit_credentialsFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithDestination_uuGetResponse(writer, withDestination_uuGetResponse = {}) {
    if (withDestination_uuGetResponse) {
        writer.writeObjectValue("destination", withDestination_uuGetResponse.destination, serializeDestination_omit_credentials);
        writer.writeAdditionalData(withDestination_uuGetResponse.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const WithDestination_uuItemRequestBuilderUriTemplate = "{+baseurl}/v2/monitoring/sinks/destinations/{destination_uuid}";
/**
 * Metadata for all the requests in the request builder.
 */
export const WithDestination_uuItemRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: WithDestination_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithDestination_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithDestination_uuGetResponseFromDiscriminatorValue,
    },
    post: {
        uriTemplate: WithDestination_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDestination_request,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
