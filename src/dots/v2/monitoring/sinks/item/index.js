/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createSinks_responseFromDiscriminatorValue, serializeSinks_response } from '../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithSink_uuGetResponse}
 */
// @ts-ignore
export function createWithSink_uuGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithSink_uuGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithSink_uuGetResponse(withSink_uuGetResponse = {}) {
    return {
        "sink": n => { withSink_uuGetResponse.sink = n.getObjectValue(createSinks_responseFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithSink_uuGetResponse(writer, withSink_uuGetResponse = {}) {
    if (withSink_uuGetResponse) {
        writer.writeObjectValue("sink", withSink_uuGetResponse.sink, serializeSinks_response);
        writer.writeAdditionalData(withSink_uuGetResponse.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const WithSink_uuItemRequestBuilderUriTemplate = "{+baseurl}/v2/monitoring/sinks/{sink_uuid}";
/**
 * Metadata for all the requests in the request builder.
 */
export const WithSink_uuItemRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: WithSink_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithSink_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithSink_uuGetResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
