/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createAutoscale_poolFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeAutoscale_pool, serializeAutoscale_pool_create, type Autoscale_pool, type Autoscale_pool_create, type ErrorEscaped } from '../../../../models/index.js';
// @ts-ignore
import { DangerousRequestBuilderRequestsMetadata, type DangerousRequestBuilder } from './dangerous/index.js';
// @ts-ignore
import { HistoryRequestBuilderRequestsMetadata, type HistoryRequestBuilder } from './history/index.js';
// @ts-ignore
import { MembersRequestBuilderRequestsMetadata, type MembersRequestBuilder } from './members/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithAutoscale_pool_GetResponse}
 */
// @ts-ignore
export function createWithAutoscale_pool_GetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithAutoscale_pool_GetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithAutoscale_pool_PutResponse}
 */
// @ts-ignore
export function createWithAutoscale_pool_PutResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithAutoscale_pool_PutResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithAutoscale_pool_GetResponse(withAutoscale_pool_GetResponse: Partial<WithAutoscale_pool_GetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "autoscale_pool": n => { withAutoscale_pool_GetResponse.autoscalePool = n.getObjectValue<Autoscale_pool>(createAutoscale_poolFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithAutoscale_pool_PutResponse(withAutoscale_pool_PutResponse: Partial<WithAutoscale_pool_PutResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "autoscale_pool": n => { withAutoscale_pool_PutResponse.autoscalePool = n.getObjectValue<Autoscale_pool>(createAutoscale_poolFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithAutoscale_pool_GetResponse(writer: SerializationWriter, withAutoscale_pool_GetResponse: Partial<WithAutoscale_pool_GetResponse> | undefined | null = {}) : void {
    if (withAutoscale_pool_GetResponse) {
        writer.writeObjectValue<Autoscale_pool>("autoscale_pool", withAutoscale_pool_GetResponse.autoscalePool, serializeAutoscale_pool);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithAutoscale_pool_PutResponse(writer: SerializationWriter, withAutoscale_pool_PutResponse: Partial<WithAutoscale_pool_PutResponse> | undefined | null = {}) : void {
    if (withAutoscale_pool_PutResponse) {
        writer.writeObjectValue<Autoscale_pool>("autoscale_pool", withAutoscale_pool_PutResponse.autoscalePool, serializeAutoscale_pool);
    }
}
export interface WithAutoscale_pool_GetResponse extends Parsable {
    /**
     * The autoscale_pool property
     */
    autoscalePool?: Autoscale_pool | null;
}
/**
 * Builds and executes requests for operations under /v2/droplets/autoscale/{autoscale_pool_id}
 */
export interface WithAutoscale_pool_ItemRequestBuilder extends BaseRequestBuilder<WithAutoscale_pool_ItemRequestBuilder> {
    /**
     * The dangerous property
     */
    get dangerous(): DangerousRequestBuilder;
    /**
     * The history property
     */
    get history(): HistoryRequestBuilder;
    /**
     * The members property
     */
    get members(): MembersRequestBuilder;
    /**
     * To destroy an autoscale pool, send a DELETE request to the `/v2/droplets/autoscale/$AUTOSCALE_POOL_ID` endpoint.A successful response will include a 202 response code and no content. 
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * To show information about an individual autoscale pool, send a GET request to`/v2/droplets/autoscale/$AUTOSCALE_POOL_ID`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithAutoscale_pool_GetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithAutoscale_pool_GetResponse | undefined>;
    /**
     * To update the configuration of an existing autoscale pool, send a PUT request to`/v2/droplets/autoscale/$AUTOSCALE_POOL_ID`. The request must contain a full representationof the autoscale pool including existing attributes. 
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithAutoscale_pool_PutResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     put(body: Autoscale_pool_create, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithAutoscale_pool_PutResponse | undefined>;
    /**
     * To destroy an autoscale pool, send a DELETE request to the `/v2/droplets/autoscale/$AUTOSCALE_POOL_ID` endpoint.A successful response will include a 202 response code and no content. 
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To show information about an individual autoscale pool, send a GET request to`/v2/droplets/autoscale/$AUTOSCALE_POOL_ID`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To update the configuration of an existing autoscale pool, send a PUT request to`/v2/droplets/autoscale/$AUTOSCALE_POOL_ID`. The request must contain a full representationof the autoscale pool including existing attributes. 
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPutRequestInformation(body: Autoscale_pool_create, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
export interface WithAutoscale_pool_PutResponse extends Parsable {
    /**
     * The autoscale_pool property
     */
    autoscalePool?: Autoscale_pool | null;
}
/**
 * Uri template for the request builder.
 */
export const WithAutoscale_pool_ItemRequestBuilderUriTemplate = "{+baseurl}/v2/droplets/autoscale/{autoscale_pool_id}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithAutoscale_pool_ItemRequestBuilderNavigationMetadata: Record<Exclude<keyof WithAutoscale_pool_ItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    dangerous: {
        requestsMetadata: DangerousRequestBuilderRequestsMetadata,
    },
    history: {
        requestsMetadata: HistoryRequestBuilderRequestsMetadata,
    },
    members: {
        requestsMetadata: MembersRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithAutoscale_pool_ItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: WithAutoscale_pool_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithAutoscale_pool_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWithAutoscale_pool_GetResponseFromDiscriminatorValue,
    },
    put: {
        uriTemplate: WithAutoscale_pool_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWithAutoscale_pool_PutResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAutoscale_pool_create,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
