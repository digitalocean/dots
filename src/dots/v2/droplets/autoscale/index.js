/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createAutoscale_poolFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, serializeAutoscale_pool, serializeAutoscale_pool_create, serializeMeta_properties, serializePage_links } from '../../../models/index.js';
// @ts-ignore
import { WithAutoscale_pool_ItemRequestBuilderNavigationMetadata, WithAutoscale_pool_ItemRequestBuilderRequestsMetadata } from './item/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AutoscaleGetResponse}
 */
// @ts-ignore
export function createAutoscaleGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoAutoscaleGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AutoscalePostResponse}
 */
// @ts-ignore
export function createAutoscalePostResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoAutoscalePostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAutoscaleGetResponse(autoscaleGetResponse = {}) {
    return {
        "autoscale_pools": n => { autoscaleGetResponse.autoscalePools = n.getCollectionOfObjectValues(createAutoscale_poolFromDiscriminatorValue); },
        "links": n => { autoscaleGetResponse.links = n.getObjectValue(createPage_linksFromDiscriminatorValue); },
        "meta": n => { autoscaleGetResponse.meta = n.getObjectValue(createMeta_propertiesFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAutoscalePostResponse(autoscalePostResponse = {}) {
    return {
        "autoscale_pool": n => { autoscalePostResponse.autoscalePool = n.getObjectValue(createAutoscale_poolFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAutoscaleGetResponse(writer, autoscaleGetResponse = {}) {
    if (autoscaleGetResponse) {
        writer.writeCollectionOfObjectValues("autoscale_pools", autoscaleGetResponse.autoscalePools, serializeAutoscale_pool);
        writer.writeObjectValue("links", autoscaleGetResponse.links, serializePage_links);
        writer.writeObjectValue("meta", autoscaleGetResponse.meta, serializeMeta_properties);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAutoscalePostResponse(writer, autoscalePostResponse = {}) {
    if (autoscalePostResponse) {
        writer.writeObjectValue("autoscale_pool", autoscalePostResponse.autoscalePool, serializeAutoscale_pool);
    }
}
/**
 * Uri template for the request builder.
 */
export const AutoscaleRequestBuilderUriTemplate = "{+baseurl}/v2/droplets/autoscale{?name*,page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const AutoscaleRequestBuilderGetQueryParametersMapper = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AutoscaleRequestBuilderNavigationMetadata = {
    byAutoscale_pool_id: {
        requestsMetadata: WithAutoscale_pool_ItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithAutoscale_pool_ItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["autoscale_pool_id"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AutoscaleRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: AutoscaleRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createAutoscaleGetResponseFromDiscriminatorValue,
        queryParametersMapper: AutoscaleRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: AutoscaleRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createAutoscalePostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeAutoscale_pool_create,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
