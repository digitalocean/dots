/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createFirewallFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, serializeFirewall, serializeMeta_properties, serializePage_links } from '../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {FirewallsGetResponse}
 */
// @ts-ignore
export function createFirewallsGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoFirewallsGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoFirewallsGetResponse(firewallsGetResponse = {}) {
    return {
        "firewalls": n => { firewallsGetResponse.firewalls = n.getCollectionOfObjectValues(createFirewallFromDiscriminatorValue); },
        "links": n => { firewallsGetResponse.links = n.getObjectValue(createPage_linksFromDiscriminatorValue); },
        "meta": n => { firewallsGetResponse.meta = n.getObjectValue(createMeta_propertiesFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeFirewallsGetResponse(writer, firewallsGetResponse = {}) {
    if (firewallsGetResponse) {
        writer.writeCollectionOfObjectValues("firewalls", firewallsGetResponse.firewalls, serializeFirewall);
        writer.writeObjectValue("links", firewallsGetResponse.links, serializePage_links);
        writer.writeObjectValue("meta", firewallsGetResponse.meta, serializeMeta_properties);
        writer.writeAdditionalData(firewallsGetResponse.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const FirewallsRequestBuilderUriTemplate = "{+baseurl}/v2/droplets/{droplet_id}/firewalls{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const FirewallsRequestBuilderGetQueryParametersMapper = {
    "perPage": "per_page",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const FirewallsRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: FirewallsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createFirewallsGetResponseFromDiscriminatorValue,
        queryParametersMapper: FirewallsRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
