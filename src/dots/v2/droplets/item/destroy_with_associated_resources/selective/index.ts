/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, serializeSelective_destroy_associated_resource, type ErrorEscaped, type Selective_destroy_associated_resource } from '../../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/droplets/{droplet_id}/destroy_with_associated_resources/selective
 */
export interface SelectiveRequestBuilder extends BaseRequestBuilder<SelectiveRequestBuilder> {
    /**
     * To destroy a Droplet along with a sub-set of its associated resources, send aDELETE request to the `/v2/droplets/$DROPLET_ID/destroy_with_associated_resources/selective`endpoint. The JSON body of the request should include `reserved_ips`, `snapshots`, `volumes`,or `volume_snapshots` keys each set to an array of IDs for the associatedresources to be destroyed. The IDs can be found by querying the Droplet'sassociated resources. Any associated resource not included in the requestwill remain and continue to accrue changes on your account.A successful response will include a 202 response code and no content. Usethe status endpoint to check on the success or failure of the destruction ofthe individual resources.
     * @param body An object containing information about a resource to be scheduled for deletion.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     delete(body: Selective_destroy_associated_resource, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * To destroy a Droplet along with a sub-set of its associated resources, send aDELETE request to the `/v2/droplets/$DROPLET_ID/destroy_with_associated_resources/selective`endpoint. The JSON body of the request should include `reserved_ips`, `snapshots`, `volumes`,or `volume_snapshots` keys each set to an array of IDs for the associatedresources to be destroyed. The IDs can be found by querying the Droplet'sassociated resources. Any associated resource not included in the requestwill remain and continue to accrue changes on your account.A successful response will include a 202 response code and no content. Usethe status endpoint to check on the success or failure of the destruction ofthe individual resources.
     * @param body An object containing information about a resource to be scheduled for deletion.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(body: Selective_destroy_associated_resource, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const SelectiveRequestBuilderUriTemplate = "{+baseurl}/v2/droplets/{droplet_id}/destroy_with_associated_resources/selective";
/**
 * Metadata for all the requests in the request builder.
 */
export const SelectiveRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: SelectiveRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeSelective_destroy_associated_resource,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
