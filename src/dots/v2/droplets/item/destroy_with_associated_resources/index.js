/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createAssociated_resourceFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeAssociated_resource } from '../../../../models/index.js';
// @ts-ignore
import { DangerousRequestBuilderRequestsMetadata } from './dangerous/index.js';
// @ts-ignore
import { RetryRequestBuilderRequestsMetadata } from './retry/index.js';
// @ts-ignore
import { SelectiveRequestBuilderRequestsMetadata } from './selective/index.js';
// @ts-ignore
import { StatusRequestBuilderRequestsMetadata } from './status/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Destroy_with_associated_resourcesGetResponse}
 */
// @ts-ignore
export function createDestroy_with_associated_resourcesGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoDestroy_with_associated_resourcesGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDestroy_with_associated_resourcesGetResponse(destroy_with_associated_resourcesGetResponse = {}) {
    return {
        "floating_ips": n => { destroy_with_associated_resourcesGetResponse.floatingIps = n.getCollectionOfObjectValues(createAssociated_resourceFromDiscriminatorValue); },
        "reserved_ips": n => { destroy_with_associated_resourcesGetResponse.reservedIps = n.getCollectionOfObjectValues(createAssociated_resourceFromDiscriminatorValue); },
        "snapshots": n => { destroy_with_associated_resourcesGetResponse.snapshots = n.getCollectionOfObjectValues(createAssociated_resourceFromDiscriminatorValue); },
        "volumes": n => { destroy_with_associated_resourcesGetResponse.volumes = n.getCollectionOfObjectValues(createAssociated_resourceFromDiscriminatorValue); },
        "volume_snapshots": n => { destroy_with_associated_resourcesGetResponse.volumeSnapshots = n.getCollectionOfObjectValues(createAssociated_resourceFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDestroy_with_associated_resourcesGetResponse(writer, destroy_with_associated_resourcesGetResponse = {}) {
    if (destroy_with_associated_resourcesGetResponse) {
        writer.writeCollectionOfObjectValues("floating_ips", destroy_with_associated_resourcesGetResponse.floatingIps, serializeAssociated_resource);
        writer.writeCollectionOfObjectValues("reserved_ips", destroy_with_associated_resourcesGetResponse.reservedIps, serializeAssociated_resource);
        writer.writeCollectionOfObjectValues("snapshots", destroy_with_associated_resourcesGetResponse.snapshots, serializeAssociated_resource);
        writer.writeCollectionOfObjectValues("volumes", destroy_with_associated_resourcesGetResponse.volumes, serializeAssociated_resource);
        writer.writeCollectionOfObjectValues("volume_snapshots", destroy_with_associated_resourcesGetResponse.volumeSnapshots, serializeAssociated_resource);
        writer.writeAdditionalData(destroy_with_associated_resourcesGetResponse.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const Destroy_with_associated_resourcesRequestBuilderUriTemplate = "{+baseurl}/v2/droplets/{droplet_id}/destroy_with_associated_resources";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Destroy_with_associated_resourcesRequestBuilderNavigationMetadata = {
    dangerous: {
        requestsMetadata: DangerousRequestBuilderRequestsMetadata,
    },
    retry: {
        requestsMetadata: RetryRequestBuilderRequestsMetadata,
    },
    selective: {
        requestsMetadata: SelectiveRequestBuilderRequestsMetadata,
    },
    status: {
        requestsMetadata: StatusRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Destroy_with_associated_resourcesRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: Destroy_with_associated_resourcesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createDestroy_with_associated_resourcesGetResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
