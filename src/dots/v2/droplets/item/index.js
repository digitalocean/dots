/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDropletFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeDroplet } from '../../../models/index.js';
// @ts-ignore
import { ActionsRequestBuilderNavigationMetadata, ActionsRequestBuilderRequestsMetadata } from './actions/index.js';
// @ts-ignore
import { BackupsRequestBuilderNavigationMetadata, BackupsRequestBuilderRequestsMetadata } from './backups/index.js';
// @ts-ignore
import { Destroy_with_associated_resourcesRequestBuilderNavigationMetadata, Destroy_with_associated_resourcesRequestBuilderRequestsMetadata } from './destroy_with_associated_resources/index.js';
// @ts-ignore
import { FirewallsRequestBuilderRequestsMetadata } from './firewalls/index.js';
// @ts-ignore
import { KernelsRequestBuilderRequestsMetadata } from './kernels/index.js';
// @ts-ignore
import { NeighborsRequestBuilderRequestsMetadata } from './neighbors/index.js';
// @ts-ignore
import { SnapshotsRequestBuilderRequestsMetadata } from './snapshots/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithDroplet_GetResponse}
 */
// @ts-ignore
export function createWithDroplet_GetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithDroplet_GetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithDroplet_GetResponse(withDroplet_GetResponse = {}) {
    return {
        "droplet": n => { withDroplet_GetResponse.droplet = n.getObjectValue(createDropletFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithDroplet_GetResponse(writer, withDroplet_GetResponse = {}) {
    if (withDroplet_GetResponse) {
        writer.writeObjectValue("droplet", withDroplet_GetResponse.droplet, serializeDroplet);
        writer.writeAdditionalData(withDroplet_GetResponse.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const WithDroplet_ItemRequestBuilderUriTemplate = "{+baseurl}/v2/droplets/{droplet_id}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithDroplet_ItemRequestBuilderNavigationMetadata = {
    actions: {
        requestsMetadata: ActionsRequestBuilderRequestsMetadata,
        navigationMetadata: ActionsRequestBuilderNavigationMetadata,
    },
    backups: {
        requestsMetadata: BackupsRequestBuilderRequestsMetadata,
        navigationMetadata: BackupsRequestBuilderNavigationMetadata,
    },
    destroy_with_associated_resources: {
        requestsMetadata: Destroy_with_associated_resourcesRequestBuilderRequestsMetadata,
        navigationMetadata: Destroy_with_associated_resourcesRequestBuilderNavigationMetadata,
    },
    firewalls: {
        requestsMetadata: FirewallsRequestBuilderRequestsMetadata,
    },
    kernels: {
        requestsMetadata: KernelsRequestBuilderRequestsMetadata,
    },
    neighbors: {
        requestsMetadata: NeighborsRequestBuilderRequestsMetadata,
    },
    snapshots: {
        requestsMetadata: SnapshotsRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithDroplet_ItemRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: WithDroplet_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithDroplet_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithDroplet_GetResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
