/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, serializeMeta_properties, serializePage_links, type ErrorEscaped, type Meta_properties, type Page_links } from '../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PoliciesGetResponse_policies}
 */
// @ts-ignore
export function createPoliciesGetResponse_policiesFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPoliciesGetResponse_policies;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {PoliciesGetResponse}
 */
// @ts-ignore
export function createPoliciesGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPoliciesGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPoliciesGetResponse(policiesGetResponse: Partial<PoliciesGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "links": n => { policiesGetResponse.links = n.getObjectValue<Page_links>(createPage_linksFromDiscriminatorValue); },
        "meta": n => { policiesGetResponse.meta = n.getObjectValue<Meta_properties>(createMeta_propertiesFromDiscriminatorValue); },
        "policies": n => { policiesGetResponse.policies = n.getObjectValue<PoliciesGetResponse_policies>(createPoliciesGetResponse_policiesFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPoliciesGetResponse_policies(policiesGetResponse_policies: Partial<PoliciesGetResponse_policies> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
export interface PoliciesGetResponse extends Parsable {
    /**
     * The links property
     */
    links?: Page_links | null;
    /**
     * The meta property
     */
    meta?: Meta_properties | null;
    /**
     * A map where the keys are the Droplet IDs and the values areobjects containing the backup policy information for each Droplet.
     */
    policies?: PoliciesGetResponse_policies | null;
}
/**
 * A map where the keys are the Droplet IDs and the values areobjects containing the backup policy information for each Droplet.
 */
export interface PoliciesGetResponse_policies extends Parsable {
}
/**
 * Builds and executes requests for operations under /v2/droplets/backups/policies
 */
export interface PoliciesRequestBuilder extends BaseRequestBuilder<PoliciesRequestBuilder> {
    /**
     * To list information about the backup policies for all Droplets in the account,send a GET request to `/v2/droplets/backups/policies`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<PoliciesGetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<PoliciesRequestBuilderGetQueryParameters> | undefined) : Promise<PoliciesGetResponse | undefined>;
    /**
     * To list information about the backup policies for all Droplets in the account,send a GET request to `/v2/droplets/backups/policies`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PoliciesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * To list information about the backup policies for all Droplets in the account,send a GET request to `/v2/droplets/backups/policies`.
 */
export interface PoliciesRequestBuilderGetQueryParameters {
    /**
     * Which 'page' of paginated results to return.
     */
    page?: number;
    /**
     * Number of items returned per page
     */
    perPage?: number;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePoliciesGetResponse(writer: SerializationWriter, policiesGetResponse: Partial<PoliciesGetResponse> | undefined | null = {}) : void {
    if (policiesGetResponse) {
        writer.writeObjectValue<Page_links>("links", policiesGetResponse.links, serializePage_links);
        writer.writeObjectValue<Meta_properties>("meta", policiesGetResponse.meta, serializeMeta_properties);
        writer.writeObjectValue<PoliciesGetResponse_policies>("policies", policiesGetResponse.policies, serializePoliciesGetResponse_policies);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePoliciesGetResponse_policies(writer: SerializationWriter, policiesGetResponse_policies: Partial<PoliciesGetResponse_policies> | undefined | null = {}) : void {
    if (policiesGetResponse_policies) {
    }
}
/**
 * Uri template for the request builder.
 */
export const PoliciesRequestBuilderUriTemplate = "{+baseurl}/v2/droplets/backups/policies{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const PoliciesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "perPage": "per_page",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const PoliciesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: PoliciesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createPoliciesGetResponseFromDiscriminatorValue,
        queryParametersMapper: PoliciesRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
