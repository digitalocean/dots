/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDropletFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, serializeDroplet, serializeMeta_properties, serializePage_links, serializeReserved_ipv6_create, type Droplet, type ErrorEscaped, type Meta_properties, type Page_links, type Reserved_ipv6_create } from '../../models/index.js';
// @ts-ignore
import { type WithReserved_ipv6ItemRequestBuilder, WithReserved_ipv6ItemRequestBuilderNavigationMetadata, WithReserved_ipv6ItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reserved_ipv6GetResponse_reserved_ipv6s}
 */
// @ts-ignore
export function createReserved_ipv6GetResponse_reserved_ipv6sFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoReserved_ipv6GetResponse_reserved_ipv6s;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reserved_ipv6GetResponse}
 */
// @ts-ignore
export function createReserved_ipv6GetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoReserved_ipv6GetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reserved_ipv6PostResponse_reserved_ipv6}
 */
// @ts-ignore
export function createReserved_ipv6PostResponse_reserved_ipv6FromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoReserved_ipv6PostResponse_reserved_ipv6;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reserved_ipv6PostResponse}
 */
// @ts-ignore
export function createReserved_ipv6PostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoReserved_ipv6PostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReserved_ipv6GetResponse(reserved_ipv6GetResponse: Partial<Reserved_ipv6GetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "links": n => { reserved_ipv6GetResponse.links = n.getObjectValue<Page_links>(createPage_linksFromDiscriminatorValue); },
        "meta": n => { reserved_ipv6GetResponse.meta = n.getObjectValue<Meta_properties>(createMeta_propertiesFromDiscriminatorValue); },
        "reserved_ipv6s": n => { reserved_ipv6GetResponse.reservedIpv6s = n.getCollectionOfObjectValues<Reserved_ipv6GetResponse_reserved_ipv6s>(createReserved_ipv6GetResponse_reserved_ipv6sFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReserved_ipv6GetResponse_reserved_ipv6s(reserved_ipv6GetResponse_reserved_ipv6s: Partial<Reserved_ipv6GetResponse_reserved_ipv6s> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "droplet": n => { reserved_ipv6GetResponse_reserved_ipv6s.droplet = n.getObjectValue<Droplet>(createDropletFromDiscriminatorValue); },
        "ip": n => { reserved_ipv6GetResponse_reserved_ipv6s.ip = n.getStringValue(); },
        "region_slug": n => { reserved_ipv6GetResponse_reserved_ipv6s.regionSlug = n.getStringValue(); },
        "reserved_at": n => { reserved_ipv6GetResponse_reserved_ipv6s.reservedAt = n.getDateValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReserved_ipv6PostResponse(reserved_ipv6PostResponse: Partial<Reserved_ipv6PostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "reserved_ipv6": n => { reserved_ipv6PostResponse.reservedIpv6 = n.getObjectValue<Reserved_ipv6PostResponse_reserved_ipv6>(createReserved_ipv6PostResponse_reserved_ipv6FromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReserved_ipv6PostResponse_reserved_ipv6(reserved_ipv6PostResponse_reserved_ipv6: Partial<Reserved_ipv6PostResponse_reserved_ipv6> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "ip": n => { reserved_ipv6PostResponse_reserved_ipv6.ip = n.getStringValue(); },
        "region_slug": n => { reserved_ipv6PostResponse_reserved_ipv6.regionSlug = n.getStringValue(); },
        "reserved_at": n => { reserved_ipv6PostResponse_reserved_ipv6.reservedAt = n.getDateValue(); },
    }
}
export interface Reserved_ipv6GetResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The links property
     */
    links?: Page_links | null;
    /**
     * The meta property
     */
    meta?: Meta_properties | null;
    /**
     * The reserved_ipv6s property
     */
    reservedIpv6s?: Reserved_ipv6GetResponse_reserved_ipv6s[] | null;
}
export interface Reserved_ipv6GetResponse_reserved_ipv6s extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The droplet property
     */
    droplet?: Droplet | null;
    /**
     * The public IP address of the reserved IPv6. It also serves as its identifier.
     */
    ip?: string | null;
    /**
     * The region that the reserved IPv6 is reserved to. When you query a reserved IPv6,the region_slug will be returned.
     */
    regionSlug?: string | null;
    /**
     * The reserved_at property
     */
    reservedAt?: Date | null;
}
export interface Reserved_ipv6PostResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The reserved_ipv6 property
     */
    reservedIpv6?: Reserved_ipv6PostResponse_reserved_ipv6 | null;
}
export interface Reserved_ipv6PostResponse_reserved_ipv6 extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The public IP address of the reserved IPv6. It also serves as its identifier.
     */
    ip?: string | null;
    /**
     * The region that the reserved IPv6 is reserved to. When you query a reserved IPv6,the region_slug will be returned.
     */
    regionSlug?: string | null;
    /**
     * The reserved_at property
     */
    reservedAt?: Date | null;
}
/**
 * Builds and executes requests for operations under /v2/reserved_ipv6
 */
export interface Reserved_ipv6RequestBuilder extends BaseRequestBuilder<Reserved_ipv6RequestBuilder> {
    /**
     * Gets an item from the ApiSdk.v2.reserved_ipv6.item collection
     * @param reserved_ipv6 A reserved IPv6 address.
     * @returns {WithReserved_ipv6ItemRequestBuilder}
     */
     byReserved_ipv6(reserved_ipv6: string) : WithReserved_ipv6ItemRequestBuilder;
    /**
     * To list all of the reserved IPv6s available on your account, send a GET request to `/v2/reserved_ipv6`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Reserved_ipv6GetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<Reserved_ipv6RequestBuilderGetQueryParameters> | undefined) : Promise<Reserved_ipv6GetResponse | undefined>;
    /**
     * On creation, a reserved IPv6 must be reserved to a region.* To create a new reserved IPv6 reserved to a region, send a POST request to  `/v2/reserved_ipv6` with the `region_slug` attribute.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Reserved_ipv6PostResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: Reserved_ipv6_create, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Reserved_ipv6PostResponse | undefined>;
    /**
     * To list all of the reserved IPv6s available on your account, send a GET request to `/v2/reserved_ipv6`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<Reserved_ipv6RequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * On creation, a reserved IPv6 must be reserved to a region.* To create a new reserved IPv6 reserved to a region, send a POST request to  `/v2/reserved_ipv6` with the `region_slug` attribute.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: Reserved_ipv6_create, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * To list all of the reserved IPv6s available on your account, send a GET request to `/v2/reserved_ipv6`.
 */
export interface Reserved_ipv6RequestBuilderGetQueryParameters {
    /**
     * Which 'page' of paginated results to return.
     */
    page?: number;
    /**
     * Number of items returned per page
     */
    perPage?: number;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReserved_ipv6GetResponse(writer: SerializationWriter, reserved_ipv6GetResponse: Partial<Reserved_ipv6GetResponse> | undefined | null = {}) : void {
    if (reserved_ipv6GetResponse) {
        writer.writeObjectValue<Page_links>("links", reserved_ipv6GetResponse.links, serializePage_links);
        writer.writeObjectValue<Meta_properties>("meta", reserved_ipv6GetResponse.meta, serializeMeta_properties);
        writer.writeCollectionOfObjectValues<Reserved_ipv6GetResponse_reserved_ipv6s>("reserved_ipv6s", reserved_ipv6GetResponse.reservedIpv6s, serializeReserved_ipv6GetResponse_reserved_ipv6s);
        writer.writeAdditionalData(reserved_ipv6GetResponse.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReserved_ipv6GetResponse_reserved_ipv6s(writer: SerializationWriter, reserved_ipv6GetResponse_reserved_ipv6s: Partial<Reserved_ipv6GetResponse_reserved_ipv6s> | undefined | null = {}) : void {
    if (reserved_ipv6GetResponse_reserved_ipv6s) {
        writer.writeObjectValue<Droplet>("droplet", reserved_ipv6GetResponse_reserved_ipv6s.droplet, serializeDroplet);
        writer.writeStringValue("ip", reserved_ipv6GetResponse_reserved_ipv6s.ip);
        writer.writeStringValue("region_slug", reserved_ipv6GetResponse_reserved_ipv6s.regionSlug);
        writer.writeDateValue("reserved_at", reserved_ipv6GetResponse_reserved_ipv6s.reservedAt);
        writer.writeAdditionalData(reserved_ipv6GetResponse_reserved_ipv6s.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReserved_ipv6PostResponse(writer: SerializationWriter, reserved_ipv6PostResponse: Partial<Reserved_ipv6PostResponse> | undefined | null = {}) : void {
    if (reserved_ipv6PostResponse) {
        writer.writeObjectValue<Reserved_ipv6PostResponse_reserved_ipv6>("reserved_ipv6", reserved_ipv6PostResponse.reservedIpv6, serializeReserved_ipv6PostResponse_reserved_ipv6);
        writer.writeAdditionalData(reserved_ipv6PostResponse.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReserved_ipv6PostResponse_reserved_ipv6(writer: SerializationWriter, reserved_ipv6PostResponse_reserved_ipv6: Partial<Reserved_ipv6PostResponse_reserved_ipv6> | undefined | null = {}) : void {
    if (reserved_ipv6PostResponse_reserved_ipv6) {
        writer.writeStringValue("ip", reserved_ipv6PostResponse_reserved_ipv6.ip);
        writer.writeStringValue("region_slug", reserved_ipv6PostResponse_reserved_ipv6.regionSlug);
        writer.writeDateValue("reserved_at", reserved_ipv6PostResponse_reserved_ipv6.reservedAt);
        writer.writeAdditionalData(reserved_ipv6PostResponse_reserved_ipv6.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const Reserved_ipv6RequestBuilderUriTemplate = "{+baseurl}/v2/reserved_ipv6{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const Reserved_ipv6RequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Reserved_ipv6RequestBuilderNavigationMetadata: Record<Exclude<keyof Reserved_ipv6RequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byReserved_ipv6: {
        requestsMetadata: WithReserved_ipv6ItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithReserved_ipv6ItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["reserved_ipv6"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Reserved_ipv6RequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Reserved_ipv6RequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createReserved_ipv6GetResponseFromDiscriminatorValue,
        queryParametersMapper: Reserved_ipv6RequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: Reserved_ipv6RequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createReserved_ipv6PostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeReserved_ipv6_create,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
