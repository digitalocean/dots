/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, deserializeIntoAction, deserializeIntoReserved_ipv6_action_assign, deserializeIntoReserved_ipv6_action_unassign, serializeAction, serializeReserved_ipv6_action_assign, serializeReserved_ipv6_action_unassign } from '../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reserved_ipv6_action_assign | Reserved_ipv6_action_unassign}
 */
// @ts-ignore
export function createActionsPostRequestBodyFromDiscriminatorValue(parseNode) {
    return deserializeIntoActionsPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ActionsPostResponse_action}
 */
// @ts-ignore
export function createActionsPostResponse_actionFromDiscriminatorValue(parseNode) {
    return deserializeIntoActionsPostResponse_action;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ActionsPostResponse}
 */
// @ts-ignore
export function createActionsPostResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoActionsPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoActionsPostRequestBody(actionsPostRequestBody = {}) {
    return {
        ...deserializeIntoReserved_ipv6_action_assign(actionsPostRequestBody),
        ...deserializeIntoReserved_ipv6_action_unassign(actionsPostRequestBody),
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoActionsPostResponse(actionsPostResponse = {}) {
    return {
        "action": n => { actionsPostResponse.action = n.getObjectValue(createActionsPostResponse_actionFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoActionsPostResponse_action(actionsPostResponse_action = {}) {
    return {
        ...deserializeIntoAction(actionsPostResponse_action),
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeActionsPostRequestBody(writer, actionsPostRequestBody = {}) {
    serializeReserved_ipv6_action_assign(writer, actionsPostRequestBody);
    serializeReserved_ipv6_action_unassign(writer, actionsPostRequestBody);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeActionsPostResponse(writer, actionsPostResponse = {}) {
    if (actionsPostResponse) {
        writer.writeObjectValue("action", actionsPostResponse.action, serializeActionsPostResponse_action);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeActionsPostResponse_action(writer, actionsPostResponse_action = {}) {
    if (actionsPostResponse_action) {
        serializeAction(writer, actionsPostResponse_action);
    }
}
/**
 * Uri template for the request builder.
 */
export const ActionsRequestBuilderUriTemplate = "{+baseurl}/v2/reserved_ipv6/{reserved_ipv6}/actions";
/**
 * Metadata for all the requests in the request builder.
 */
export const ActionsRequestBuilderRequestsMetadata = {
    post: {
        uriTemplate: ActionsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createActionsPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeActionsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
