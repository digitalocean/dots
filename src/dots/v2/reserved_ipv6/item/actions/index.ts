/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createReserved_ipv6_action_assignFromDiscriminatorValue, createReserved_ipv6_action_unassignFromDiscriminatorValue, deserializeIntoAction, deserializeIntoReserved_ipv6_action_assign, deserializeIntoReserved_ipv6_action_unassign, serializeAction, serializeReserved_ipv6_action_assign, serializeReserved_ipv6_action_unassign, type Action, type ErrorEscaped, type Reserved_ipv6_action_assign, type Reserved_ipv6_action_unassign } from '../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

export type ActionsPostRequestBody = Reserved_ipv6_action_assign | Reserved_ipv6_action_unassign;
export interface ActionsPostResponse extends Parsable {
    /**
     * The action property
     */
    action?: ActionsPostResponse_action | null;
}
export interface ActionsPostResponse_action extends Action, Parsable {
}
/**
 * Builds and executes requests for operations under /v2/reserved_ipv6/{reserved_ipv6}/actions
 */
export interface ActionsRequestBuilder extends BaseRequestBuilder<ActionsRequestBuilder> {
    /**
     * To initiate an action on a reserved IPv6 send a POST request to`/v2/reserved_ipv6/$RESERVED_IPV6/actions`. In the JSON body to the request,set the `type` attribute to on of the supported action types:| Action     | Details|------------|--------| `assign`   | Assigns a reserved IPv6 to a Droplet| `unassign` | Unassign a reserved IPv6 from a Droplet
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ActionsPostResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: Reserved_ipv6_action_assign | Reserved_ipv6_action_unassign, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ActionsPostResponse | undefined>;
    /**
     * To initiate an action on a reserved IPv6 send a POST request to`/v2/reserved_ipv6/$RESERVED_IPV6/actions`. In the JSON body to the request,set the `type` attribute to on of the supported action types:| Action     | Details|------------|--------| `assign`   | Assigns a reserved IPv6 to a Droplet| `unassign` | Unassign a reserved IPv6 from a Droplet
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: Reserved_ipv6_action_assign | Reserved_ipv6_action_unassign, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reserved_ipv6_action_assign | Reserved_ipv6_action_unassign}
 */
// @ts-ignore
export function createActionsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoActionsPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ActionsPostResponse_action}
 */
// @ts-ignore
export function createActionsPostResponse_actionFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoActionsPostResponse_action;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ActionsPostResponse}
 */
// @ts-ignore
export function createActionsPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoActionsPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoActionsPostRequestBody(actionsPostRequestBody: Partial<Reserved_ipv6_action_assign | Reserved_ipv6_action_unassign> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoReserved_ipv6_action_assign(actionsPostRequestBody as Reserved_ipv6_action_assign),
        ...deserializeIntoReserved_ipv6_action_unassign(actionsPostRequestBody as Reserved_ipv6_action_unassign),
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoActionsPostResponse(actionsPostResponse: Partial<ActionsPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "action": n => { actionsPostResponse.action = n.getObjectValue<ActionsPostResponse_action>(createActionsPostResponse_actionFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoActionsPostResponse_action(actionsPostResponse_action: Partial<ActionsPostResponse_action> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoAction(actionsPostResponse_action),
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeActionsPostRequestBody(writer: SerializationWriter, actionsPostRequestBody: Partial<Reserved_ipv6_action_assign | Reserved_ipv6_action_unassign> | undefined | null = {}) : void {
    serializeReserved_ipv6_action_assign(writer, actionsPostRequestBody as Reserved_ipv6_action_assign);
    serializeReserved_ipv6_action_unassign(writer, actionsPostRequestBody as Reserved_ipv6_action_unassign);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeActionsPostResponse(writer: SerializationWriter, actionsPostResponse: Partial<ActionsPostResponse> | undefined | null = {}) : void {
    if (actionsPostResponse) {
        writer.writeObjectValue<ActionsPostResponse_action>("action", actionsPostResponse.action, serializeActionsPostResponse_action);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeActionsPostResponse_action(writer: SerializationWriter, actionsPostResponse_action: Partial<ActionsPostResponse_action> | undefined | null = {}) : void {
    if (actionsPostResponse_action) {
        serializeAction(writer, actionsPostResponse_action)
    }
}
/**
 * Uri template for the request builder.
 */
export const ActionsRequestBuilderUriTemplate = "{+baseurl}/v2/reserved_ipv6/{reserved_ipv6}/actions";
/**
 * Metadata for all the requests in the request builder.
 */
export const ActionsRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: ActionsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createActionsPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeActionsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
