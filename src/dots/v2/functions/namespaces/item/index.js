/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createNamespace_infoFromDiscriminatorValue, serializeNamespace_info } from '../../../../models/index.js';
// @ts-ignore
import { TriggersRequestBuilderNavigationMetadata, TriggersRequestBuilderRequestsMetadata } from './triggers/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithNamespace_GetResponse}
 */
// @ts-ignore
export function createWithNamespace_GetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithNamespace_GetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithNamespace_GetResponse(withNamespace_GetResponse = {}) {
    return {
        "namespace": n => { withNamespace_GetResponse.namespace = n.getObjectValue(createNamespace_infoFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithNamespace_GetResponse(writer, withNamespace_GetResponse = {}) {
    if (withNamespace_GetResponse) {
        writer.writeObjectValue("namespace", withNamespace_GetResponse.namespace, serializeNamespace_info);
    }
}
/**
 * Uri template for the request builder.
 */
export const WithNamespace_ItemRequestBuilderUriTemplate = "{+baseurl}/v2/functions/namespaces/{namespace_id}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithNamespace_ItemRequestBuilderNavigationMetadata = {
    triggers: {
        requestsMetadata: TriggersRequestBuilderRequestsMetadata,
        navigationMetadata: TriggersRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithNamespace_ItemRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: WithNamespace_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithNamespace_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            403: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithNamespace_GetResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
