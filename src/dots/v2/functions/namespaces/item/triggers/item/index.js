/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createTrigger_infoFromDiscriminatorValue, serializeTrigger_info, serializeUpdate_trigger } from '../../../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithTrigger_nameGetResponse}
 */
// @ts-ignore
export function createWithTrigger_nameGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithTrigger_nameGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithTrigger_namePutResponse}
 */
// @ts-ignore
export function createWithTrigger_namePutResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithTrigger_namePutResponse;
}
/**
 * The deserialization information for the current model
 * @param WithTrigger_nameGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithTrigger_nameGetResponse(withTrigger_nameGetResponse = {}) {
    return {
        "trigger": n => { withTrigger_nameGetResponse.trigger = n.getObjectValue(createTrigger_infoFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @param WithTrigger_namePutResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithTrigger_namePutResponse(withTrigger_namePutResponse = {}) {
    return {
        "trigger": n => { withTrigger_namePutResponse.trigger = n.getObjectValue(createTrigger_infoFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithTrigger_nameGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithTrigger_nameGetResponse(writer, withTrigger_nameGetResponse = {}, isSerializingDerivedType = false) {
    if (!withTrigger_nameGetResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeObjectValue("trigger", withTrigger_nameGetResponse.trigger, serializeTrigger_info);
    writer.writeAdditionalData(withTrigger_nameGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithTrigger_namePutResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithTrigger_namePutResponse(writer, withTrigger_namePutResponse = {}, isSerializingDerivedType = false) {
    if (!withTrigger_namePutResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeObjectValue("trigger", withTrigger_namePutResponse.trigger, serializeTrigger_info);
    writer.writeAdditionalData(withTrigger_namePutResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const WithTrigger_nameItemRequestBuilderUriTemplate = "{+baseurl}/v2/functions/namespaces/{namespace_id}/triggers/{trigger_name}";
/**
 * Metadata for all the requests in the request builder.
 */
export const WithTrigger_nameItemRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: WithTrigger_nameItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithTrigger_nameItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithTrigger_nameGetResponseFromDiscriminatorValue,
    },
    put: {
        uriTemplate: WithTrigger_nameItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createErrorEscapedFromDiscriminatorValue,
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithTrigger_namePutResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUpdate_trigger,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
