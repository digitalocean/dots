/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createFirewallFromDiscriminatorValue, serializeFirewall, type ErrorEscaped, type Firewall } from '../../../models/index.js';
// @ts-ignore
import { DropletsRequestBuilderRequestsMetadata, type DropletsRequestBuilder } from './droplets/index.js';
// @ts-ignore
import { RulesRequestBuilderRequestsMetadata, type RulesRequestBuilder } from './rules/index.js';
// @ts-ignore
import { TagsRequestBuilderRequestsMetadata, type TagsRequestBuilder } from './tags/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithFirewall_GetResponse}
 */
// @ts-ignore
export function createWithFirewall_GetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithFirewall_GetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithFirewall_PutResponse}
 */
// @ts-ignore
export function createWithFirewall_PutResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithFirewall_PutResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithFirewall_GetResponse(withFirewall_GetResponse: Partial<WithFirewall_GetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "firewall": n => { withFirewall_GetResponse.firewall = n.getObjectValue<Firewall>(createFirewallFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithFirewall_PutResponse(withFirewall_PutResponse: Partial<WithFirewall_PutResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "firewall": n => { withFirewall_PutResponse.firewall = n.getObjectValue<Firewall>(createFirewallFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithFirewall_GetResponse(writer: SerializationWriter, withFirewall_GetResponse: Partial<WithFirewall_GetResponse> | undefined | null = {}) : void {
    if (withFirewall_GetResponse) {
        writer.writeObjectValue<Firewall>("firewall", withFirewall_GetResponse.firewall, serializeFirewall);
        writer.writeAdditionalData(withFirewall_GetResponse.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithFirewall_PutResponse(writer: SerializationWriter, withFirewall_PutResponse: Partial<WithFirewall_PutResponse> | undefined | null = {}) : void {
    if (withFirewall_PutResponse) {
        writer.writeObjectValue<Firewall>("firewall", withFirewall_PutResponse.firewall, serializeFirewall);
        writer.writeAdditionalData(withFirewall_PutResponse.additionalData);
    }
}
export interface WithFirewall_GetResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The firewall property
     */
    firewall?: Firewall | null;
}
/**
 * Builds and executes requests for operations under /v2/firewalls/{firewall_id}
 */
export interface WithFirewall_ItemRequestBuilder extends BaseRequestBuilder<WithFirewall_ItemRequestBuilder> {
    /**
     * The droplets property
     */
    get droplets(): DropletsRequestBuilder;
    /**
     * The rules property
     */
    get rules(): RulesRequestBuilder;
    /**
     * The tags property
     */
    get tags(): TagsRequestBuilder;
    /**
     * To delete a firewall send a DELETE request to `/v2/firewalls/$FIREWALL_ID`.No response body will be sent back, but the response code will indicatesuccess. Specifically, the response code will be a 204, which means that theaction was successful with no returned body data.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * To show information about an existing firewall, send a GET request to `/v2/firewalls/$FIREWALL_ID`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithFirewall_GetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithFirewall_GetResponse | undefined>;
    /**
     * To update the configuration of an existing firewall, send a PUT request to`/v2/firewalls/$FIREWALL_ID`. The request should contain a full representationof the firewall including existing attributes. **Note that any attributes thatare not provided will be reset to their default values.**<br><br>You must have read access (e.g. `droplet:read`) to all resources attachedto the firewall to successfully update the firewall.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithFirewall_PutResponse>}
     * @throws {ErrorEscaped} error when the service returns a 400 status code
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     put(body: Firewall, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithFirewall_PutResponse | undefined>;
    /**
     * To delete a firewall send a DELETE request to `/v2/firewalls/$FIREWALL_ID`.No response body will be sent back, but the response code will indicatesuccess. Specifically, the response code will be a 204, which means that theaction was successful with no returned body data.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To show information about an existing firewall, send a GET request to `/v2/firewalls/$FIREWALL_ID`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To update the configuration of an existing firewall, send a PUT request to`/v2/firewalls/$FIREWALL_ID`. The request should contain a full representationof the firewall including existing attributes. **Note that any attributes thatare not provided will be reset to their default values.**<br><br>You must have read access (e.g. `droplet:read`) to all resources attachedto the firewall to successfully update the firewall.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPutRequestInformation(body: Firewall, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
export interface WithFirewall_PutResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The firewall property
     */
    firewall?: Firewall | null;
}
/**
 * Uri template for the request builder.
 */
export const WithFirewall_ItemRequestBuilderUriTemplate = "{+baseurl}/v2/firewalls/{firewall_id}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithFirewall_ItemRequestBuilderNavigationMetadata: Record<Exclude<keyof WithFirewall_ItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    droplets: {
        requestsMetadata: DropletsRequestBuilderRequestsMetadata,
    },
    rules: {
        requestsMetadata: RulesRequestBuilderRequestsMetadata,
    },
    tags: {
        requestsMetadata: TagsRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithFirewall_ItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: WithFirewall_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithFirewall_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWithFirewall_GetResponseFromDiscriminatorValue,
    },
    put: {
        uriTemplate: WithFirewall_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWithFirewall_PutResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeFirewall,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
