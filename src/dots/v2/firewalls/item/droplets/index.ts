/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, type ErrorEscaped } from '../../../../models/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DropletsDeleteRequestBody}
 */
// @ts-ignore
export function createDropletsDeleteRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDropletsDeleteRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DropletsPostRequestBody}
 */
// @ts-ignore
export function createDropletsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoDropletsPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @param DropletsDeleteRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDropletsDeleteRequestBody(dropletsDeleteRequestBody: Partial<DropletsDeleteRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "droplet_ids": n => { dropletsDeleteRequestBody.dropletIds = n.getCollectionOfPrimitiveValues<number>(); },
    }
}
/**
 * The deserialization information for the current model
 * @param DropletsPostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDropletsPostRequestBody(dropletsPostRequestBody: Partial<DropletsPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "droplet_ids": n => { dropletsPostRequestBody.dropletIds = n.getCollectionOfPrimitiveValues<number>(); },
    }
}
export interface DropletsDeleteRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * An array containing the IDs of the Droplets to be removed from the firewall.
     */
    dropletIds?: number[] | null;
}
export interface DropletsPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * An array containing the IDs of the Droplets to be assigned to the firewall.
     */
    dropletIds?: number[] | null;
}
/**
 * Builds and executes requests for operations under /v2/firewalls/{firewall_id}/droplets
 */
export interface DropletsRequestBuilder extends BaseRequestBuilder<DropletsRequestBuilder> {
    /**
     * To remove a Droplet from a firewall, send a DELETE request to`/v2/firewalls/$FIREWALL_ID/droplets`. In the body of the request, there shouldbe a `droplet_ids` attribute containing a list of Droplet IDs.No response body will be sent back, but the response code will indicatesuccess. Specifically, the response code will be a 204, which means that theaction was successful with no returned body data.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ErrorEscaped} error when the service returns a 400 status code
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     delete(body: DropletsDeleteRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * To assign a Droplet to a firewall, send a POST request to`/v2/firewalls/$FIREWALL_ID/droplets`. In the body of the request, thereshould be a `droplet_ids` attribute containing a list of Droplet IDs.No response body will be sent back, but the response code will indicatesuccess. Specifically, the response code will be a 204, which means that theaction was successful with no returned body data.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ErrorEscaped} error when the service returns a 400 status code
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: DropletsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * To remove a Droplet from a firewall, send a DELETE request to`/v2/firewalls/$FIREWALL_ID/droplets`. In the body of the request, there shouldbe a `droplet_ids` attribute containing a list of Droplet IDs.No response body will be sent back, but the response code will indicatesuccess. Specifically, the response code will be a 204, which means that theaction was successful with no returned body data.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(body: DropletsDeleteRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To assign a Droplet to a firewall, send a POST request to`/v2/firewalls/$FIREWALL_ID/droplets`. In the body of the request, thereshould be a `droplet_ids` attribute containing a list of Droplet IDs.No response body will be sent back, but the response code will indicatesuccess. Specifically, the response code will be a 204, which means that theaction was successful with no returned body data.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: DropletsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param DropletsDeleteRequestBody The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDropletsDeleteRequestBody(writer: SerializationWriter, dropletsDeleteRequestBody: Partial<DropletsDeleteRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dropletsDeleteRequestBody || isSerializingDerivedType) { return; }
    writer.writeCollectionOfPrimitiveValues<number>("droplet_ids", dropletsDeleteRequestBody.dropletIds);
    writer.writeAdditionalData(dropletsDeleteRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param DropletsPostRequestBody The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDropletsPostRequestBody(writer: SerializationWriter, dropletsPostRequestBody: Partial<DropletsPostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!dropletsPostRequestBody || isSerializingDerivedType) { return; }
    writer.writeCollectionOfPrimitiveValues<number>("droplet_ids", dropletsPostRequestBody.dropletIds);
    writer.writeAdditionalData(dropletsPostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const DropletsRequestBuilderUriTemplate = "{+baseurl}/v2/firewalls/{firewall_id}/droplets";
/**
 * Metadata for all the requests in the request builder.
 */
export const DropletsRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: DropletsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDropletsDeleteRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
    post: {
        uriTemplate: DropletsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDropletsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
