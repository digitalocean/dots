/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, serializeFirewall_rules, type ErrorEscaped, type Firewall_rules } from '../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/firewalls/{firewall_id}/rules
 */
export interface RulesRequestBuilder extends BaseRequestBuilder<RulesRequestBuilder> {
    /**
     * To remove access rules from a firewall, send a DELETE request to`/v2/firewalls/$FIREWALL_ID/rules`. The body of the request may include an`inbound_rules` and/or `outbound_rules` attribute containing an array of rulesto be removed.No response body will be sent back, but the response code will indicatesuccess. Specifically, the response code will be a 204, which means that theaction was successful with no returned body data.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ErrorEscaped} error when the service returns a 400 status code
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     delete(body: Firewall_rules, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * To add additional access rules to a firewall, send a POST request to`/v2/firewalls/$FIREWALL_ID/rules`. The body of the request may include aninbound_rules and/or outbound_rules attribute containing an array of rules tobe added.No response body will be sent back, but the response code will indicatesuccess. Specifically, the response code will be a 204, which means that theaction was successful with no returned body data.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ErrorEscaped} error when the service returns a 400 status code
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: Firewall_rules, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * To remove access rules from a firewall, send a DELETE request to`/v2/firewalls/$FIREWALL_ID/rules`. The body of the request may include an`inbound_rules` and/or `outbound_rules` attribute containing an array of rulesto be removed.No response body will be sent back, but the response code will indicatesuccess. Specifically, the response code will be a 204, which means that theaction was successful with no returned body data.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(body: Firewall_rules, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To add additional access rules to a firewall, send a POST request to`/v2/firewalls/$FIREWALL_ID/rules`. The body of the request may include aninbound_rules and/or outbound_rules attribute containing an array of rules tobe added.No response body will be sent back, but the response code will indicatesuccess. Specifically, the response code will be a 204, which means that theaction was successful with no returned body data.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: Firewall_rules, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const RulesRequestBuilderUriTemplate = "{+baseurl}/v2/firewalls/{firewall_id}/rules";
/**
 * Metadata for all the requests in the request builder.
 */
export const RulesRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: RulesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeFirewall_rules,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
    post: {
        uriTemplate: RulesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeFirewall_rules,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
