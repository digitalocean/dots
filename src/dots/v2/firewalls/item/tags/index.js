/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue } from '../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TagsDeleteRequestBody}
 */
// @ts-ignore
export function createTagsDeleteRequestBodyFromDiscriminatorValue(parseNode) {
    return deserializeIntoTagsDeleteRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {TagsPostRequestBody}
 */
// @ts-ignore
export function createTagsPostRequestBodyFromDiscriminatorValue(parseNode) {
    return deserializeIntoTagsPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTagsDeleteRequestBody(tagsDeleteRequestBody = {}) {
    return {
        "tags": n => { tagsDeleteRequestBody.tags = n.getCollectionOfPrimitiveValues(); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoTagsPostRequestBody(tagsPostRequestBody = {}) {
    return {
        "tags": n => { tagsPostRequestBody.tags = n.getCollectionOfPrimitiveValues(); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTagsDeleteRequestBody(writer, tagsDeleteRequestBody = {}) {
    if (tagsDeleteRequestBody) {
        writer.writeCollectionOfPrimitiveValues("tags", tagsDeleteRequestBody.tags);
        writer.writeAdditionalData(tagsDeleteRequestBody.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeTagsPostRequestBody(writer, tagsPostRequestBody = {}) {
    if (tagsPostRequestBody) {
        writer.writeCollectionOfPrimitiveValues("tags", tagsPostRequestBody.tags);
        writer.writeAdditionalData(tagsPostRequestBody.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const TagsRequestBuilderUriTemplate = "{+baseurl}/v2/firewalls/{firewall_id}/tags";
/**
 * Metadata for all the requests in the request builder.
 */
export const TagsRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: TagsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createErrorEscapedFromDiscriminatorValue,
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeTagsDeleteRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
    post: {
        uriTemplate: TagsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createErrorEscapedFromDiscriminatorValue,
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeTagsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
