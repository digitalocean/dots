/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createFirewallFromDiscriminatorValue, serializeFirewall } from '../../../models/index.js';
// @ts-ignore
import { DropletsRequestBuilderRequestsMetadata } from './droplets/index.js';
// @ts-ignore
import { RulesRequestBuilderRequestsMetadata } from './rules/index.js';
// @ts-ignore
import { TagsRequestBuilderRequestsMetadata } from './tags/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithFirewall_GetResponse}
 */
// @ts-ignore
export function createWithFirewall_GetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithFirewall_GetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithFirewall_PutResponse}
 */
// @ts-ignore
export function createWithFirewall_PutResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithFirewall_PutResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithFirewall_GetResponse(withFirewall_GetResponse = {}) {
    return {
        "firewall": n => { withFirewall_GetResponse.firewall = n.getObjectValue(createFirewallFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithFirewall_PutResponse(withFirewall_PutResponse = {}) {
    return {
        "firewall": n => { withFirewall_PutResponse.firewall = n.getObjectValue(createFirewallFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithFirewall_GetResponse(writer, withFirewall_GetResponse = {}) {
    if (withFirewall_GetResponse) {
        writer.writeObjectValue("firewall", withFirewall_GetResponse.firewall, serializeFirewall);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithFirewall_PutResponse(writer, withFirewall_PutResponse = {}) {
    if (withFirewall_PutResponse) {
        writer.writeObjectValue("firewall", withFirewall_PutResponse.firewall, serializeFirewall);
    }
}
/**
 * Uri template for the request builder.
 */
export const WithFirewall_ItemRequestBuilderUriTemplate = "{+baseurl}/v2/firewalls/{firewall_id}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithFirewall_ItemRequestBuilderNavigationMetadata = {
    droplets: {
        requestsMetadata: DropletsRequestBuilderRequestsMetadata,
    },
    rules: {
        requestsMetadata: RulesRequestBuilderRequestsMetadata,
    },
    tags: {
        requestsMetadata: TagsRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithFirewall_ItemRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: WithFirewall_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithFirewall_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithFirewall_GetResponseFromDiscriminatorValue,
    },
    put: {
        uriTemplate: WithFirewall_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            400: createErrorEscapedFromDiscriminatorValue,
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithFirewall_PutResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeFirewall,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
