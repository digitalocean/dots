/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, serializeOneClicks_create, type ErrorEscaped, type OneClicks_create } from '../../../models/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {KubernetesPostResponse}
 */
// @ts-ignore
export function createKubernetesPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoKubernetesPostResponse;
}
/**
 * The deserialization information for the current model
 * @param KubernetesPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoKubernetesPostResponse(kubernetesPostResponse: Partial<KubernetesPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "message": n => { kubernetesPostResponse.message = n.getStringValue(); },
    }
}
export interface KubernetesPostResponse extends AdditionalDataHolder, Parsable {
    /**
     * A message about the result of the request.
     */
    message?: string | null;
}
/**
 * Builds and executes requests for operations under /v2/1-clicks/kubernetes
 */
export interface KubernetesRequestBuilder extends BaseRequestBuilder<KubernetesRequestBuilder> {
    /**
     * To install a Kubernetes 1-Click application on a cluster, send a POST request to`/v2/1-clicks/kubernetes`. The `addon_slugs` and `cluster_uuid` must be provided as bodyparameter in order to specify which 1-Click application(s) to install. To list all available1-Click Kubernetes applications, send a request to `/v2/1-clicks?type=kubernetes`.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<KubernetesPostResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: OneClicks_create, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<KubernetesPostResponse | undefined>;
    /**
     * To install a Kubernetes 1-Click application on a cluster, send a POST request to`/v2/1-clicks/kubernetes`. The `addon_slugs` and `cluster_uuid` must be provided as bodyparameter in order to specify which 1-Click application(s) to install. To list all available1-Click Kubernetes applications, send a request to `/v2/1-clicks?type=kubernetes`.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: OneClicks_create, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param KubernetesPostResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeKubernetesPostResponse(writer: SerializationWriter, kubernetesPostResponse: Partial<KubernetesPostResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!kubernetesPostResponse || isSerializingDerivedType) { return; }
    writer.writeStringValue("message", kubernetesPostResponse.message);
    writer.writeAdditionalData(kubernetesPostResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const KubernetesRequestBuilderUriTemplate = "{+baseurl}/v2/1-clicks/kubernetes";
/**
 * Metadata for all the requests in the request builder.
 */
export const KubernetesRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: KubernetesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createKubernetesPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeOneClicks_create,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
