/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createCredentialsFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, type Credentials, type ErrorEscaped } from '../../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/kubernetes/clusters/{cluster_id}/credentials
 */
export interface CredentialsRequestBuilder extends BaseRequestBuilder<CredentialsRequestBuilder> {
    /**
     * This endpoint returns a JSON object . It can be used to programmaticallyconstruct Kubernetes clients which cannot parse kubeconfig files.The resulting JSON object contains token-based authentication for clusterssupporting it, and certificate-based authentication otherwise. For a list ofsupported versions and more information, see "[How to Connect to a DigitalOceanKubernetes Cluster](https://docs.digitalocean.com/products/kubernetes/how-to/connect-to-cluster/)".To retrieve credentials for accessing a Kubernetes cluster, send a GETrequest to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/credentials`.Clusters supporting token-based authentication may define an expiration bypassing a duration in seconds as a query parameter to`/v2/kubernetes/clusters/$K8S_CLUSTER_ID/credentials?expiry_seconds=$DURATION_IN_SECONDS`.If not set or 0, then the token will have a 7 day expiry. The query parameterhas no impact in certificate-based authentication.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Credentials>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<CredentialsRequestBuilderGetQueryParameters> | undefined) : Promise<Credentials | undefined>;
    /**
     * This endpoint returns a JSON object . It can be used to programmaticallyconstruct Kubernetes clients which cannot parse kubeconfig files.The resulting JSON object contains token-based authentication for clusterssupporting it, and certificate-based authentication otherwise. For a list ofsupported versions and more information, see "[How to Connect to a DigitalOceanKubernetes Cluster](https://docs.digitalocean.com/products/kubernetes/how-to/connect-to-cluster/)".To retrieve credentials for accessing a Kubernetes cluster, send a GETrequest to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/credentials`.Clusters supporting token-based authentication may define an expiration bypassing a duration in seconds as a query parameter to`/v2/kubernetes/clusters/$K8S_CLUSTER_ID/credentials?expiry_seconds=$DURATION_IN_SECONDS`.If not set or 0, then the token will have a 7 day expiry. The query parameterhas no impact in certificate-based authentication.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<CredentialsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * This endpoint returns a JSON object . It can be used to programmaticallyconstruct Kubernetes clients which cannot parse kubeconfig files.The resulting JSON object contains token-based authentication for clusterssupporting it, and certificate-based authentication otherwise. For a list ofsupported versions and more information, see "[How to Connect to a DigitalOceanKubernetes Cluster](https://docs.digitalocean.com/products/kubernetes/how-to/connect-to-cluster/)".To retrieve credentials for accessing a Kubernetes cluster, send a GETrequest to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/credentials`.Clusters supporting token-based authentication may define an expiration bypassing a duration in seconds as a query parameter to`/v2/kubernetes/clusters/$K8S_CLUSTER_ID/credentials?expiry_seconds=$DURATION_IN_SECONDS`.If not set or 0, then the token will have a 7 day expiry. The query parameterhas no impact in certificate-based authentication.
 */
export interface CredentialsRequestBuilderGetQueryParameters {
    /**
     * The duration in seconds that the returned Kubernetes credentials will be valid. If not set or 0, the credentials will have a 7 day expiry.
     */
    expirySeconds?: number;
}
/**
 * Uri template for the request builder.
 */
export const CredentialsRequestBuilderUriTemplate = "{+baseurl}/v2/kubernetes/clusters/{cluster_id}/credentials{?expiry_seconds*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const CredentialsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expirySeconds": "expiry_seconds",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const CredentialsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: CredentialsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createCredentialsFromDiscriminatorValue,
        queryParametersMapper: CredentialsRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
