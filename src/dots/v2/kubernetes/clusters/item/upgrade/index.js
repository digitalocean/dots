/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue } from '../../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UpgradePostRequestBody}
 */
// @ts-ignore
export function createUpgradePostRequestBodyFromDiscriminatorValue(parseNode) {
    return deserializeIntoUpgradePostRequestBody;
}
/**
 * The deserialization information for the current model
 * @param UpgradePostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUpgradePostRequestBody(upgradePostRequestBody = {}) {
    return {
        "version": n => { upgradePostRequestBody.version = n.getStringValue(); },
    };
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param UpgradePostRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUpgradePostRequestBody(writer, upgradePostRequestBody = {}, isSerializingDerivedType = false) {
    if (!upgradePostRequestBody || isSerializingDerivedType) {
        return;
    }
    writer.writeStringValue("version", upgradePostRequestBody.version);
    writer.writeAdditionalData(upgradePostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const UpgradeRequestBuilderUriTemplate = "{+baseurl}/v2/kubernetes/clusters/{cluster_id}/upgrade";
/**
 * Metadata for all the requests in the request builder.
 */
export const UpgradeRequestBuilderRequestsMetadata = {
    post: {
        uriTemplate: UpgradeRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUpgradePostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
