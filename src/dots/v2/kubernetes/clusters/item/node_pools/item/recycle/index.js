/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue } from '../../../../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RecyclePostRequestBody}
 */
// @ts-ignore
export function createRecyclePostRequestBodyFromDiscriminatorValue(parseNode) {
    return deserializeIntoRecyclePostRequestBody;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRecyclePostRequestBody(recyclePostRequestBody = {}) {
    return {
        "nodes": n => { recyclePostRequestBody.nodes = n.getCollectionOfPrimitiveValues(); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRecyclePostRequestBody(writer, recyclePostRequestBody = {}) {
    if (recyclePostRequestBody) {
        writer.writeCollectionOfPrimitiveValues("nodes", recyclePostRequestBody.nodes);
        writer.writeAdditionalData(recyclePostRequestBody.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const RecycleRequestBuilderUriTemplate = "{+baseurl}/v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}/recycle";
/**
 * Metadata for all the requests in the request builder.
 */
export const RecycleRequestBuilderRequestsMetadata = {
    post: {
        uriTemplate: RecycleRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeRecyclePostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
