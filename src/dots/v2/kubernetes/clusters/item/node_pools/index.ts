/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createKubernetes_node_poolFromDiscriminatorValue, serializeKubernetes_node_pool, type ErrorEscaped, type Kubernetes_node_pool } from '../../../../../models/index.js';
// @ts-ignore
import { type WithNode_pool_ItemRequestBuilder, WithNode_pool_ItemRequestBuilderNavigationMetadata, WithNode_pool_ItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Guid, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Node_poolsGetResponse}
 */
// @ts-ignore
export function createNode_poolsGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoNode_poolsGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Node_poolsPostResponse}
 */
// @ts-ignore
export function createNode_poolsPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoNode_poolsPostResponse;
}
/**
 * The deserialization information for the current model
 * @param Node_poolsGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoNode_poolsGetResponse(node_poolsGetResponse: Partial<Node_poolsGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "node_pools": n => { node_poolsGetResponse.nodePools = n.getCollectionOfObjectValues<Kubernetes_node_pool>(createKubernetes_node_poolFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Node_poolsPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoNode_poolsPostResponse(node_poolsPostResponse: Partial<Node_poolsPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "node_pool": n => { node_poolsPostResponse.nodePool = n.getObjectValue<Kubernetes_node_pool>(createKubernetes_node_poolFromDiscriminatorValue); },
    }
}
export interface Node_poolsGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * The node_pools property
     */
    nodePools?: Kubernetes_node_pool[] | null;
}
export interface Node_poolsPostResponse extends AdditionalDataHolder, Parsable {
    /**
     * The node_pool property
     */
    nodePool?: Kubernetes_node_pool | null;
}
/**
 * Builds and executes requests for operations under /v2/kubernetes/clusters/{cluster_id}/node_pools
 */
export interface Node_poolsRequestBuilder extends BaseRequestBuilder<Node_poolsRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.v2.kubernetes.clusters.item.node_pools.item collection
     * @param node_pool_id A unique ID that can be used to reference a Kubernetes node pool.
     * @returns {WithNode_pool_ItemRequestBuilder}
     */
     byNode_pool_id(node_pool_id: Guid) : WithNode_pool_ItemRequestBuilder;
    /**
     * To list all of the node pools in a Kubernetes clusters, send a GET request to`/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Node_poolsGetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Node_poolsGetResponse | undefined>;
    /**
     * To add an additional node pool to a Kubernetes clusters, send a POST requestto `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools` with the followingattributes.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Node_poolsPostResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: Kubernetes_node_pool, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Node_poolsPostResponse | undefined>;
    /**
     * To list all of the node pools in a Kubernetes clusters, send a GET request to`/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To add an additional node pool to a Kubernetes clusters, send a POST requestto `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools` with the followingattributes.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: Kubernetes_node_pool, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Node_poolsGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeNode_poolsGetResponse(writer: SerializationWriter, node_poolsGetResponse: Partial<Node_poolsGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!node_poolsGetResponse || isSerializingDerivedType) { return; }
    writer.writeCollectionOfObjectValues<Kubernetes_node_pool>("node_pools", node_poolsGetResponse.nodePools, serializeKubernetes_node_pool);
    writer.writeAdditionalData(node_poolsGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Node_poolsPostResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeNode_poolsPostResponse(writer: SerializationWriter, node_poolsPostResponse: Partial<Node_poolsPostResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!node_poolsPostResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<Kubernetes_node_pool>("node_pool", node_poolsPostResponse.nodePool, serializeKubernetes_node_pool);
    writer.writeAdditionalData(node_poolsPostResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const Node_poolsRequestBuilderUriTemplate = "{+baseurl}/v2/kubernetes/clusters/{cluster_id}/node_pools";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Node_poolsRequestBuilderNavigationMetadata: Record<Exclude<keyof Node_poolsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byNode_pool_id: {
        requestsMetadata: WithNode_pool_ItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithNode_pool_ItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["node_pool_id"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Node_poolsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Node_poolsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createNode_poolsGetResponseFromDiscriminatorValue,
    },
    post: {
        uriTemplate: Node_poolsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createNode_poolsPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeKubernetes_node_pool,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
