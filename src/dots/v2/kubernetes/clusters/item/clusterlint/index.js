/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createClusterlint_resultsFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeClusterlint_request } from '../../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ClusterlintPostResponse}
 */
// @ts-ignore
export function createClusterlintPostResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoClusterlintPostResponse;
}
/**
 * The deserialization information for the current model
 * @param ClusterlintPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoClusterlintPostResponse(clusterlintPostResponse = {}) {
    return {
        "run_id": n => { clusterlintPostResponse.runId = n.getStringValue(); },
    };
}
/**
 * Serializes information the current object
 * @param ClusterlintPostResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeClusterlintPostResponse(writer, clusterlintPostResponse = {}, isSerializingDerivedType = false) {
    if (!clusterlintPostResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeStringValue("run_id", clusterlintPostResponse.runId);
    writer.writeAdditionalData(clusterlintPostResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const ClusterlintRequestBuilderUriTemplate = "{+baseurl}/v2/kubernetes/clusters/{cluster_id}/clusterlint{?run_id*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ClusterlintRequestBuilderGetQueryParametersMapper = {
    "runId": "run_id",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ClusterlintRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: ClusterlintRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createClusterlint_resultsFromDiscriminatorValue,
        queryParametersMapper: ClusterlintRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: ClusterlintRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createClusterlintPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeClusterlint_request,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
