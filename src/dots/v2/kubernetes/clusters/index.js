/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createCluster_readFromDiscriminatorValue, createClusterFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, serializeCluster, serializeCluster_read, serializeMeta_properties, serializePage_links } from '../../../models/index.js';
// @ts-ignore
import { WithCluster_ItemRequestBuilderNavigationMetadata, WithCluster_ItemRequestBuilderRequestsMetadata } from './item/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ClustersGetResponse}
 */
// @ts-ignore
export function createClustersGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoClustersGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ClustersPostResponse}
 */
// @ts-ignore
export function createClustersPostResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoClustersPostResponse;
}
/**
 * The deserialization information for the current model
 * @param ClustersGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoClustersGetResponse(clustersGetResponse = {}) {
    return {
        "kubernetes_clusters": n => { clustersGetResponse.kubernetesClusters = n.getCollectionOfObjectValues(createCluster_readFromDiscriminatorValue); },
        "links": n => { clustersGetResponse.links = n.getObjectValue(createPage_linksFromDiscriminatorValue); },
        "meta": n => { clustersGetResponse.meta = n.getObjectValue(createMeta_propertiesFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @param ClustersPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoClustersPostResponse(clustersPostResponse = {}) {
    return {
        "kubernetes_cluster": n => { clustersPostResponse.kubernetesCluster = n.getObjectValue(createClusterFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param ClustersGetResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeClustersGetResponse(writer, clustersGetResponse = {}, isSerializingDerivedType = false) {
    if (!clustersGetResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeCollectionOfObjectValues("kubernetes_clusters", clustersGetResponse.kubernetesClusters, serializeCluster_read);
    writer.writeObjectValue("links", clustersGetResponse.links, serializePage_links);
    writer.writeObjectValue("meta", clustersGetResponse.meta, serializeMeta_properties);
    writer.writeAdditionalData(clustersGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param ClustersPostResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeClustersPostResponse(writer, clustersPostResponse = {}, isSerializingDerivedType = false) {
    if (!clustersPostResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeObjectValue("kubernetes_cluster", clustersPostResponse.kubernetesCluster, serializeCluster);
    writer.writeAdditionalData(clustersPostResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const ClustersRequestBuilderUriTemplate = "{+baseurl}/v2/kubernetes/clusters{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ClustersRequestBuilderGetQueryParametersMapper = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ClustersRequestBuilderNavigationMetadata = {
    byCluster_id: {
        requestsMetadata: WithCluster_ItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithCluster_ItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["cluster_id"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ClustersRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: ClustersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createClustersGetResponseFromDiscriminatorValue,
        queryParametersMapper: ClustersRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: ClustersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createClustersPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeCluster,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
