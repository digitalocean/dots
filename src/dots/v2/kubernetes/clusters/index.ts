/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createClusterFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, serializeCluster, serializeMeta_properties, serializePage_links, type Cluster, type ErrorEscaped, type Meta_properties, type Page_links } from '../../../models/index.js';
// @ts-ignore
import { type WithCluster_ItemRequestBuilder, WithCluster_ItemRequestBuilderNavigationMetadata, WithCluster_ItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Guid, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ClustersGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The kubernetes_clusters property
     */
    kubernetesClusters?: Cluster[] | null;
    /**
     * The links property
     */
    links?: Page_links | null;
    /**
     * The meta property
     */
    meta?: Meta_properties | null;
}
export interface ClustersPostResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The kubernetes_cluster property
     */
    kubernetesCluster?: Cluster | null;
}
/**
 * Builds and executes requests for operations under /v2/kubernetes/clusters
 */
export interface ClustersRequestBuilder extends BaseRequestBuilder<ClustersRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.v2.kubernetes.clusters.item collection
     * @param cluster_id A unique ID that can be used to reference a Kubernetes cluster.
     * @returns {WithCluster_ItemRequestBuilder}
     */
     byCluster_id(cluster_id: Guid) : WithCluster_ItemRequestBuilder;
    /**
     * To list all of the Kubernetes clusters on your account, send a GET requestto `/v2/kubernetes/clusters`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ClustersGetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<ClustersRequestBuilderGetQueryParameters> | undefined) : Promise<ClustersGetResponse | undefined>;
    /**
     * To create a new Kubernetes cluster, send a POST request to`/v2/kubernetes/clusters`. The request must contain at least one node poolwith at least one worker.The request may contain a maintenance window policy describing a time periodwhen disruptive maintenance tasks may be carried out. Omitting the policyimplies that a window will be chosen automatically. See[here](https://docs.digitalocean.com/products/kubernetes/how-to/upgrade-cluster/)for details.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ClustersPostResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: Cluster, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ClustersPostResponse | undefined>;
    /**
     * To list all of the Kubernetes clusters on your account, send a GET requestto `/v2/kubernetes/clusters`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ClustersRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * To create a new Kubernetes cluster, send a POST request to`/v2/kubernetes/clusters`. The request must contain at least one node poolwith at least one worker.The request may contain a maintenance window policy describing a time periodwhen disruptive maintenance tasks may be carried out. Omitting the policyimplies that a window will be chosen automatically. See[here](https://docs.digitalocean.com/products/kubernetes/how-to/upgrade-cluster/)for details.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: Cluster, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * To list all of the Kubernetes clusters on your account, send a GET requestto `/v2/kubernetes/clusters`.
 */
export interface ClustersRequestBuilderGetQueryParameters {
    /**
     * Which 'page' of paginated results to return.
     */
    page?: number;
    /**
     * Number of items returned per page
     */
    perPage?: number;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ClustersGetResponse}
 */
// @ts-ignore
export function createClustersGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoClustersGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ClustersPostResponse}
 */
// @ts-ignore
export function createClustersPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoClustersPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoClustersGetResponse(clustersGetResponse: Partial<ClustersGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "kubernetes_clusters": n => { clustersGetResponse.kubernetesClusters = n.getCollectionOfObjectValues<Cluster>(createClusterFromDiscriminatorValue); },
        "links": n => { clustersGetResponse.links = n.getObjectValue<Page_links>(createPage_linksFromDiscriminatorValue); },
        "meta": n => { clustersGetResponse.meta = n.getObjectValue<Meta_properties>(createMeta_propertiesFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoClustersPostResponse(clustersPostResponse: Partial<ClustersPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "kubernetes_cluster": n => { clustersPostResponse.kubernetesCluster = n.getObjectValue<Cluster>(createClusterFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeClustersGetResponse(writer: SerializationWriter, clustersGetResponse: Partial<ClustersGetResponse> | undefined | null = {}) : void {
    if (clustersGetResponse) {
        writer.writeCollectionOfObjectValues<Cluster>("kubernetes_clusters", clustersGetResponse.kubernetesClusters, serializeCluster);
        writer.writeObjectValue<Page_links>("links", clustersGetResponse.links, serializePage_links);
        writer.writeObjectValue<Meta_properties>("meta", clustersGetResponse.meta, serializeMeta_properties);
        writer.writeAdditionalData(clustersGetResponse.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeClustersPostResponse(writer: SerializationWriter, clustersPostResponse: Partial<ClustersPostResponse> | undefined | null = {}) : void {
    if (clustersPostResponse) {
        writer.writeObjectValue<Cluster>("kubernetes_cluster", clustersPostResponse.kubernetesCluster, serializeCluster);
        writer.writeAdditionalData(clustersPostResponse.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const ClustersRequestBuilderUriTemplate = "{+baseurl}/v2/kubernetes/clusters{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ClustersRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ClustersRequestBuilderNavigationMetadata: Record<Exclude<keyof ClustersRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byCluster_id: {
        requestsMetadata: WithCluster_ItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithCluster_ItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["cluster_id"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ClustersRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ClustersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createClustersGetResponseFromDiscriminatorValue,
        queryParametersMapper: ClustersRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: ClustersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createClustersPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeCluster,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
