/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createAction_linkFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, createReserved_ipFromDiscriminatorValue, deserializeIntoReserved_ip_createMember1, deserializeIntoReserved_ip_createMember2, serializeAction_link, serializeMeta_properties, serializePage_links, serializeReserved_ip, serializeReserved_ip_createMember1, serializeReserved_ip_createMember2 } from '../../models/index.js';
// @ts-ignore
import { WithReserved_ipItemRequestBuilderNavigationMetadata, WithReserved_ipItemRequestBuilderRequestsMetadata } from './item/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reserved_ip_createMember1 | Reserved_ip_createMember2}
 */
// @ts-ignore
export function createReserved_ip_createFromDiscriminatorValue(parseNode) {
    return deserializeIntoReserved_ip_create;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reserved_ipsGetResponse}
 */
// @ts-ignore
export function createReserved_ipsGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoReserved_ipsGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reserved_ipsPostResponse_links}
 */
// @ts-ignore
export function createReserved_ipsPostResponse_linksFromDiscriminatorValue(parseNode) {
    return deserializeIntoReserved_ipsPostResponse_links;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reserved_ipsPostResponse}
 */
// @ts-ignore
export function createReserved_ipsPostResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoReserved_ipsPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReserved_ip_create(reserved_ip_create = {}) {
    return {
        ...deserializeIntoReserved_ip_createMember1(reserved_ip_create),
        ...deserializeIntoReserved_ip_createMember2(reserved_ip_create),
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReserved_ipsGetResponse(reserved_ipsGetResponse = {}) {
    return {
        "links": n => { reserved_ipsGetResponse.links = n.getObjectValue(createPage_linksFromDiscriminatorValue); },
        "meta": n => { reserved_ipsGetResponse.meta = n.getObjectValue(createMeta_propertiesFromDiscriminatorValue); },
        "reserved_ips": n => { reserved_ipsGetResponse.reservedIps = n.getCollectionOfObjectValues(createReserved_ipFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReserved_ipsPostResponse(reserved_ipsPostResponse = {}) {
    return {
        "links": n => { reserved_ipsPostResponse.links = n.getObjectValue(createReserved_ipsPostResponse_linksFromDiscriminatorValue); },
        "reserved_ip": n => { reserved_ipsPostResponse.reservedIp = n.getObjectValue(createReserved_ipFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReserved_ipsPostResponse_links(reserved_ipsPostResponse_links = {}) {
    return {
        "actions": n => { reserved_ipsPostResponse_links.actions = n.getCollectionOfObjectValues(createAction_linkFromDiscriminatorValue); },
        "droplets": n => { reserved_ipsPostResponse_links.droplets = n.getCollectionOfObjectValues(createAction_linkFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReserved_ip_create(writer, reserved_ip_create = {}) {
    serializeReserved_ip_createMember1(writer, reserved_ip_create);
    serializeReserved_ip_createMember2(writer, reserved_ip_create);
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReserved_ipsGetResponse(writer, reserved_ipsGetResponse = {}) {
    if (reserved_ipsGetResponse) {
        writer.writeObjectValue("links", reserved_ipsGetResponse.links, serializePage_links);
        writer.writeObjectValue("meta", reserved_ipsGetResponse.meta, serializeMeta_properties);
        writer.writeCollectionOfObjectValues("reserved_ips", reserved_ipsGetResponse.reservedIps, serializeReserved_ip);
        writer.writeAdditionalData(reserved_ipsGetResponse.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReserved_ipsPostResponse(writer, reserved_ipsPostResponse = {}) {
    if (reserved_ipsPostResponse) {
        writer.writeObjectValue("links", reserved_ipsPostResponse.links, serializeReserved_ipsPostResponse_links);
        writer.writeObjectValue("reserved_ip", reserved_ipsPostResponse.reservedIp, serializeReserved_ip);
        writer.writeAdditionalData(reserved_ipsPostResponse.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReserved_ipsPostResponse_links(writer, reserved_ipsPostResponse_links = {}) {
    if (reserved_ipsPostResponse_links) {
        writer.writeCollectionOfObjectValues("actions", reserved_ipsPostResponse_links.actions, serializeAction_link);
        writer.writeCollectionOfObjectValues("droplets", reserved_ipsPostResponse_links.droplets, serializeAction_link);
        writer.writeAdditionalData(reserved_ipsPostResponse_links.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const Reserved_ipsRequestBuilderUriTemplate = "{+baseurl}/v2/reserved_ips{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const Reserved_ipsRequestBuilderGetQueryParametersMapper = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Reserved_ipsRequestBuilderNavigationMetadata = {
    byReserved_ip: {
        requestsMetadata: WithReserved_ipItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithReserved_ipItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["reserved_ip"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Reserved_ipsRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: Reserved_ipsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createReserved_ipsGetResponseFromDiscriminatorValue,
        queryParametersMapper: Reserved_ipsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: Reserved_ipsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createReserved_ipsPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeReserved_ip_create,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
