/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createAction_linkFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, createReserved_ip_createMember1FromDiscriminatorValue, createReserved_ip_createMember2FromDiscriminatorValue, createReserved_ipFromDiscriminatorValue, deserializeIntoReserved_ip_createMember1, deserializeIntoReserved_ip_createMember2, serializeAction_link, serializeMeta_properties, serializePage_links, serializeReserved_ip, serializeReserved_ip_createMember1, serializeReserved_ip_createMember2, type Action_link, type ErrorEscaped, type Meta_properties, type Page_links, type Reserved_ip, type Reserved_ip_createMember1, type Reserved_ip_createMember2 } from '../../models/index.js';
// @ts-ignore
import { type WithReserved_ipItemRequestBuilder, WithReserved_ipItemRequestBuilderNavigationMetadata, WithReserved_ipItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reserved_ip_createMember1 | Reserved_ip_createMember2}
 */
// @ts-ignore
export function createReserved_ip_createFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoReserved_ip_create;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reserved_ipsGetResponse}
 */
// @ts-ignore
export function createReserved_ipsGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoReserved_ipsGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reserved_ipsPostResponse_links}
 */
// @ts-ignore
export function createReserved_ipsPostResponse_linksFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoReserved_ipsPostResponse_links;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reserved_ipsPostResponse}
 */
// @ts-ignore
export function createReserved_ipsPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoReserved_ipsPostResponse;
}
/**
 * The deserialization information for the current model
 * @param Reserved_ip_create The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReserved_ip_create(reserved_ip_create: Partial<Reserved_ip_createMember1 | Reserved_ip_createMember2> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoReserved_ip_createMember1(reserved_ip_create as Reserved_ip_createMember1),
        ...deserializeIntoReserved_ip_createMember2(reserved_ip_create as Reserved_ip_createMember2),
    }
}
/**
 * The deserialization information for the current model
 * @param Reserved_ipsGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReserved_ipsGetResponse(reserved_ipsGetResponse: Partial<Reserved_ipsGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "links": n => { reserved_ipsGetResponse.links = n.getObjectValue<Page_links>(createPage_linksFromDiscriminatorValue); },
        "meta": n => { reserved_ipsGetResponse.meta = n.getObjectValue<Meta_properties>(createMeta_propertiesFromDiscriminatorValue); },
        "reserved_ips": n => { reserved_ipsGetResponse.reservedIps = n.getCollectionOfObjectValues<Reserved_ip>(createReserved_ipFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Reserved_ipsPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReserved_ipsPostResponse(reserved_ipsPostResponse: Partial<Reserved_ipsPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "links": n => { reserved_ipsPostResponse.links = n.getObjectValue<Reserved_ipsPostResponse_links>(createReserved_ipsPostResponse_linksFromDiscriminatorValue); },
        "reserved_ip": n => { reserved_ipsPostResponse.reservedIp = n.getObjectValue<Reserved_ip>(createReserved_ipFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Reserved_ipsPostResponse_links The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReserved_ipsPostResponse_links(reserved_ipsPostResponse_links: Partial<Reserved_ipsPostResponse_links> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "actions": n => { reserved_ipsPostResponse_links.actions = n.getCollectionOfObjectValues<Action_link>(createAction_linkFromDiscriminatorValue); },
        "droplets": n => { reserved_ipsPostResponse_links.droplets = n.getCollectionOfObjectValues<Action_link>(createAction_linkFromDiscriminatorValue); },
    }
}
export type Reserved_ip_create = Reserved_ip_createMember1 | Reserved_ip_createMember2;
export interface Reserved_ipsGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * The links property
     */
    links?: Page_links | null;
    /**
     * The meta property
     */
    meta?: Meta_properties | null;
    /**
     * The reserved_ips property
     */
    reservedIps?: Reserved_ip[] | null;
}
export interface Reserved_ipsPostResponse extends AdditionalDataHolder, Parsable {
    /**
     * The links property
     */
    links?: Reserved_ipsPostResponse_links | null;
    /**
     * The reserved_ip property
     */
    reservedIp?: Reserved_ip | null;
}
export interface Reserved_ipsPostResponse_links extends AdditionalDataHolder, Parsable {
    /**
     * The actions property
     */
    actions?: Action_link[] | null;
    /**
     * The droplets property
     */
    droplets?: Action_link[] | null;
}
/**
 * Builds and executes requests for operations under /v2/reserved_ips
 */
export interface Reserved_ipsRequestBuilder extends BaseRequestBuilder<Reserved_ipsRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.v2.reserved_ips.item collection
     * @param reserved_ip A reserved IP address.
     * @returns {WithReserved_ipItemRequestBuilder}
     */
     byReserved_ip(reserved_ip: string) : WithReserved_ipItemRequestBuilder;
    /**
     * To list all of the reserved IPs available on your account, send a GET request to `/v2/reserved_ips`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Reserved_ipsGetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<Reserved_ipsRequestBuilderGetQueryParameters> | undefined) : Promise<Reserved_ipsGetResponse | undefined>;
    /**
     * On creation, a reserved IP must be either assigned to a Droplet or reserved to a region.* To create a new reserved IP assigned to a Droplet, send a POST  request to `/v2/reserved_ips` with the `droplet_id` attribute.* To create a new reserved IP reserved to a region, send a POST request to  `/v2/reserved_ips` with the `region` attribute.**Note**:  In addition to the standard rate limiting, only 12 reserved IPs may be created per 60 seconds.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Reserved_ipsPostResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: Reserved_ip_createMember1 | Reserved_ip_createMember2, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Reserved_ipsPostResponse | undefined>;
    /**
     * To list all of the reserved IPs available on your account, send a GET request to `/v2/reserved_ips`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<Reserved_ipsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * On creation, a reserved IP must be either assigned to a Droplet or reserved to a region.* To create a new reserved IP assigned to a Droplet, send a POST  request to `/v2/reserved_ips` with the `droplet_id` attribute.* To create a new reserved IP reserved to a region, send a POST request to  `/v2/reserved_ips` with the `region` attribute.**Note**:  In addition to the standard rate limiting, only 12 reserved IPs may be created per 60 seconds.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: Reserved_ip_createMember1 | Reserved_ip_createMember2, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * To list all of the reserved IPs available on your account, send a GET request to `/v2/reserved_ips`.
 */
export interface Reserved_ipsRequestBuilderGetQueryParameters {
    /**
     * Which 'page' of paginated results to return.
     */
    page?: number;
    /**
     * Number of items returned per page
     */
    perPage?: number;
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Reserved_ip_create The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReserved_ip_create(writer: SerializationWriter, reserved_ip_create: Partial<Reserved_ip_createMember1 | Reserved_ip_createMember2> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    serializeReserved_ip_createMember1(writer, reserved_ip_create as Reserved_ip_createMember1);
    serializeReserved_ip_createMember2(writer, reserved_ip_create as Reserved_ip_createMember2);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Reserved_ipsGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReserved_ipsGetResponse(writer: SerializationWriter, reserved_ipsGetResponse: Partial<Reserved_ipsGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!reserved_ipsGetResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<Page_links>("links", reserved_ipsGetResponse.links, serializePage_links);
    writer.writeObjectValue<Meta_properties>("meta", reserved_ipsGetResponse.meta, serializeMeta_properties);
    writer.writeCollectionOfObjectValues<Reserved_ip>("reserved_ips", reserved_ipsGetResponse.reservedIps, serializeReserved_ip);
    writer.writeAdditionalData(reserved_ipsGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Reserved_ipsPostResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReserved_ipsPostResponse(writer: SerializationWriter, reserved_ipsPostResponse: Partial<Reserved_ipsPostResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!reserved_ipsPostResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<Reserved_ipsPostResponse_links>("links", reserved_ipsPostResponse.links, serializeReserved_ipsPostResponse_links);
    writer.writeObjectValue<Reserved_ip>("reserved_ip", reserved_ipsPostResponse.reservedIp, serializeReserved_ip);
    writer.writeAdditionalData(reserved_ipsPostResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Reserved_ipsPostResponse_links The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReserved_ipsPostResponse_links(writer: SerializationWriter, reserved_ipsPostResponse_links: Partial<Reserved_ipsPostResponse_links> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!reserved_ipsPostResponse_links || isSerializingDerivedType) { return; }
    writer.writeCollectionOfObjectValues<Action_link>("actions", reserved_ipsPostResponse_links.actions, serializeAction_link);
    writer.writeCollectionOfObjectValues<Action_link>("droplets", reserved_ipsPostResponse_links.droplets, serializeAction_link);
    writer.writeAdditionalData(reserved_ipsPostResponse_links.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const Reserved_ipsRequestBuilderUriTemplate = "{+baseurl}/v2/reserved_ips{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const Reserved_ipsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Reserved_ipsRequestBuilderNavigationMetadata: Record<Exclude<keyof Reserved_ipsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byReserved_ip: {
        requestsMetadata: WithReserved_ipItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithReserved_ipItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["reserved_ip"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Reserved_ipsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Reserved_ipsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createReserved_ipsGetResponseFromDiscriminatorValue,
        queryParametersMapper: Reserved_ipsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: Reserved_ipsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createReserved_ipsPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeReserved_ip_create,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
