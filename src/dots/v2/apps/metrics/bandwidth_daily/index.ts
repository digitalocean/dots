/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApp_metrics_bandwidth_usageFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeApp_metrics_bandwidth_usage, serializeApp_metrics_bandwidth_usage_request, type App_metrics_bandwidth_usage, type App_metrics_bandwidth_usage_request, type ErrorEscaped } from '../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/apps/metrics/bandwidth_daily
 */
export interface Bandwidth_dailyRequestBuilder extends BaseRequestBuilder<Bandwidth_dailyRequestBuilder> {
    /**
     * Retrieve daily bandwidth usage metrics for multiple apps.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<App_metrics_bandwidth_usage>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: App_metrics_bandwidth_usage_request, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<App_metrics_bandwidth_usage | undefined>;
    /**
     * Retrieve daily bandwidth usage metrics for multiple apps.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: App_metrics_bandwidth_usage_request, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const Bandwidth_dailyRequestBuilderUriTemplate = "{+baseurl}/v2/apps/metrics/bandwidth_daily";
/**
 * Metadata for all the requests in the request builder.
 */
export const Bandwidth_dailyRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: Bandwidth_dailyRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApp_metrics_bandwidth_usageFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeApp_metrics_bandwidth_usage_request,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
