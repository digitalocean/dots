/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApp_job_invocationsFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, type App_job_invocations, type ErrorEscaped } from '../../../../models/index.js';
// @ts-ignore
import { type WithJob_invocation_ItemRequestBuilder, WithJob_invocation_ItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/apps/{app_-id}/job-invocations
 */
export interface JobInvocationsRequestBuilder extends BaseRequestBuilder<JobInvocationsRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.v2.apps.item.jobInvocations.item collection
     * @param job_invocation_id The ID of the job invocation to retrieve.
     * @returns {WithJob_invocation_ItemRequestBuilder}
     */
     byJob_invocation_id(job_invocation_id: string) : WithJob_invocation_ItemRequestBuilder;
    /**
     * List all job invocations for an app.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<App_job_invocations>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<JobInvocationsRequestBuilderGetQueryParameters> | undefined) : Promise<App_job_invocations | undefined>;
    /**
     * List all job invocations for an app.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<JobInvocationsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * List all job invocations for an app.
 */
export interface JobInvocationsRequestBuilderGetQueryParameters {
    /**
     * The deployment ID
     */
    deploymentId?: string;
    /**
     * The job names to list job invocations for.
     */
    jobNames?: string[];
    /**
     * Which 'page' of paginated results to return.
     */
    page?: number;
    /**
     * Number of items returned per page
     */
    perPage?: number;
}
/**
 * Uri template for the request builder.
 */
export const JobInvocationsRequestBuilderUriTemplate = "{+baseurl}/v2/apps/{app_%2Did}/job-invocations{?deployment_id*,job_names*,page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const JobInvocationsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "deploymentId": "deployment_id",
    "jobNames": "job_names",
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const JobInvocationsRequestBuilderNavigationMetadata: Record<Exclude<keyof JobInvocationsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byJob_invocation_id: {
        requestsMetadata: WithJob_invocation_ItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["job_invocation_id"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const JobInvocationsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: JobInvocationsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApp_job_invocationsFromDiscriminatorValue,
        queryParametersMapper: JobInvocationsRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
