/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, createResourceFromDiscriminatorValue, serializeMeta_properties, serializePage_links, serializeProject_assignment, serializeResource } from '../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ResourcesGetResponse}
 */
// @ts-ignore
export function createResourcesGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoResourcesGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ResourcesPostResponse}
 */
// @ts-ignore
export function createResourcesPostResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoResourcesPostResponse;
}
/**
 * The deserialization information for the current model
 * @param ResourcesGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoResourcesGetResponse(resourcesGetResponse = {}) {
    return {
        "links": n => { resourcesGetResponse.links = n.getObjectValue(createPage_linksFromDiscriminatorValue); },
        "meta": n => { resourcesGetResponse.meta = n.getObjectValue(createMeta_propertiesFromDiscriminatorValue); },
        "resources": n => { resourcesGetResponse.resources = n.getCollectionOfObjectValues(createResourceFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @param ResourcesPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoResourcesPostResponse(resourcesPostResponse = {}) {
    return {
        "resources": n => { resourcesPostResponse.resources = n.getCollectionOfObjectValues(createResourceFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ResourcesGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeResourcesGetResponse(writer, resourcesGetResponse = {}, isSerializingDerivedType = false) {
    if (!resourcesGetResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeObjectValue("links", resourcesGetResponse.links, serializePage_links);
    writer.writeObjectValue("meta", resourcesGetResponse.meta, serializeMeta_properties);
    writer.writeCollectionOfObjectValues("resources", resourcesGetResponse.resources, serializeResource);
    writer.writeAdditionalData(resourcesGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ResourcesPostResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeResourcesPostResponse(writer, resourcesPostResponse = {}, isSerializingDerivedType = false) {
    if (!resourcesPostResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeCollectionOfObjectValues("resources", resourcesPostResponse.resources, serializeResource);
    writer.writeAdditionalData(resourcesPostResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const ResourcesRequestBuilderUriTemplate = "{+baseurl}/v2/projects/{project_id}/resources{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ResourcesRequestBuilderGetQueryParametersMapper = {
    "perPage": "per_page",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ResourcesRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: ResourcesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createResourcesGetResponseFromDiscriminatorValue,
        queryParametersMapper: ResourcesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: ResourcesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createResourcesPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeProject_assignment,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
