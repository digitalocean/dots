/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createCdn_endpointFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeCdn_endpoint, serializeUpdate_endpoint } from '../../../../models/index.js';
// @ts-ignore
import { CacheRequestBuilderRequestsMetadata } from './cache/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithCdn_GetResponse}
 */
// @ts-ignore
export function createWithCdn_GetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithCdn_GetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithCdn_PutResponse}
 */
// @ts-ignore
export function createWithCdn_PutResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithCdn_PutResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithCdn_GetResponse(withCdn_GetResponse = {}) {
    return {
        "endpoint": n => { withCdn_GetResponse.endpoint = n.getObjectValue(createCdn_endpointFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithCdn_PutResponse(withCdn_PutResponse = {}) {
    return {
        "endpoint": n => { withCdn_PutResponse.endpoint = n.getObjectValue(createCdn_endpointFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithCdn_GetResponse(writer, withCdn_GetResponse = {}) {
    if (withCdn_GetResponse) {
        writer.writeObjectValue("endpoint", withCdn_GetResponse.endpoint, serializeCdn_endpoint);
        writer.writeAdditionalData(withCdn_GetResponse.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithCdn_PutResponse(writer, withCdn_PutResponse = {}) {
    if (withCdn_PutResponse) {
        writer.writeObjectValue("endpoint", withCdn_PutResponse.endpoint, serializeCdn_endpoint);
        writer.writeAdditionalData(withCdn_PutResponse.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const WithCdn_ItemRequestBuilderUriTemplate = "{+baseurl}/v2/cdn/endpoints/{cdn_id}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithCdn_ItemRequestBuilderNavigationMetadata = {
    cache: {
        requestsMetadata: CacheRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithCdn_ItemRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: WithCdn_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithCdn_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithCdn_GetResponseFromDiscriminatorValue,
    },
    put: {
        uriTemplate: WithCdn_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithCdn_PutResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUpdate_endpoint,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
