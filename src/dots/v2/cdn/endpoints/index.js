/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createCdn_endpointFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, serializeCdn_endpoint, serializeMeta_properties, serializePage_links } from '../../../models/index.js';
// @ts-ignore
import { WithCdn_ItemRequestBuilderNavigationMetadata, WithCdn_ItemRequestBuilderRequestsMetadata } from './item/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EndpointsGetResponse}
 */
// @ts-ignore
export function createEndpointsGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoEndpointsGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EndpointsPostResponse}
 */
// @ts-ignore
export function createEndpointsPostResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoEndpointsPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEndpointsGetResponse(endpointsGetResponse = {}) {
    return {
        "endpoints": n => { endpointsGetResponse.endpoints = n.getCollectionOfObjectValues(createCdn_endpointFromDiscriminatorValue); },
        "links": n => { endpointsGetResponse.links = n.getObjectValue(createPage_linksFromDiscriminatorValue); },
        "meta": n => { endpointsGetResponse.meta = n.getObjectValue(createMeta_propertiesFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEndpointsPostResponse(endpointsPostResponse = {}) {
    return {
        "endpoint": n => { endpointsPostResponse.endpoint = n.getObjectValue(createCdn_endpointFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEndpointsGetResponse(writer, endpointsGetResponse = {}) {
    if (endpointsGetResponse) {
        writer.writeCollectionOfObjectValues("endpoints", endpointsGetResponse.endpoints, serializeCdn_endpoint);
        writer.writeObjectValue("links", endpointsGetResponse.links, serializePage_links);
        writer.writeObjectValue("meta", endpointsGetResponse.meta, serializeMeta_properties);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEndpointsPostResponse(writer, endpointsPostResponse = {}) {
    if (endpointsPostResponse) {
        writer.writeObjectValue("endpoint", endpointsPostResponse.endpoint, serializeCdn_endpoint);
    }
}
/**
 * Uri template for the request builder.
 */
export const EndpointsRequestBuilderUriTemplate = "{+baseurl}/v2/cdn/endpoints{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const EndpointsRequestBuilderGetQueryParametersMapper = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const EndpointsRequestBuilderNavigationMetadata = {
    byCdn_id: {
        requestsMetadata: WithCdn_ItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithCdn_ItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["cdn_id"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const EndpointsRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: EndpointsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createEndpointsGetResponseFromDiscriminatorValue,
        queryParametersMapper: EndpointsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: EndpointsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createEndpointsPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeCdn_endpoint,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
