/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createByoip_prefixFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeByoip_prefix, type Byoip_prefix, type ErrorEscaped } from '../../../models/index.js';
// @ts-ignore
import { IpsRequestBuilderRequestsMetadata, type IpsRequestBuilder } from './ips/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithByoip_prefix_uuGetResponse}
 */
// @ts-ignore
export function createWithByoip_prefix_uuGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithByoip_prefix_uuGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithByoip_prefix_uuGetResponse(withByoip_prefix_uuGetResponse: Partial<WithByoip_prefix_uuGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "byoip_prefix": n => { withByoip_prefix_uuGetResponse.byoipPrefix = n.getObjectValue<Byoip_prefix>(createByoip_prefixFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithByoip_prefix_uuGetResponse(writer: SerializationWriter, withByoip_prefix_uuGetResponse: Partial<WithByoip_prefix_uuGetResponse> | undefined | null = {}) : void {
    if (withByoip_prefix_uuGetResponse) {
        writer.writeObjectValue<Byoip_prefix>("byoip_prefix", withByoip_prefix_uuGetResponse.byoipPrefix, serializeByoip_prefix);
    }
}
export interface WithByoip_prefix_uuGetResponse extends Parsable {
    /**
     * The byoip_prefix property
     */
    byoipPrefix?: Byoip_prefix | null;
}
/**
 * Builds and executes requests for operations under /v2/byoip_prefixes/{byoip_prefix_uuid}
 */
export interface WithByoip_prefix_uuItemRequestBuilder extends BaseRequestBuilder<WithByoip_prefix_uuItemRequestBuilder> {
    /**
     * The ips property
     */
    get ips(): IpsRequestBuilder;
    /**
     * To delete a BYOIP prefix and remove it from your account, send a DELETE requestto `/v2/byoip_prefixes/{uuid}`.A successful request will receive a 202 status code with no body in response.This indicates that the request was accepted and the prefix is being deleted.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 422 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * To get a BYOIP prefix, send a GET request to `/v2/byoip_prefixes/{byoip_prefix_uuid}`. A successful response will return the details of the specified BYOIP prefix.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithByoip_prefix_uuGetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 422 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithByoip_prefix_uuGetResponse | undefined>;
    /**
     * To delete a BYOIP prefix and remove it from your account, send a DELETE requestto `/v2/byoip_prefixes/{uuid}`.A successful request will receive a 202 status code with no body in response.This indicates that the request was accepted and the prefix is being deleted.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To get a BYOIP prefix, send a GET request to `/v2/byoip_prefixes/{byoip_prefix_uuid}`. A successful response will return the details of the specified BYOIP prefix.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const WithByoip_prefix_uuItemRequestBuilderUriTemplate = "{+baseurl}/v2/byoip_prefixes/{byoip_prefix_uuid}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithByoip_prefix_uuItemRequestBuilderNavigationMetadata: Record<Exclude<keyof WithByoip_prefix_uuItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    ips: {
        requestsMetadata: IpsRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithByoip_prefix_uuItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: WithByoip_prefix_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            422: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithByoip_prefix_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            422: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWithByoip_prefix_uuGetResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
