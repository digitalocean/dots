/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, createSizeFromDiscriminatorValue, serializeMeta_properties, serializePage_links, serializeSize, type ErrorEscaped, type Meta_properties, type Page_links, type Size } from '../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {SizesGetResponse}
 */
// @ts-ignore
export function createSizesGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoSizesGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoSizesGetResponse(sizesGetResponse: Partial<SizesGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "links": n => { sizesGetResponse.links = n.getObjectValue<Page_links>(createPage_linksFromDiscriminatorValue); },
        "meta": n => { sizesGetResponse.meta = n.getObjectValue<Meta_properties>(createMeta_propertiesFromDiscriminatorValue); },
        "sizes": n => { sizesGetResponse.sizes = n.getCollectionOfObjectValues<Size>(createSizeFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeSizesGetResponse(writer: SerializationWriter, sizesGetResponse: Partial<SizesGetResponse> | undefined | null = {}) : void {
    if (sizesGetResponse) {
        writer.writeObjectValue<Page_links>("links", sizesGetResponse.links, serializePage_links);
        writer.writeObjectValue<Meta_properties>("meta", sizesGetResponse.meta, serializeMeta_properties);
        writer.writeCollectionOfObjectValues<Size>("sizes", sizesGetResponse.sizes, serializeSize);
    }
}
export interface SizesGetResponse extends Parsable {
    /**
     * The links property
     */
    links?: Page_links | null;
    /**
     * The meta property
     */
    meta?: Meta_properties | null;
    /**
     * The sizes property
     */
    sizes?: Size[] | null;
}
/**
 * Builds and executes requests for operations under /v2/sizes
 */
export interface SizesRequestBuilder extends BaseRequestBuilder<SizesRequestBuilder> {
    /**
     * To list all of available Droplet sizes, send a GET request to `/v2/sizes`.The response will be a JSON object with a key called `sizes`. The value of this will be an array of `size` objects each of which contain the standard size attributes.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<SizesGetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<SizesRequestBuilderGetQueryParameters> | undefined) : Promise<SizesGetResponse | undefined>;
    /**
     * To list all of available Droplet sizes, send a GET request to `/v2/sizes`.The response will be a JSON object with a key called `sizes`. The value of this will be an array of `size` objects each of which contain the standard size attributes.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SizesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * To list all of available Droplet sizes, send a GET request to `/v2/sizes`.The response will be a JSON object with a key called `sizes`. The value of this will be an array of `size` objects each of which contain the standard size attributes.
 */
export interface SizesRequestBuilderGetQueryParameters {
    /**
     * Which 'page' of paginated results to return.
     */
    page?: number;
    /**
     * Number of items returned per page
     */
    perPage?: number;
}
/**
 * Uri template for the request builder.
 */
export const SizesRequestBuilderUriTemplate = "{+baseurl}/v2/sizes{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SizesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "perPage": "per_page",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SizesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: SizesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSizesGetResponseFromDiscriminatorValue,
        queryParametersMapper: SizesRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
