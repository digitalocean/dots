/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { GarbageCollectionRequestBuilderNavigationMetadata, GarbageCollectionRequestBuilderRequestsMetadata, type GarbageCollectionRequestBuilder } from './garbageCollection/index.js';
// @ts-ignore
import { GarbageCollectionsRequestBuilderRequestsMetadata, type GarbageCollectionsRequestBuilder } from './garbageCollections/index.js';
// @ts-ignore
import { RepositoriesRequestBuilderNavigationMetadata, RepositoriesRequestBuilderRequestsMetadata, type RepositoriesRequestBuilder } from './repositories/index.js';
// @ts-ignore
import { RepositoriesV2RequestBuilderRequestsMetadata, type RepositoriesV2RequestBuilder } from './repositoriesV2/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/registry/{registry_name}
 */
export interface WithRegistry_nameItemRequestBuilder extends BaseRequestBuilder<WithRegistry_nameItemRequestBuilder> {
    /**
     * The garbageCollection property
     */
    get garbageCollection(): GarbageCollectionRequestBuilder;
    /**
     * The garbageCollections property
     */
    get garbageCollections(): GarbageCollectionsRequestBuilder;
    /**
     * The repositories property
     */
    get repositories(): RepositoriesRequestBuilder;
    /**
     * The repositoriesV2 property
     */
    get repositoriesV2(): RepositoriesV2RequestBuilder;
}
/**
 * Uri template for the request builder.
 */
export const WithRegistry_nameItemRequestBuilderUriTemplate = "{+baseurl}/v2/registry/{registry_name}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithRegistry_nameItemRequestBuilderNavigationMetadata: Record<Exclude<keyof WithRegistry_nameItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    garbageCollection: {
        requestsMetadata: GarbageCollectionRequestBuilderRequestsMetadata,
        navigationMetadata: GarbageCollectionRequestBuilderNavigationMetadata,
    },
    garbageCollections: {
        requestsMetadata: GarbageCollectionsRequestBuilderRequestsMetadata,
    },
    repositories: {
        requestsMetadata: RepositoriesRequestBuilderRequestsMetadata,
        navigationMetadata: RepositoriesRequestBuilderNavigationMetadata,
    },
    repositoriesV2: {
        requestsMetadata: RepositoriesV2RequestBuilderRequestsMetadata,
    },
};
/* tslint:enable */
/* eslint-enable */
