/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type WithRepository_nameItemRequestBuilder, WithRepository_nameItemRequestBuilderNavigationMetadata, WithRepository_nameItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/registries/{registry_name}/repositories
 */
export interface RepositoriesRequestBuilder extends BaseRequestBuilder<RepositoriesRequestBuilder> {
    /**
     * Gets an item from the dots.v2.registries.item.repositories.item collection
     * @param repository_name The name of a container registry repository. If the name contains `/` characters, they must be URL-encoded, e.g. `%2F`.
     * @returns {WithRepository_nameItemRequestBuilder}
     */
     byRepository_name(repository_name: string) : WithRepository_nameItemRequestBuilder;
}
/**
 * Uri template for the request builder.
 */
export const RepositoriesRequestBuilderUriTemplate = "{+baseurl}/v2/registries/{registry_name}/repositories";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const RepositoriesRequestBuilderNavigationMetadata: Record<Exclude<keyof RepositoriesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byRepository_name: {
        requestsMetadata: WithRepository_nameItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithRepository_nameItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["repository_name"],
    },
};
/* tslint:enable */
/* eslint-enable */
