/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue } from '../../../../../models/index.js';
// @ts-ignore
import { DigestsRequestBuilderNavigationMetadata, DigestsRequestBuilderRequestsMetadata } from './digests/index.js';
// @ts-ignore
import { TagsRequestBuilderNavigationMetadata, TagsRequestBuilderRequestsMetadata } from './tags/index.js';
/**
 * Uri template for the request builder.
 */
export const WithRepository_nameItemRequestBuilderUriTemplate = "{+baseurl}/v2/registries/{registry_name}/repositories/{repository_name}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithRepository_nameItemRequestBuilderNavigationMetadata = {
    digests: {
        requestsMetadata: DigestsRequestBuilderRequestsMetadata,
        navigationMetadata: DigestsRequestBuilderNavigationMetadata,
    },
    tags: {
        requestsMetadata: TagsRequestBuilderRequestsMetadata,
        navigationMetadata: TagsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithRepository_nameItemRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: WithRepository_nameItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
    },
};
/* tslint:enable */
/* eslint-enable */
