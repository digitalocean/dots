/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApiDeleteWorkspaceOutputFromDiscriminatorValue, createApiGetWorkspaceOutputFromDiscriminatorValue, createApiUpdateWorkspaceOutputFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeApiUpdateWorkspaceInputPublic, serializeApiUpdateWorkspaceOutput, type ApiDeleteWorkspaceOutput, type ApiGetWorkspaceOutput, type ApiUpdateWorkspaceInputPublic, type ApiUpdateWorkspaceOutput, type ErrorEscaped } from '../../../../models/index.js';
// @ts-ignore
import { AgentsRequestBuilderRequestsMetadata, type AgentsRequestBuilder } from './agents/index.js';
// @ts-ignore
import { Evaluation_test_casesRequestBuilderRequestsMetadata, type Evaluation_test_casesRequestBuilder } from './evaluation_test_cases/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/gen-ai/workspaces/{workspace_uuid}
 */
export interface WithWorkspace_uuItemRequestBuilder extends BaseRequestBuilder<WithWorkspace_uuItemRequestBuilder> {
    /**
     * The agents property
     */
    get agents(): AgentsRequestBuilder;
    /**
     * The evaluation_test_cases property
     */
    get evaluation_test_cases(): Evaluation_test_casesRequestBuilder;
    /**
     * To delete a workspace, send a DELETE request to `/v2/gen-ai/workspace/{workspace_uuid}`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiDeleteWorkspaceOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiDeleteWorkspaceOutput | undefined>;
    /**
     * To retrieve details of a workspace, GET request to `/v2/gen-ai/workspaces/{workspace_uuid}`. The response body is a JSON object containing the workspace.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiGetWorkspaceOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiGetWorkspaceOutput | undefined>;
    /**
     * To update a workspace, send a PUT request to `/v2/gen-ai/workspaces/{workspace_uuid}`. The response body is a JSON object containing the workspace.
     * @param body Parameters for Update Workspace
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiUpdateWorkspaceOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     put(body: ApiUpdateWorkspaceInputPublic, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiUpdateWorkspaceOutput | undefined>;
    /**
     * To delete a workspace, send a DELETE request to `/v2/gen-ai/workspace/{workspace_uuid}`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To retrieve details of a workspace, GET request to `/v2/gen-ai/workspaces/{workspace_uuid}`. The response body is a JSON object containing the workspace.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To update a workspace, send a PUT request to `/v2/gen-ai/workspaces/{workspace_uuid}`. The response body is a JSON object containing the workspace.
     * @param body Parameters for Update Workspace
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPutRequestInformation(body: ApiUpdateWorkspaceInputPublic, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const WithWorkspace_uuItemRequestBuilderUriTemplate = "{+baseurl}/v2/gen-ai/workspaces/{workspace_uuid}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithWorkspace_uuItemRequestBuilderNavigationMetadata: Record<Exclude<keyof WithWorkspace_uuItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    agents: {
        requestsMetadata: AgentsRequestBuilderRequestsMetadata,
    },
    evaluation_test_cases: {
        requestsMetadata: Evaluation_test_casesRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithWorkspace_uuItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: WithWorkspace_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiDeleteWorkspaceOutputFromDiscriminatorValue,
    },
    get: {
        uriTemplate: WithWorkspace_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiGetWorkspaceOutputFromDiscriminatorValue,
    },
    put: {
        uriTemplate: WithWorkspace_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiUpdateWorkspaceOutputFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeApiUpdateWorkspaceInputPublic,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
