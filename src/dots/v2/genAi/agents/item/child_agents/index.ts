/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApiGetChildrenOutputFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, type ApiGetChildrenOutput, type ErrorEscaped } from '../../../../../models/index.js';
// @ts-ignore
import { type WithChild_agent_uuItemRequestBuilder, WithChild_agent_uuItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/gen-ai/agents/{agent_uu-id}/child_agents
 */
export interface Child_agentsRequestBuilder extends BaseRequestBuilder<Child_agentsRequestBuilder> {
    /**
     * Gets an item from the dots.v2.genAi.agents.item.child_agents.item collection
     * @param child_agent_uuid Routed agent id
     * @returns {WithChild_agent_uuItemRequestBuilder}
     */
     byChild_agent_uuid(child_agent_uuid: string) : WithChild_agent_uuItemRequestBuilder;
    /**
     * To view agent routes for an agent, send a GET requtest to `/v2/gen-ai/agents/{uuid}/child_agents`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiGetChildrenOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiGetChildrenOutput | undefined>;
    /**
     * To view agent routes for an agent, send a GET requtest to `/v2/gen-ai/agents/{uuid}/child_agents`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const Child_agentsRequestBuilderUriTemplate = "{+baseurl}/v2/gen-ai/agents/{agent_uu%2Did}/child_agents";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Child_agentsRequestBuilderNavigationMetadata: Record<Exclude<keyof Child_agentsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byChild_agent_uuid: {
        requestsMetadata: WithChild_agent_uuItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["child_agent_uuid"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Child_agentsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Child_agentsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiGetChildrenOutputFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
