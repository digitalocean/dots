/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApiGetAgentUsageOutputFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, type ApiGetAgentUsageOutput, type ErrorEscaped } from '../../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/gen-ai/agents/{agent_uu-id}/usage
 */
export interface UsageRequestBuilder extends BaseRequestBuilder<UsageRequestBuilder> {
    /**
     * To get agent usage, send a GET request to `/v2/gen-ai/agents/{uuid}/usage`. Returns usage metrics for the specified agent within the provided time range.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiGetAgentUsageOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<UsageRequestBuilderGetQueryParameters> | undefined) : Promise<ApiGetAgentUsageOutput | undefined>;
    /**
     * To get agent usage, send a GET request to `/v2/gen-ai/agents/{uuid}/usage`. Returns usage metrics for the specified agent within the provided time range.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<UsageRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * To get agent usage, send a GET request to `/v2/gen-ai/agents/{uuid}/usage`. Returns usage metrics for the specified agent within the provided time range.
 */
export interface UsageRequestBuilderGetQueryParameters {
    /**
     * Return all usage data from this date.
     */
    start?: string;
    /**
     * Return all usage data up to this date, if omitted, will return up to the current date.
     */
    stop?: string;
}
/**
 * Uri template for the request builder.
 */
export const UsageRequestBuilderUriTemplate = "{+baseurl}/v2/gen-ai/agents/{agent_uu%2Did}/usage{?start*,stop*}";
/**
 * Metadata for all the requests in the request builder.
 */
export const UsageRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: UsageRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiGetAgentUsageOutputFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
