/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApiLinkKnowledgeBaseOutputFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, type ApiLinkKnowledgeBaseOutput, type ErrorEscaped } from '../../../../../models/index.js';
// @ts-ignore
import { type WithKnowledge_base_uuItemRequestBuilder, WithKnowledge_base_uuItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/gen-ai/agents/{agent_uu-id}/knowledge_bases
 */
export interface Knowledge_basesRequestBuilder extends BaseRequestBuilder<Knowledge_basesRequestBuilder> {
    /**
     * Gets an item from the dots.v2.genAi.agents.item.knowledge_bases.item collection
     * @param knowledge_base_uuid A unique identifier for a knowledge base.
     * @returns {WithKnowledge_base_uuItemRequestBuilder}
     */
     byKnowledge_base_uuid(knowledge_base_uuid: string) : WithKnowledge_base_uuItemRequestBuilder;
    /**
     * To attach knowledge bases to an agent, send a POST request to `/v2/gen-ai/agents/{agent_uuid}/knowledge_bases`
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiLinkKnowledgeBaseOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiLinkKnowledgeBaseOutput | undefined>;
    /**
     * To attach knowledge bases to an agent, send a POST request to `/v2/gen-ai/agents/{agent_uuid}/knowledge_bases`
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const Knowledge_basesRequestBuilderUriTemplate = "{+baseurl}/v2/gen-ai/agents/{agent_uu%2Did}/knowledge_bases";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Knowledge_basesRequestBuilderNavigationMetadata: Record<Exclude<keyof Knowledge_basesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byKnowledge_base_uuid: {
        requestsMetadata: WithKnowledge_base_uuItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["knowledge_base_uuid"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Knowledge_basesRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: Knowledge_basesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiLinkKnowledgeBaseOutputFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
