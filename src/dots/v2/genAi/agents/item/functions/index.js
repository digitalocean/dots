/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApiLinkAgentFunctionOutputFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeApiLinkAgentFunctionInputPublic } from '../../../../../models/index.js';
// @ts-ignore
import { WithFunction_uuItemRequestBuilderRequestsMetadata } from './item/index.js';
/**
 * Uri template for the request builder.
 */
export const FunctionsRequestBuilderUriTemplate = "{+baseurl}/v2/gen-ai/agents/{agent_uu%2Did}/functions";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const FunctionsRequestBuilderNavigationMetadata = {
    byFunction_uuid: {
        requestsMetadata: WithFunction_uuItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["function_uuid"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const FunctionsRequestBuilderRequestsMetadata = {
    post: {
        uriTemplate: FunctionsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createApiLinkAgentFunctionOutputFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeApiLinkAgentFunctionInputPublic,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
