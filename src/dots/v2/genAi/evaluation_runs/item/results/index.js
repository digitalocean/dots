/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApiGetEvaluationRunResultsOutputFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue } from '../../../../../models/index.js';
// @ts-ignore
import { WithPrompt_ItemRequestBuilderRequestsMetadata } from './item/index.js';
/**
 * Uri template for the request builder.
 */
export const ResultsRequestBuilderUriTemplate = "{+baseurl}/v2/gen-ai/evaluation_runs/{evaluation_run_uuid}/results{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ResultsRequestBuilderGetQueryParametersMapper = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ResultsRequestBuilderNavigationMetadata = {
    byPrompt_id: {
        requestsMetadata: WithPrompt_ItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["prompt_id"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ResultsRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: ResultsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createApiGetEvaluationRunResultsOutputFromDiscriminatorValue,
        queryParametersMapper: ResultsRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
