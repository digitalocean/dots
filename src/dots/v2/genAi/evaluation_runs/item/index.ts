/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApiGetEvaluationRunOutputFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, type ApiGetEvaluationRunOutput, type ErrorEscaped } from '../../../../models/index.js';
// @ts-ignore
import { ResultsRequestBuilderNavigationMetadata, ResultsRequestBuilderRequestsMetadata, type ResultsRequestBuilder } from './results/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/gen-ai/evaluation_runs/{evaluation_run_uuid}
 */
export interface WithEvaluation_run_uuItemRequestBuilder extends BaseRequestBuilder<WithEvaluation_run_uuItemRequestBuilder> {
    /**
     * The results property
     */
    get results(): ResultsRequestBuilder;
    /**
     * To retrive information about an existing evaluation run, send a GET request to `/v2/gen-ai/evaluation_runs/{evaluation_run_uuid}`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiGetEvaluationRunOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiGetEvaluationRunOutput | undefined>;
    /**
     * To retrive information about an existing evaluation run, send a GET request to `/v2/gen-ai/evaluation_runs/{evaluation_run_uuid}`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const WithEvaluation_run_uuItemRequestBuilderUriTemplate = "{+baseurl}/v2/gen-ai/evaluation_runs/{evaluation_run_uuid}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithEvaluation_run_uuItemRequestBuilderNavigationMetadata: Record<Exclude<keyof WithEvaluation_run_uuItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    results: {
        requestsMetadata: ResultsRequestBuilderRequestsMetadata,
        navigationMetadata: ResultsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithEvaluation_run_uuItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: WithEvaluation_run_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiGetEvaluationRunOutputFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
