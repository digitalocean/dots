/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApiCreateKnowledgeBaseOutputFromDiscriminatorValue, createApiListKnowledgeBasesOutputFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeApiCreateKnowledgeBaseInputPublic, serializeApiCreateKnowledgeBaseOutput, type ApiCreateKnowledgeBaseInputPublic, type ApiCreateKnowledgeBaseOutput, type ApiListKnowledgeBasesOutput, type ErrorEscaped } from '../../../models/index.js';
// @ts-ignore
import { Knowledge_base_uuItemRequestBuilderNavigationMetadata, Knowledge_base_uuItemRequestBuilderRequestsMetadata, type Knowledge_base_uuItemRequestBuilder } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/gen-ai/knowledge_bases
 */
export interface Knowledge_basesRequestBuilder extends BaseRequestBuilder<Knowledge_basesRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.v2.genAi.knowledge_bases.item collection
     * @param knowledge_base_uuId Knowledge base id
     * @returns {Knowledge_base_uuItemRequestBuilder}
     */
     byKnowledge_base_uuId(knowledge_base_uuId: string) : Knowledge_base_uuItemRequestBuilder;
    /**
     * To list all knowledge bases, send a GET request to `/v2/gen-ai/knowledge_bases`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiListKnowledgeBasesOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<Knowledge_basesRequestBuilderGetQueryParameters> | undefined) : Promise<ApiListKnowledgeBasesOutput | undefined>;
    /**
     * To create a knowledge base, send a POST request to `/v2/gen-ai/knowledge_bases`.
     * @param body Data to create a new knowledge base.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiCreateKnowledgeBaseOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: ApiCreateKnowledgeBaseInputPublic, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiCreateKnowledgeBaseOutput | undefined>;
    /**
     * To list all knowledge bases, send a GET request to `/v2/gen-ai/knowledge_bases`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<Knowledge_basesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * To create a knowledge base, send a POST request to `/v2/gen-ai/knowledge_bases`.
     * @param body Data to create a new knowledge base.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ApiCreateKnowledgeBaseInputPublic, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * To list all knowledge bases, send a GET request to `/v2/gen-ai/knowledge_bases`.
 */
export interface Knowledge_basesRequestBuilderGetQueryParameters {
    /**
     * Page number.
     */
    page?: number;
    /**
     * Items per page.
     */
    perPage?: number;
}
/**
 * Uri template for the request builder.
 */
export const Knowledge_basesRequestBuilderUriTemplate = "{+baseurl}/v2/gen-ai/knowledge_bases{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const Knowledge_basesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Knowledge_basesRequestBuilderNavigationMetadata: Record<Exclude<keyof Knowledge_basesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byKnowledge_base_uuId: {
        requestsMetadata: Knowledge_base_uuItemRequestBuilderRequestsMetadata,
        navigationMetadata: Knowledge_base_uuItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["knowledge_base_uu%2Did"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Knowledge_basesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Knowledge_basesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiListKnowledgeBasesOutputFromDiscriminatorValue,
        queryParametersMapper: Knowledge_basesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: Knowledge_basesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiCreateKnowledgeBaseOutputFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeApiCreateKnowledgeBaseInputPublic,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
