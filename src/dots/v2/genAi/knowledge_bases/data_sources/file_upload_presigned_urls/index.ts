/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApiCreateDataSourceFileUploadPresignedUrlsOutputFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeApiCreateDataSourceFileUploadPresignedUrlsInputPublic, serializeApiCreateDataSourceFileUploadPresignedUrlsOutput, type ApiCreateDataSourceFileUploadPresignedUrlsInputPublic, type ApiCreateDataSourceFileUploadPresignedUrlsOutput, type ErrorEscaped } from '../../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/gen-ai/knowledge_bases/data_sources/file_upload_presigned_urls
 */
export interface File_upload_presigned_urlsRequestBuilder extends BaseRequestBuilder<File_upload_presigned_urlsRequestBuilder> {
    /**
     * To create presigned URLs for knowledge base data source file upload, send a POST request to `/v2/gen-ai/knowledge_bases/data_sources/file_upload_presigned_urls`.
     * @param body Request for pre-signed URL's to upload files for KB Data Sources
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiCreateDataSourceFileUploadPresignedUrlsOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: ApiCreateDataSourceFileUploadPresignedUrlsInputPublic, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiCreateDataSourceFileUploadPresignedUrlsOutput | undefined>;
    /**
     * To create presigned URLs for knowledge base data source file upload, send a POST request to `/v2/gen-ai/knowledge_bases/data_sources/file_upload_presigned_urls`.
     * @param body Request for pre-signed URL's to upload files for KB Data Sources
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ApiCreateDataSourceFileUploadPresignedUrlsInputPublic, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const File_upload_presigned_urlsRequestBuilderUriTemplate = "{+baseurl}/v2/gen-ai/knowledge_bases/data_sources/file_upload_presigned_urls";
/**
 * Metadata for all the requests in the request builder.
 */
export const File_upload_presigned_urlsRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: File_upload_presigned_urlsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiCreateDataSourceFileUploadPresignedUrlsOutputFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeApiCreateDataSourceFileUploadPresignedUrlsInputPublic,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
