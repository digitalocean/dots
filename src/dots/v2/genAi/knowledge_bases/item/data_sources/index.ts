/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApiCreateKnowledgeBaseDataSourceOutputFromDiscriminatorValue, createApiListKnowledgeBaseDataSourcesOutputFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeApiCreateKnowledgeBaseDataSourceInputPublic, serializeApiCreateKnowledgeBaseDataSourceOutput, type ApiCreateKnowledgeBaseDataSourceInputPublic, type ApiCreateKnowledgeBaseDataSourceOutput, type ApiListKnowledgeBaseDataSourcesOutput, type ErrorEscaped } from '../../../../../models/index.js';
// @ts-ignore
import { type WithData_source_uuItemRequestBuilder, WithData_source_uuItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/gen-ai/knowledge_bases/{knowledge_base_uu-id}/data_sources
 */
export interface Data_sourcesRequestBuilder extends BaseRequestBuilder<Data_sourcesRequestBuilder> {
    /**
     * Gets an item from the dots.v2.genAi.knowledge_bases.item.data_sources.item collection
     * @param data_source_uuid Data source id
     * @returns {WithData_source_uuItemRequestBuilder}
     */
     byData_source_uuid(data_source_uuid: string) : WithData_source_uuItemRequestBuilder;
    /**
     * To list all data sources for a knowledge base, send a GET request to `/v2/gen-ai/knowledge_bases/{knowledge_base_uuid}/data_sources`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiListKnowledgeBaseDataSourcesOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<Data_sourcesRequestBuilderGetQueryParameters> | undefined) : Promise<ApiListKnowledgeBaseDataSourcesOutput | undefined>;
    /**
     * To add a data source to a knowledge base, send a POST request to `/v2/gen-ai/knowledge_bases/{knowledge_base_uuid}/data_sources`.
     * @param body Data to create a knowledge base data source
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiCreateKnowledgeBaseDataSourceOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: ApiCreateKnowledgeBaseDataSourceInputPublic, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiCreateKnowledgeBaseDataSourceOutput | undefined>;
    /**
     * To list all data sources for a knowledge base, send a GET request to `/v2/gen-ai/knowledge_bases/{knowledge_base_uuid}/data_sources`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<Data_sourcesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * To add a data source to a knowledge base, send a POST request to `/v2/gen-ai/knowledge_bases/{knowledge_base_uuid}/data_sources`.
     * @param body Data to create a knowledge base data source
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ApiCreateKnowledgeBaseDataSourceInputPublic, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * To list all data sources for a knowledge base, send a GET request to `/v2/gen-ai/knowledge_bases/{knowledge_base_uuid}/data_sources`.
 */
export interface Data_sourcesRequestBuilderGetQueryParameters {
    /**
     * Page number.
     */
    page?: number;
    /**
     * Items per page.
     */
    perPage?: number;
}
/**
 * Uri template for the request builder.
 */
export const Data_sourcesRequestBuilderUriTemplate = "{+baseurl}/v2/gen-ai/knowledge_bases/{knowledge_base_uu%2Did}/data_sources{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const Data_sourcesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Data_sourcesRequestBuilderNavigationMetadata: Record<Exclude<keyof Data_sourcesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byData_source_uuid: {
        requestsMetadata: WithData_source_uuItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["data_source_uuid"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Data_sourcesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Data_sourcesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiListKnowledgeBaseDataSourcesOutputFromDiscriminatorValue,
        queryParametersMapper: Data_sourcesRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: Data_sourcesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiCreateKnowledgeBaseDataSourceOutputFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeApiCreateKnowledgeBaseDataSourceInputPublic,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
