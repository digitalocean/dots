/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApiDeleteKnowledgeBaseOutputFromDiscriminatorValue, createApiGetKnowledgeBaseOutputFromDiscriminatorValue, createApiUpdateKnowledgeBaseOutputFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeApiUpdateKnowledgeBaseInputPublic, serializeApiUpdateKnowledgeBaseOutput, type ApiDeleteKnowledgeBaseOutput, type ApiGetKnowledgeBaseOutput, type ApiUpdateKnowledgeBaseInputPublic, type ApiUpdateKnowledgeBaseOutput, type ErrorEscaped } from '../../../../models/index.js';
// @ts-ignore
import { Data_sourcesRequestBuilderNavigationMetadata, Data_sourcesRequestBuilderRequestsMetadata, type Data_sourcesRequestBuilder } from './data_sources/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/gen-ai/knowledge_bases/{knowledge_base_uu-id}
 */
export interface Knowledge_base_uuItemRequestBuilder extends BaseRequestBuilder<Knowledge_base_uuItemRequestBuilder> {
    /**
     * The data_sources property
     */
    get data_sources(): Data_sourcesRequestBuilder;
    /**
     * To delete a knowledge base, send a DELETE request to `/v2/gen-ai/knowledge_bases/{uuid}`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiDeleteKnowledgeBaseOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiDeleteKnowledgeBaseOutput | undefined>;
    /**
     * To retrive information about an existing knowledge base, send a GET request to `/v2/gen-ai/knowledge_bases/{uuid}`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiGetKnowledgeBaseOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiGetKnowledgeBaseOutput | undefined>;
    /**
     * To update a knowledge base, send a PUT request to `/v2/gen-ai/knowledge_bases/{uuid}`.
     * @param body Information about updating a knowledge base
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiUpdateKnowledgeBaseOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     put(body: ApiUpdateKnowledgeBaseInputPublic, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiUpdateKnowledgeBaseOutput | undefined>;
    /**
     * To delete a knowledge base, send a DELETE request to `/v2/gen-ai/knowledge_bases/{uuid}`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To retrive information about an existing knowledge base, send a GET request to `/v2/gen-ai/knowledge_bases/{uuid}`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To update a knowledge base, send a PUT request to `/v2/gen-ai/knowledge_bases/{uuid}`.
     * @param body Information about updating a knowledge base
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPutRequestInformation(body: ApiUpdateKnowledgeBaseInputPublic, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const Knowledge_base_uuItemRequestBuilderUriTemplate = "{+baseurl}/v2/gen-ai/knowledge_bases/{knowledge_base_uu%2Did}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Knowledge_base_uuItemRequestBuilderNavigationMetadata: Record<Exclude<keyof Knowledge_base_uuItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    data_sources: {
        requestsMetadata: Data_sourcesRequestBuilderRequestsMetadata,
        navigationMetadata: Data_sourcesRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Knowledge_base_uuItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: Knowledge_base_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiDeleteKnowledgeBaseOutputFromDiscriminatorValue,
    },
    get: {
        uriTemplate: Knowledge_base_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiGetKnowledgeBaseOutputFromDiscriminatorValue,
    },
    put: {
        uriTemplate: Knowledge_base_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiUpdateKnowledgeBaseOutputFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeApiUpdateKnowledgeBaseInputPublic,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
