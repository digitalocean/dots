/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApiGetEvaluationTestCaseOutputFromDiscriminatorValue, createApiUpdateEvaluationTestCaseOutputFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeApiUpdateEvaluationTestCaseInputPublic, serializeApiUpdateEvaluationTestCaseOutput, type ApiGetEvaluationTestCaseOutput, type ApiUpdateEvaluationTestCaseInputPublic, type ApiUpdateEvaluationTestCaseOutput, type ErrorEscaped } from '../../../../models/index.js';
// @ts-ignore
import { Evaluation_runsRequestBuilderRequestsMetadata, type Evaluation_runsRequestBuilder } from './evaluation_runs/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/gen-ai/evaluation_test_cases/{evaluation_test_case_uu-id}
 */
export interface Evaluation_test_case_uuItemRequestBuilder extends BaseRequestBuilder<Evaluation_test_case_uuItemRequestBuilder> {
    /**
     * The evaluation_runs property
     */
    get evaluation_runs(): Evaluation_runsRequestBuilder;
    /**
     * To retrive information about an existing evaluation test case, send a GET request to `/v2/gen-ai/evaluation_test_case/{test_case_uuid}`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiGetEvaluationTestCaseOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<Evaluation_test_case_uuItemRequestBuilderGetQueryParameters> | undefined) : Promise<ApiGetEvaluationTestCaseOutput | undefined>;
    /**
     * To update an evaluation test-case send a PUT request to `/v2/gen-ai/evaluation_test_cases/{test_case_uuid}`.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiUpdateEvaluationTestCaseOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     put(body: ApiUpdateEvaluationTestCaseInputPublic, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiUpdateEvaluationTestCaseOutput | undefined>;
    /**
     * To retrive information about an existing evaluation test case, send a GET request to `/v2/gen-ai/evaluation_test_case/{test_case_uuid}`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<Evaluation_test_case_uuItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * To update an evaluation test-case send a PUT request to `/v2/gen-ai/evaluation_test_cases/{test_case_uuid}`.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPutRequestInformation(body: ApiUpdateEvaluationTestCaseInputPublic, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * To retrive information about an existing evaluation test case, send a GET request to `/v2/gen-ai/evaluation_test_case/{test_case_uuid}`.
 */
export interface Evaluation_test_case_uuItemRequestBuilderGetQueryParameters {
    /**
     * Version of the test case.
     */
    evaluationTestCaseVersion?: number;
}
/**
 * Uri template for the request builder.
 */
export const Evaluation_test_case_uuItemRequestBuilderUriTemplate = "{+baseurl}/v2/gen-ai/evaluation_test_cases/{evaluation_test_case_uu%2Did}{?evaluation_test_case_version*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const Evaluation_test_case_uuItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "evaluationTestCaseVersion": "evaluation_test_case_version",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Evaluation_test_case_uuItemRequestBuilderNavigationMetadata: Record<Exclude<keyof Evaluation_test_case_uuItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    evaluation_runs: {
        requestsMetadata: Evaluation_runsRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Evaluation_test_case_uuItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Evaluation_test_case_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiGetEvaluationTestCaseOutputFromDiscriminatorValue,
        queryParametersMapper: Evaluation_test_case_uuItemRequestBuilderGetQueryParametersMapper,
    },
    put: {
        uriTemplate: Evaluation_test_case_uuItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiUpdateEvaluationTestCaseOutputFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeApiUpdateEvaluationTestCaseInputPublic,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
