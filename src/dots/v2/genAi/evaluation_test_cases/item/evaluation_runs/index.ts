/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApiListEvaluationRunsByTestCaseOutputFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, type ApiListEvaluationRunsByTestCaseOutput, type ErrorEscaped } from '../../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/gen-ai/evaluation_test_cases/{evaluation_test_case_uu-id}/evaluation_runs
 */
export interface Evaluation_runsRequestBuilder extends BaseRequestBuilder<Evaluation_runsRequestBuilder> {
    /**
     * To list all evaluation runs by test case, send a GET request to `/v2/gen-ai/evaluation_test_cases/{evaluation_test_case_uuid}/evaluation_runs`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiListEvaluationRunsByTestCaseOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<Evaluation_runsRequestBuilderGetQueryParameters> | undefined) : Promise<ApiListEvaluationRunsByTestCaseOutput | undefined>;
    /**
     * To list all evaluation runs by test case, send a GET request to `/v2/gen-ai/evaluation_test_cases/{evaluation_test_case_uuid}/evaluation_runs`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<Evaluation_runsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * To list all evaluation runs by test case, send a GET request to `/v2/gen-ai/evaluation_test_cases/{evaluation_test_case_uuid}/evaluation_runs`.
 */
export interface Evaluation_runsRequestBuilderGetQueryParameters {
    /**
     * Version of the test case.
     */
    evaluationTestCaseVersion?: number;
}
/**
 * Uri template for the request builder.
 */
export const Evaluation_runsRequestBuilderUriTemplate = "{+baseurl}/v2/gen-ai/evaluation_test_cases/{evaluation_test_case_uu%2Did}/evaluation_runs{?evaluation_test_case_version*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const Evaluation_runsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "evaluationTestCaseVersion": "evaluation_test_case_version",
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Evaluation_runsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Evaluation_runsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiListEvaluationRunsByTestCaseOutputFromDiscriminatorValue,
        queryParametersMapper: Evaluation_runsRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
