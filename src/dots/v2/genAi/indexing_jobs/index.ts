/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createApiListKnowledgeBaseIndexingJobsOutputFromDiscriminatorValue, createApiStartKnowledgeBaseIndexingJobOutputFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeApiStartKnowledgeBaseIndexingJobInputPublic, serializeApiStartKnowledgeBaseIndexingJobOutput, type ApiListKnowledgeBaseIndexingJobsOutput, type ApiStartKnowledgeBaseIndexingJobInputPublic, type ApiStartKnowledgeBaseIndexingJobOutput, type ErrorEscaped } from '../../../models/index.js';
// @ts-ignore
import { Indexing_job_uuItemRequestBuilderNavigationMetadata, Indexing_job_uuItemRequestBuilderRequestsMetadata, type Indexing_job_uuItemRequestBuilder } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /v2/gen-ai/indexing_jobs
 */
export interface Indexing_jobsRequestBuilder extends BaseRequestBuilder<Indexing_jobsRequestBuilder> {
    /**
     * Gets an item from the dots.v2.genAi.indexing_jobs.item collection
     * @param indexing_job_uuId Indexing job id
     * @returns {Indexing_job_uuItemRequestBuilder}
     */
     byIndexing_job_uuId(indexing_job_uuId: string) : Indexing_job_uuItemRequestBuilder;
    /**
     * To list all indexing jobs for a knowledge base, send a GET request to `/v2/gen-ai/indexing_jobs`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiListKnowledgeBaseIndexingJobsOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<Indexing_jobsRequestBuilderGetQueryParameters> | undefined) : Promise<ApiListKnowledgeBaseIndexingJobsOutput | undefined>;
    /**
     * To start an indexing job for a knowledge base, send a POST request to `/v2/gen-ai/indexing_jobs`.
     * @param body StartKnowledgeBaseIndexingJobInputPublic description
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ApiStartKnowledgeBaseIndexingJobOutput>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: ApiStartKnowledgeBaseIndexingJobInputPublic, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ApiStartKnowledgeBaseIndexingJobOutput | undefined>;
    /**
     * To list all indexing jobs for a knowledge base, send a GET request to `/v2/gen-ai/indexing_jobs`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<Indexing_jobsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * To start an indexing job for a knowledge base, send a POST request to `/v2/gen-ai/indexing_jobs`.
     * @param body StartKnowledgeBaseIndexingJobInputPublic description
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: ApiStartKnowledgeBaseIndexingJobInputPublic, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * To list all indexing jobs for a knowledge base, send a GET request to `/v2/gen-ai/indexing_jobs`.
 */
export interface Indexing_jobsRequestBuilderGetQueryParameters {
    /**
     * Page number.
     */
    page?: number;
    /**
     * Items per page.
     */
    perPage?: number;
}
/**
 * Uri template for the request builder.
 */
export const Indexing_jobsRequestBuilderUriTemplate = "{+baseurl}/v2/gen-ai/indexing_jobs{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const Indexing_jobsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Indexing_jobsRequestBuilderNavigationMetadata: Record<Exclude<keyof Indexing_jobsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byIndexing_job_uuId: {
        requestsMetadata: Indexing_job_uuItemRequestBuilderRequestsMetadata,
        navigationMetadata: Indexing_job_uuItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["indexing_job_uu%2Did"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Indexing_jobsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Indexing_jobsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiListKnowledgeBaseIndexingJobsOutputFromDiscriminatorValue,
        queryParametersMapper: Indexing_jobsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: Indexing_jobsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createApiStartKnowledgeBaseIndexingJobOutputFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeApiStartKnowledgeBaseIndexingJobInputPublic,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
