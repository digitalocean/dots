/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createVpcFromDiscriminatorValue, serializeVpc } from '../../../models/index.js';
// @ts-ignore
import { MembersRequestBuilderRequestsMetadata } from './members/index.js';
// @ts-ignore
import { PeeringsRequestBuilderNavigationMetadata, PeeringsRequestBuilderRequestsMetadata } from './peerings/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithVpc_GetResponse}
 */
// @ts-ignore
export function createWithVpc_GetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithVpc_GetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithVpc_PatchRequestBody}
 */
// @ts-ignore
export function createWithVpc_PatchRequestBodyFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithVpc_PatchRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithVpc_PatchResponse}
 */
// @ts-ignore
export function createWithVpc_PatchResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithVpc_PatchResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithVpc_PutRequestBody}
 */
// @ts-ignore
export function createWithVpc_PutRequestBodyFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithVpc_PutRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithVpc_PutResponse}
 */
// @ts-ignore
export function createWithVpc_PutResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithVpc_PutResponse;
}
/**
 * The deserialization information for the current model
 * @param WithVpc_GetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithVpc_GetResponse(withVpc_GetResponse = {}) {
    return {
        "vpc": n => { withVpc_GetResponse.vpc = n.getObjectValue(createVpcFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @param WithVpc_PatchRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithVpc_PatchRequestBody(withVpc_PatchRequestBody = {}) {
    return {
        "default": n => { withVpc_PatchRequestBody.defaultEscaped = n.getBooleanValue(); },
        "description": n => { withVpc_PatchRequestBody.description = n.getStringValue(); },
        "name": n => { withVpc_PatchRequestBody.name = n.getStringValue(); },
    };
}
/**
 * The deserialization information for the current model
 * @param WithVpc_PatchResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithVpc_PatchResponse(withVpc_PatchResponse = {}) {
    return {
        "vpc": n => { withVpc_PatchResponse.vpc = n.getObjectValue(createVpcFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @param WithVpc_PutRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithVpc_PutRequestBody(withVpc_PutRequestBody = {}) {
    return {
        "default": n => { withVpc_PutRequestBody.defaultEscaped = n.getBooleanValue(); },
        "description": n => { withVpc_PutRequestBody.description = n.getStringValue(); },
        "name": n => { withVpc_PutRequestBody.name = n.getStringValue(); },
    };
}
/**
 * The deserialization information for the current model
 * @param WithVpc_PutResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithVpc_PutResponse(withVpc_PutResponse = {}) {
    return {
        "vpc": n => { withVpc_PutResponse.vpc = n.getObjectValue(createVpcFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithVpc_GetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithVpc_GetResponse(writer, withVpc_GetResponse = {}, isSerializingDerivedType = false) {
    if (!withVpc_GetResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeObjectValue("vpc", withVpc_GetResponse.vpc, serializeVpc);
    writer.writeAdditionalData(withVpc_GetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithVpc_PatchRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithVpc_PatchRequestBody(writer, withVpc_PatchRequestBody = {}, isSerializingDerivedType = false) {
    if (!withVpc_PatchRequestBody || isSerializingDerivedType) {
        return;
    }
    writer.writeBooleanValue("default", withVpc_PatchRequestBody.defaultEscaped);
    writer.writeStringValue("description", withVpc_PatchRequestBody.description);
    writer.writeStringValue("name", withVpc_PatchRequestBody.name);
    writer.writeAdditionalData(withVpc_PatchRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithVpc_PatchResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithVpc_PatchResponse(writer, withVpc_PatchResponse = {}, isSerializingDerivedType = false) {
    if (!withVpc_PatchResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeObjectValue("vpc", withVpc_PatchResponse.vpc, serializeVpc);
    writer.writeAdditionalData(withVpc_PatchResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithVpc_PutRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithVpc_PutRequestBody(writer, withVpc_PutRequestBody = {}, isSerializingDerivedType = false) {
    if (!withVpc_PutRequestBody || isSerializingDerivedType) {
        return;
    }
    writer.writeBooleanValue("default", withVpc_PutRequestBody.defaultEscaped);
    writer.writeStringValue("description", withVpc_PutRequestBody.description);
    writer.writeStringValue("name", withVpc_PutRequestBody.name);
    writer.writeAdditionalData(withVpc_PutRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithVpc_PutResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithVpc_PutResponse(writer, withVpc_PutResponse = {}, isSerializingDerivedType = false) {
    if (!withVpc_PutResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeObjectValue("vpc", withVpc_PutResponse.vpc, serializeVpc);
    writer.writeAdditionalData(withVpc_PutResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const WithVpc_ItemRequestBuilderUriTemplate = "{+baseurl}/v2/vpcs/{vpc_id}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithVpc_ItemRequestBuilderNavigationMetadata = {
    members: {
        requestsMetadata: MembersRequestBuilderRequestsMetadata,
    },
    peerings: {
        requestsMetadata: PeeringsRequestBuilderRequestsMetadata,
        navigationMetadata: PeeringsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithVpc_ItemRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: WithVpc_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithVpc_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithVpc_GetResponseFromDiscriminatorValue,
    },
    patch: {
        uriTemplate: WithVpc_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithVpc_PatchResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeWithVpc_PatchRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
    put: {
        uriTemplate: WithVpc_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithVpc_PutResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeWithVpc_PutRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
