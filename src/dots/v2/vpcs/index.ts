/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, createVpcFromDiscriminatorValue, serializeMeta_properties, serializePage_links, serializeVpc, type ErrorEscaped, type Meta_properties, type Page_links, type Vpc } from '../../models/index.js';
// @ts-ignore
import { type WithVpc_ItemRequestBuilder, WithVpc_ItemRequestBuilderNavigationMetadata, WithVpc_ItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Guid, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VpcsGetResponse}
 */
// @ts-ignore
export function createVpcsGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVpcsGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VpcsPostRequestBody}
 */
// @ts-ignore
export function createVpcsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVpcsPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VpcsPostResponse}
 */
// @ts-ignore
export function createVpcsPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoVpcsPostResponse;
}
/**
 * The deserialization information for the current model
 * @param VpcsGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVpcsGetResponse(vpcsGetResponse: Partial<VpcsGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "links": n => { vpcsGetResponse.links = n.getObjectValue<Page_links>(createPage_linksFromDiscriminatorValue); },
        "meta": n => { vpcsGetResponse.meta = n.getObjectValue<Meta_properties>(createMeta_propertiesFromDiscriminatorValue); },
        "vpcs": n => { vpcsGetResponse.vpcs = n.getCollectionOfObjectValues<Vpc>(createVpcFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param VpcsPostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVpcsPostRequestBody(vpcsPostRequestBody: Partial<VpcsPostRequestBody> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "description": n => { vpcsPostRequestBody.description = n.getStringValue(); },
        "ip_range": n => { vpcsPostRequestBody.ipRange = n.getStringValue(); },
        "name": n => { vpcsPostRequestBody.name = n.getStringValue(); },
        "region": n => { vpcsPostRequestBody.region = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param VpcsPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVpcsPostResponse(vpcsPostResponse: Partial<VpcsPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "vpc": n => { vpcsPostResponse.vpc = n.getObjectValue<Vpc>(createVpcFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VpcsGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVpcsGetResponse(writer: SerializationWriter, vpcsGetResponse: Partial<VpcsGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vpcsGetResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<Page_links>("links", vpcsGetResponse.links, serializePage_links);
    writer.writeObjectValue<Meta_properties>("meta", vpcsGetResponse.meta, serializeMeta_properties);
    writer.writeCollectionOfObjectValues<Vpc>("vpcs", vpcsGetResponse.vpcs, serializeVpc);
    writer.writeAdditionalData(vpcsGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VpcsPostRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVpcsPostRequestBody(writer: SerializationWriter, vpcsPostRequestBody: Partial<VpcsPostRequestBody> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vpcsPostRequestBody || isSerializingDerivedType) { return; }
    writer.writeStringValue("description", vpcsPostRequestBody.description);
    writer.writeStringValue("ip_range", vpcsPostRequestBody.ipRange);
    writer.writeStringValue("name", vpcsPostRequestBody.name);
    writer.writeStringValue("region", vpcsPostRequestBody.region);
    writer.writeAdditionalData(vpcsPostRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param VpcsPostResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVpcsPostResponse(writer: SerializationWriter, vpcsPostResponse: Partial<VpcsPostResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!vpcsPostResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<Vpc>("vpc", vpcsPostResponse.vpc, serializeVpc);
    writer.writeAdditionalData(vpcsPostResponse.additionalData);
}
export interface VpcsGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * The links property
     */
    links?: Page_links | null;
    /**
     * The meta property
     */
    meta?: Meta_properties | null;
    /**
     * The vpcs property
     */
    vpcs?: Vpc[] | null;
}
export interface VpcsPostRequestBody extends AdditionalDataHolder, Parsable {
    /**
     * A free-form text field for describing the VPC's purpose. It may be a maximum of 255 characters.
     */
    description?: string | null;
    /**
     * The range of IP addresses in the VPC in CIDR notation. Network ranges cannot overlap with other networks in the same account and must be in range of private addresses as defined in RFC1918. It may not be smaller than `/28` nor larger than `/16`. If no IP range is specified, a `/20` network range is generated that won't conflict with other VPC networks in your account.
     */
    ipRange?: string | null;
    /**
     * The name of the VPC. Must be unique and may only contain alphanumeric characters, dashes, and periods.
     */
    name?: string | null;
    /**
     * The slug identifier for the region where the VPC will be created.
     */
    region?: string | null;
}
export interface VpcsPostResponse extends AdditionalDataHolder, Parsable {
    /**
     * The vpc property
     */
    vpc?: Vpc | null;
}
/**
 * Builds and executes requests for operations under /v2/vpcs
 */
export interface VpcsRequestBuilder extends BaseRequestBuilder<VpcsRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.v2.vpcs.item collection
     * @param vpc_id A unique identifier for a VPC.
     * @returns {WithVpc_ItemRequestBuilder}
     */
     byVpc_id(vpc_id: Guid) : WithVpc_ItemRequestBuilder;
    /**
     * To list all of the VPCs on your account, send a GET request to `/v2/vpcs`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<VpcsGetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<VpcsRequestBuilderGetQueryParameters> | undefined) : Promise<VpcsGetResponse | undefined>;
    /**
     * To create a VPC, send a POST request to `/v2/vpcs` specifying the attributesin the table below in the JSON body.**Note:** If you do not currently have a VPC network in a specific datacenterregion, the first one that you create will be set as the default for thatregion. The default VPC for a region cannot be changed or deleted.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<VpcsPostResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: VpcsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<VpcsPostResponse | undefined>;
    /**
     * To list all of the VPCs on your account, send a GET request to `/v2/vpcs`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<VpcsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * To create a VPC, send a POST request to `/v2/vpcs` specifying the attributesin the table below in the JSON body.**Note:** If you do not currently have a VPC network in a specific datacenterregion, the first one that you create will be set as the default for thatregion. The default VPC for a region cannot be changed or deleted.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: VpcsPostRequestBody, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * To list all of the VPCs on your account, send a GET request to `/v2/vpcs`.
 */
export interface VpcsRequestBuilderGetQueryParameters {
    /**
     * Which 'page' of paginated results to return.
     */
    page?: number;
    /**
     * Number of items returned per page
     */
    perPage?: number;
}
/**
 * Uri template for the request builder.
 */
export const VpcsRequestBuilderUriTemplate = "{+baseurl}/v2/vpcs{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const VpcsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const VpcsRequestBuilderNavigationMetadata: Record<Exclude<keyof VpcsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byVpc_id: {
        requestsMetadata: WithVpc_ItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithVpc_ItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["vpc_id"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const VpcsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: VpcsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createVpcsGetResponseFromDiscriminatorValue,
        queryParametersMapper: VpcsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: VpcsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createVpcsPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeVpcsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
