/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, createVpcFromDiscriminatorValue, serializeMeta_properties, serializePage_links, serializeVpc } from '../../models/index.js';
// @ts-ignore
import { WithVpc_ItemRequestBuilderNavigationMetadata, WithVpc_ItemRequestBuilderRequestsMetadata } from './item/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VpcsGetResponse}
 */
// @ts-ignore
export function createVpcsGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoVpcsGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VpcsPostRequestBody}
 */
// @ts-ignore
export function createVpcsPostRequestBodyFromDiscriminatorValue(parseNode) {
    return deserializeIntoVpcsPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {VpcsPostResponse}
 */
// @ts-ignore
export function createVpcsPostResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoVpcsPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVpcsGetResponse(vpcsGetResponse = {}) {
    return {
        "links": n => { vpcsGetResponse.links = n.getObjectValue(createPage_linksFromDiscriminatorValue); },
        "meta": n => { vpcsGetResponse.meta = n.getObjectValue(createMeta_propertiesFromDiscriminatorValue); },
        "vpcs": n => { vpcsGetResponse.vpcs = n.getCollectionOfObjectValues(createVpcFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVpcsPostRequestBody(vpcsPostRequestBody = {}) {
    return {
        "description": n => { vpcsPostRequestBody.description = n.getStringValue(); },
        "ip_range": n => { vpcsPostRequestBody.ipRange = n.getStringValue(); },
        "name": n => { vpcsPostRequestBody.name = n.getStringValue(); },
        "region": n => { vpcsPostRequestBody.region = n.getStringValue(); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoVpcsPostResponse(vpcsPostResponse = {}) {
    return {
        "vpc": n => { vpcsPostResponse.vpc = n.getObjectValue(createVpcFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVpcsGetResponse(writer, vpcsGetResponse = {}) {
    if (vpcsGetResponse) {
        writer.writeObjectValue("links", vpcsGetResponse.links, serializePage_links);
        writer.writeObjectValue("meta", vpcsGetResponse.meta, serializeMeta_properties);
        writer.writeCollectionOfObjectValues("vpcs", vpcsGetResponse.vpcs, serializeVpc);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVpcsPostRequestBody(writer, vpcsPostRequestBody = {}) {
    if (vpcsPostRequestBody) {
        writer.writeStringValue("description", vpcsPostRequestBody.description);
        writer.writeStringValue("ip_range", vpcsPostRequestBody.ipRange);
        writer.writeStringValue("name", vpcsPostRequestBody.name);
        writer.writeStringValue("region", vpcsPostRequestBody.region);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeVpcsPostResponse(writer, vpcsPostResponse = {}) {
    if (vpcsPostResponse) {
        writer.writeObjectValue("vpc", vpcsPostResponse.vpc, serializeVpc);
    }
}
/**
 * Uri template for the request builder.
 */
export const VpcsRequestBuilderUriTemplate = "{+baseurl}/v2/vpcs{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const VpcsRequestBuilderGetQueryParametersMapper = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const VpcsRequestBuilderNavigationMetadata = {
    byVpc_id: {
        requestsMetadata: WithVpc_ItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithVpc_ItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["vpc_id"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const VpcsRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: VpcsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createVpcsGetResponseFromDiscriminatorValue,
        queryParametersMapper: VpcsRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: VpcsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createVpcsPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeVpcsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
