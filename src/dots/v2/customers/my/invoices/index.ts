/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createInvoice_previewFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, serializeInvoice_preview, serializeMeta_properties, serializePage_links, type ErrorEscaped, type Invoice_preview, type Meta_properties, type Page_links } from '../../../../models/index.js';
// @ts-ignore
import { type WithInvoice_uuItemRequestBuilder, WithInvoice_uuItemRequestBuilderNavigationMetadata, WithInvoice_uuItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {InvoicesGetResponse}
 */
// @ts-ignore
export function createInvoicesGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoInvoicesGetResponse;
}
/**
 * The deserialization information for the current model
 * @param InvoicesGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoInvoicesGetResponse(invoicesGetResponse: Partial<InvoicesGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "invoice_preview": n => { invoicesGetResponse.invoicePreview = n.getObjectValue<Invoice_preview>(createInvoice_previewFromDiscriminatorValue); },
        "invoices": n => { invoicesGetResponse.invoices = n.getCollectionOfObjectValues<Invoice_preview>(createInvoice_previewFromDiscriminatorValue); },
        "links": n => { invoicesGetResponse.links = n.getObjectValue<Page_links>(createPage_linksFromDiscriminatorValue); },
        "meta": n => { invoicesGetResponse.meta = n.getObjectValue<Meta_properties>(createMeta_propertiesFromDiscriminatorValue); },
    }
}
export interface InvoicesGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * The invoice preview.
     */
    invoicePreview?: Invoice_preview | null;
    /**
     * The invoices property
     */
    invoices?: Invoice_preview[] | null;
    /**
     * The links property
     */
    links?: Page_links | null;
    /**
     * The meta property
     */
    meta?: Meta_properties | null;
}
/**
 * Builds and executes requests for operations under /v2/customers/my/invoices
 */
export interface InvoicesRequestBuilder extends BaseRequestBuilder<InvoicesRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.v2.customers.my.invoices.item collection
     * @param invoice_uuid UUID of the invoice
     * @returns {WithInvoice_uuItemRequestBuilder}
     */
     byInvoice_uuid(invoice_uuid: string) : WithInvoice_uuItemRequestBuilder;
    /**
     * To retrieve a list of all invoices, send a GET request to `/v2/customers/my/invoices`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<InvoicesGetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<InvoicesRequestBuilderGetQueryParameters> | undefined) : Promise<InvoicesGetResponse | undefined>;
    /**
     * To retrieve a list of all invoices, send a GET request to `/v2/customers/my/invoices`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<InvoicesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * To retrieve a list of all invoices, send a GET request to `/v2/customers/my/invoices`.
 */
export interface InvoicesRequestBuilderGetQueryParameters {
    /**
     * Which 'page' of paginated results to return.
     */
    page?: number;
    /**
     * Number of items returned per page
     */
    perPage?: number;
}
/**
 * Serializes information the current object
 * @param InvoicesGetResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeInvoicesGetResponse(writer: SerializationWriter, invoicesGetResponse: Partial<InvoicesGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!invoicesGetResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<Invoice_preview>("invoice_preview", invoicesGetResponse.invoicePreview, serializeInvoice_preview);
    writer.writeCollectionOfObjectValues<Invoice_preview>("invoices", invoicesGetResponse.invoices, serializeInvoice_preview);
    writer.writeObjectValue<Page_links>("links", invoicesGetResponse.links, serializePage_links);
    writer.writeObjectValue<Meta_properties>("meta", invoicesGetResponse.meta, serializeMeta_properties);
    writer.writeAdditionalData(invoicesGetResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const InvoicesRequestBuilderUriTemplate = "{+baseurl}/v2/customers/my/invoices{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const InvoicesRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const InvoicesRequestBuilderNavigationMetadata: Record<Exclude<keyof InvoicesRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byInvoice_uuid: {
        requestsMetadata: WithInvoice_uuItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithInvoice_uuItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["invoice_uuid"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const InvoicesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: InvoicesRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createInvoicesGetResponseFromDiscriminatorValue,
        queryParametersMapper: InvoicesRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
