/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createBilling_historyFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, serializeBilling_history, serializeMeta_properties, serializePage_links, type Billing_history, type ErrorEscaped, type Meta_properties, type Page_links } from '../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface Billing_historyGetResponse extends Parsable {
    /**
     * The billing_history property
     */
    billingHistory?: Billing_history[] | null;
    /**
     * The links property
     */
    links?: Page_links | null;
    /**
     * Information about the response itself.
     */
    meta?: Meta_properties | null;
}
/**
 * Builds and executes requests for operations under /v2/customers/my/billing_history
 */
export interface Billing_historyRequestBuilder extends BaseRequestBuilder<Billing_historyRequestBuilder> {
    /**
     * To retrieve a list of all billing history entries, send a GET request to `/v2/customers/my/billing_history`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Billing_historyGetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Billing_historyGetResponse | undefined>;
    /**
     * To retrieve a list of all billing history entries, send a GET request to `/v2/customers/my/billing_history`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Billing_historyGetResponse}
 */
// @ts-ignore
export function createBilling_historyGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBilling_historyGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBilling_historyGetResponse(billing_historyGetResponse: Partial<Billing_historyGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "billing_history": n => { billing_historyGetResponse.billingHistory = n.getCollectionOfObjectValues<Billing_history>(createBilling_historyFromDiscriminatorValue); },
        "links": n => { billing_historyGetResponse.links = n.getObjectValue<Page_links>(createPage_linksFromDiscriminatorValue); },
        "meta": n => { billing_historyGetResponse.meta = n.getObjectValue<Meta_properties>(createMeta_propertiesFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBilling_historyGetResponse(writer: SerializationWriter, billing_historyGetResponse: Partial<Billing_historyGetResponse> | undefined | null = {}) : void {
    if (billing_historyGetResponse) {
        writer.writeCollectionOfObjectValues<Billing_history>("billing_history", billing_historyGetResponse.billingHistory, serializeBilling_history);
        writer.writeObjectValue<Page_links>("links", billing_historyGetResponse.links, serializePage_links);
        writer.writeObjectValue<Meta_properties>("meta", billing_historyGetResponse.meta, serializeMeta_properties);
    }
}
/**
 * Uri template for the request builder.
 */
export const Billing_historyRequestBuilderUriTemplate = "{+baseurl}/v2/customers/my/billing_history";
/**
 * Metadata for all the requests in the request builder.
 */
export const Billing_historyRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Billing_historyRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createBilling_historyGetResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
