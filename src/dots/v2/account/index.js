/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createAccountFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeAccount } from '../../models/index.js';
// @ts-ignore
import { KeysRequestBuilderNavigationMetadata, KeysRequestBuilderRequestsMetadata } from './keys/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AccountGetResponse}
 */
// @ts-ignore
export function createAccountGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoAccountGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAccountGetResponse(accountGetResponse = {}) {
    return {
        "account": n => { accountGetResponse.account = n.getObjectValue(createAccountFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAccountGetResponse(writer, accountGetResponse = {}) {
    if (accountGetResponse) {
        writer.writeObjectValue("account", accountGetResponse.account, serializeAccount);
        writer.writeAdditionalData(accountGetResponse.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const AccountRequestBuilderUriTemplate = "{+baseurl}/v2/account";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AccountRequestBuilderNavigationMetadata = {
    keys: {
        requestsMetadata: KeysRequestBuilderRequestsMetadata,
        navigationMetadata: KeysRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AccountRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: AccountRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createAccountGetResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
