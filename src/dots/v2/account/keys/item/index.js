/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createSshKeysFromDiscriminatorValue, serializeSshKeys } from '../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithSsh_key_identifierGetResponse}
 */
// @ts-ignore
export function createWithSsh_key_identifierGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithSsh_key_identifierGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithSsh_key_identifierPutRequestBody}
 */
// @ts-ignore
export function createWithSsh_key_identifierPutRequestBodyFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithSsh_key_identifierPutRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithSsh_key_identifierPutResponse}
 */
// @ts-ignore
export function createWithSsh_key_identifierPutResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoWithSsh_key_identifierPutResponse;
}
/**
 * The deserialization information for the current model
 * @param WithSsh_key_identifierGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithSsh_key_identifierGetResponse(withSsh_key_identifierGetResponse = {}) {
    return {
        "ssh_key": n => { withSsh_key_identifierGetResponse.sshKey = n.getObjectValue(createSshKeysFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @param WithSsh_key_identifierPutRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithSsh_key_identifierPutRequestBody(withSsh_key_identifierPutRequestBody = {}) {
    return {
        "name": n => { withSsh_key_identifierPutRequestBody.name = n.getStringValue(); },
    };
}
/**
 * The deserialization information for the current model
 * @param WithSsh_key_identifierPutResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithSsh_key_identifierPutResponse(withSsh_key_identifierPutResponse = {}) {
    return {
        "ssh_key": n => { withSsh_key_identifierPutResponse.sshKey = n.getObjectValue(createSshKeysFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithSsh_key_identifierGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithSsh_key_identifierGetResponse(writer, withSsh_key_identifierGetResponse = {}, isSerializingDerivedType = false) {
    if (!withSsh_key_identifierGetResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeObjectValue("ssh_key", withSsh_key_identifierGetResponse.sshKey, serializeSshKeys);
    writer.writeAdditionalData(withSsh_key_identifierGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithSsh_key_identifierPutRequestBody The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithSsh_key_identifierPutRequestBody(writer, withSsh_key_identifierPutRequestBody = {}, isSerializingDerivedType = false) {
    if (!withSsh_key_identifierPutRequestBody || isSerializingDerivedType) {
        return;
    }
    writer.writeStringValue("name", withSsh_key_identifierPutRequestBody.name);
    writer.writeAdditionalData(withSsh_key_identifierPutRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithSsh_key_identifierPutResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithSsh_key_identifierPutResponse(writer, withSsh_key_identifierPutResponse = {}, isSerializingDerivedType = false) {
    if (!withSsh_key_identifierPutResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeObjectValue("ssh_key", withSsh_key_identifierPutResponse.sshKey, serializeSshKeys);
    writer.writeAdditionalData(withSsh_key_identifierPutResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const WithSsh_key_identifierItemRequestBuilderUriTemplate = "{+baseurl}/v2/account/keys/{ssh_key_identifier}";
/**
 * Metadata for all the requests in the request builder.
 */
export const WithSsh_key_identifierItemRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: WithSsh_key_identifierItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithSsh_key_identifierItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithSsh_key_identifierGetResponseFromDiscriminatorValue,
    },
    put: {
        uriTemplate: WithSsh_key_identifierItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createWithSsh_key_identifierPutResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeWithSsh_key_identifierPutRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
