/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDatabase_metrics_credentialsFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeDatabase_metrics_credentials } from '../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CredentialsGetResponse}
 */
// @ts-ignore
export function createCredentialsGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoCredentialsGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCredentialsGetResponse(credentialsGetResponse = {}) {
    return {
        "credentials": n => { credentialsGetResponse.credentials = n.getObjectValue(createDatabase_metrics_credentialsFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCredentialsGetResponse(writer, credentialsGetResponse = {}) {
    if (credentialsGetResponse) {
        writer.writeObjectValue("credentials", credentialsGetResponse.credentials, serializeDatabase_metrics_credentials);
        writer.writeAdditionalData(credentialsGetResponse.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const CredentialsRequestBuilderUriTemplate = "{+baseurl}/v2/databases/metrics/credentials";
/**
 * Metadata for all the requests in the request builder.
 */
export const CredentialsRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: CredentialsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createCredentialsGetResponseFromDiscriminatorValue,
    },
    put: {
        uriTemplate: CredentialsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDatabase_metrics_credentials,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
