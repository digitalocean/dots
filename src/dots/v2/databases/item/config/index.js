/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createKafka_advanced_configFromDiscriminatorValue, createMongo_advanced_configFromDiscriminatorValue, createMysql_advanced_configFromDiscriminatorValue, createOpensearch_advanced_configFromDiscriminatorValue, createPostgres_advanced_configFromDiscriminatorValue, createRedis_advanced_configFromDiscriminatorValue, createValkey_advanced_configFromDiscriminatorValue, deserializeIntoKafka_advanced_config, deserializeIntoMongo_advanced_config, deserializeIntoMysql_advanced_config, deserializeIntoOpensearch_advanced_config, deserializeIntoPostgres_advanced_config, deserializeIntoRedis_advanced_config, deserializeIntoValkey_advanced_config, serializeDatabase_config, serializeKafka_advanced_config, serializeMongo_advanced_config, serializeMysql_advanced_config, serializeOpensearch_advanced_config, serializePostgres_advanced_config, serializeRedis_advanced_config, serializeValkey_advanced_config } from '../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Kafka_advanced_config | Mongo_advanced_config | Mysql_advanced_config | Opensearch_advanced_config | Postgres_advanced_config | Redis_advanced_config | Valkey_advanced_config}
 */
// @ts-ignore
export function createConfigGetResponse_configFromDiscriminatorValue(parseNode) {
    return deserializeIntoConfigGetResponse_config;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ConfigGetResponse}
 */
// @ts-ignore
export function createConfigGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoConfigGetResponse;
}
/**
 * The deserialization information for the current model
 * @param ConfigGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoConfigGetResponse(configGetResponse = {}) {
    return {
        "config": n => { configGetResponse.config = n.getObjectValue(createKafka_advanced_configFromDiscriminatorValue) ?? n.getObjectValue(createMongo_advanced_configFromDiscriminatorValue) ?? n.getObjectValue(createMysql_advanced_configFromDiscriminatorValue) ?? n.getObjectValue(createOpensearch_advanced_configFromDiscriminatorValue) ?? n.getObjectValue(createPostgres_advanced_configFromDiscriminatorValue) ?? n.getObjectValue(createRedis_advanced_configFromDiscriminatorValue) ?? n.getObjectValue(createValkey_advanced_configFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @param ConfigGetResponse_config The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoConfigGetResponse_config(configGetResponse_config = {}) {
    return {
        ...deserializeIntoKafka_advanced_config(configGetResponse_config),
        ...deserializeIntoMongo_advanced_config(configGetResponse_config),
        ...deserializeIntoMysql_advanced_config(configGetResponse_config),
        ...deserializeIntoOpensearch_advanced_config(configGetResponse_config),
        ...deserializeIntoPostgres_advanced_config(configGetResponse_config),
        ...deserializeIntoRedis_advanced_config(configGetResponse_config),
        ...deserializeIntoValkey_advanced_config(configGetResponse_config),
    };
}
/**
 * Serializes information the current object
 * @param ConfigGetResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeConfigGetResponse(writer, configGetResponse = {}, isSerializingDerivedType = false) {
    if (!configGetResponse || isSerializingDerivedType) {
        return;
    }
    writer.writeObjectValue("config", configGetResponse.config, serializeConfigGetResponse_config);
    writer.writeAdditionalData(configGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param ConfigGetResponse_config The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeConfigGetResponse_config(writer, configGetResponse_config = {}, isSerializingDerivedType = false) {
    serializeKafka_advanced_config(writer, configGetResponse_config);
    serializeMongo_advanced_config(writer, configGetResponse_config);
    serializeMysql_advanced_config(writer, configGetResponse_config);
    serializeOpensearch_advanced_config(writer, configGetResponse_config);
    serializePostgres_advanced_config(writer, configGetResponse_config);
    serializeRedis_advanced_config(writer, configGetResponse_config);
    serializeValkey_advanced_config(writer, configGetResponse_config);
}
/**
 * Uri template for the request builder.
 */
export const ConfigRequestBuilderUriTemplate = "{+baseurl}/v2/databases/{database_cluster_uuid}/config";
/**
 * Metadata for all the requests in the request builder.
 */
export const ConfigRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: ConfigRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createConfigGetResponseFromDiscriminatorValue,
    },
    patch: {
        uriTemplate: ConfigRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendPrimitive",
        responseBodyFactory: "ArrayBuffer",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDatabase_config,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
