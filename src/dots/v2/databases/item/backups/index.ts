/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createBackupFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeBackup, type Backup, type ErrorEscaped } from '../../../../models/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface BackupsGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * If a backup is currently in progress, this attribute shows the percentage of completion. If no backup is in progress, this attribute will be hidden.
     */
    backupProgress?: string | null;
    /**
     * The backups property
     */
    backups?: Backup[] | null;
    /**
     * The scheduled_backup_time property
     */
    scheduledBackupTime?: BackupsGetResponse_scheduled_backup_time | null;
}
export interface BackupsGetResponse_scheduled_backup_time extends AdditionalDataHolder, Parsable {
    /**
     * The hour of the day when the backup is scheduled (in UTC).
     */
    backupHour?: number | null;
    /**
     * The frequency, in hours, at which backups are taken.
     */
    backupIntervalHours?: number | null;
    /**
     * The minute of the hour when the backup is scheduled.
     */
    backupMinute?: number | null;
}
/**
 * Builds and executes requests for operations under /v2/databases/{database_cluster_uuid}/backups
 */
export interface BackupsRequestBuilder extends BaseRequestBuilder<BackupsRequestBuilder> {
    /**
     * To list all of the available backups of a PostgreSQL or MySQL database cluster, send a GET request to `/v2/databases/$DATABASE_ID/backups`.**Note**: Backups are not supported for Caching or Valkey clusters.The result will be a JSON object with a `backups key`. This will be set to an array of backup objects, each of which will contain the size of the backup and the timestamp at which it was created.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<BackupsGetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<BackupsGetResponse | undefined>;
    /**
     * To list all of the available backups of a PostgreSQL or MySQL database cluster, send a GET request to `/v2/databases/$DATABASE_ID/backups`.**Note**: Backups are not supported for Caching or Valkey clusters.The result will be a JSON object with a `backups key`. This will be set to an array of backup objects, each of which will contain the size of the backup and the timestamp at which it was created.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BackupsGetResponse_scheduled_backup_time}
 */
// @ts-ignore
export function createBackupsGetResponse_scheduled_backup_timeFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBackupsGetResponse_scheduled_backup_time;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BackupsGetResponse}
 */
// @ts-ignore
export function createBackupsGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBackupsGetResponse;
}
/**
 * The deserialization information for the current model
 * @param BackupsGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBackupsGetResponse(backupsGetResponse: Partial<BackupsGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backup_progress": n => { backupsGetResponse.backupProgress = n.getStringValue(); },
        "backups": n => { backupsGetResponse.backups = n.getCollectionOfObjectValues<Backup>(createBackupFromDiscriminatorValue); },
        "scheduled_backup_time": n => { backupsGetResponse.scheduledBackupTime = n.getObjectValue<BackupsGetResponse_scheduled_backup_time>(createBackupsGetResponse_scheduled_backup_timeFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param BackupsGetResponse_scheduled_backup_time The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBackupsGetResponse_scheduled_backup_time(backupsGetResponse_scheduled_backup_time: Partial<BackupsGetResponse_scheduled_backup_time> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "backup_hour": n => { backupsGetResponse_scheduled_backup_time.backupHour = n.getNumberValue(); },
        "backup_interval_hours": n => { backupsGetResponse_scheduled_backup_time.backupIntervalHours = n.getNumberValue(); },
        "backup_minute": n => { backupsGetResponse_scheduled_backup_time.backupMinute = n.getNumberValue(); },
    }
}
/**
 * Serializes information the current object
 * @param BackupsGetResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBackupsGetResponse(writer: SerializationWriter, backupsGetResponse: Partial<BackupsGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!backupsGetResponse || isSerializingDerivedType) { return; }
    writer.writeStringValue("backup_progress", backupsGetResponse.backupProgress);
    writer.writeCollectionOfObjectValues<Backup>("backups", backupsGetResponse.backups, serializeBackup);
    writer.writeObjectValue<BackupsGetResponse_scheduled_backup_time>("scheduled_backup_time", backupsGetResponse.scheduledBackupTime, serializeBackupsGetResponse_scheduled_backup_time);
    writer.writeAdditionalData(backupsGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param BackupsGetResponse_scheduled_backup_time The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBackupsGetResponse_scheduled_backup_time(writer: SerializationWriter, backupsGetResponse_scheduled_backup_time: Partial<BackupsGetResponse_scheduled_backup_time> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!backupsGetResponse_scheduled_backup_time || isSerializingDerivedType) { return; }
    writer.writeNumberValue("backup_hour", backupsGetResponse_scheduled_backup_time.backupHour);
    writer.writeNumberValue("backup_interval_hours", backupsGetResponse_scheduled_backup_time.backupIntervalHours);
    writer.writeNumberValue("backup_minute", backupsGetResponse_scheduled_backup_time.backupMinute);
    writer.writeAdditionalData(backupsGetResponse_scheduled_backup_time.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const BackupsRequestBuilderUriTemplate = "{+baseurl}/v2/databases/{database_cluster_uuid}/backups";
/**
 * Metadata for all the requests in the request builder.
 */
export const BackupsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: BackupsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createBackupsGetResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
