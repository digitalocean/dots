/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDatabase_userFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, createMysql_settingsFromDiscriminatorValue, serializeDatabase_user, serializeMysql_settings } from '../../../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reset_authPostRequestBody}
 */
// @ts-ignore
export function createReset_authPostRequestBodyFromDiscriminatorValue(parseNode) {
    return deserializeIntoReset_authPostRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Reset_authPostResponse}
 */
// @ts-ignore
export function createReset_authPostResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoReset_authPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReset_authPostRequestBody(reset_authPostRequestBody = {}) {
    return {
        "mysql_settings": n => { reset_authPostRequestBody.mysqlSettings = n.getObjectValue(createMysql_settingsFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoReset_authPostResponse(reset_authPostResponse = {}) {
    return {
        "user": n => { reset_authPostResponse.user = n.getObjectValue(createDatabase_userFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReset_authPostRequestBody(writer, reset_authPostRequestBody = {}) {
    if (reset_authPostRequestBody) {
        writer.writeObjectValue("mysql_settings", reset_authPostRequestBody.mysqlSettings, serializeMysql_settings);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeReset_authPostResponse(writer, reset_authPostResponse = {}) {
    if (reset_authPostResponse) {
        writer.writeObjectValue("user", reset_authPostResponse.user, serializeDatabase_user);
    }
}
/**
 * Uri template for the request builder.
 */
export const Reset_authRequestBuilderUriTemplate = "{+baseurl}/v2/databases/{database_cluster_uuid}/users/{username}/reset_auth";
/**
 * Metadata for all the requests in the request builder.
 */
export const Reset_authRequestBuilderRequestsMetadata = {
    post: {
        uriTemplate: Reset_authRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createReset_authPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeReset_authPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
