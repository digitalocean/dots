/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createKafka_schema_version_verboseFromDiscriminatorValue } from '../../../../../models/index.js';
// @ts-ignore
import { VersionsRequestBuilderNavigationMetadata } from './versions/index.js';
/**
 * Uri template for the request builder.
 */
export const WithSubject_nameItemRequestBuilderUriTemplate = "{+baseurl}/v2/databases/{database_cluster_uuid}/schema-registry/{subject_name}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithSubject_nameItemRequestBuilderNavigationMetadata = {
    versions: {
        navigationMetadata: VersionsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithSubject_nameItemRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: WithSubject_nameItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithSubject_nameItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createKafka_schema_version_verboseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
