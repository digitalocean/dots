/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createCaFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeCa } from '../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CaGetResponse}
 */
// @ts-ignore
export function createCaGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoCaGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCaGetResponse(caGetResponse = {}) {
    return {
        "ca": n => { caGetResponse.ca = n.getObjectValue(createCaFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCaGetResponse(writer, caGetResponse = {}) {
    if (caGetResponse) {
        writer.writeObjectValue("ca", caGetResponse.ca, serializeCa);
        writer.writeAdditionalData(caGetResponse.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const CaRequestBuilderUriTemplate = "{+baseurl}/v2/databases/{database_cluster_uuid}/ca";
/**
 * Metadata for all the requests in the request builder.
 */
export const CaRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: CaRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createCaGetResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
