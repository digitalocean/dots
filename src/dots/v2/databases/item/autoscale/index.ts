/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createDatabase_autoscale_paramsFromDiscriminatorValue, createErrorEscapedFromDiscriminatorValue, serializeDatabase_autoscale_params, type Database_autoscale_params, type ErrorEscaped } from '../../../../models/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface AutoscaleGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * Contains all autoscaling configuration for a database cluster
     */
    autoscale?: Database_autoscale_params | null;
}
/**
 * Builds and executes requests for operations under /v2/databases/{database_cluster_uuid}/autoscale
 */
export interface AutoscaleRequestBuilder extends BaseRequestBuilder<AutoscaleRequestBuilder> {
    /**
     * To retrieve the autoscale configuration for an existing database cluster, send a GET request to `/v2/databases/$DATABASE_ID/autoscale`.The response will be a JSON object with autoscaling configuration details.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AutoscaleGetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<AutoscaleGetResponse | undefined>;
    /**
     * To configure autoscale settings for an existing database cluster, send a PUT request to `/v2/databases/$DATABASE_ID/autoscale`, specifying the autoscale configuration.A successful request will receive a 204 No Content status code with no body in response.
     * @param body Contains all autoscaling configuration for a database cluster
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 422 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     put(body: Database_autoscale_params, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * To retrieve the autoscale configuration for an existing database cluster, send a GET request to `/v2/databases/$DATABASE_ID/autoscale`.The response will be a JSON object with autoscaling configuration details.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To configure autoscale settings for an existing database cluster, send a PUT request to `/v2/databases/$DATABASE_ID/autoscale`, specifying the autoscale configuration.A successful request will receive a 204 No Content status code with no body in response.
     * @param body Contains all autoscaling configuration for a database cluster
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPutRequestInformation(body: Database_autoscale_params, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AutoscaleGetResponse}
 */
// @ts-ignore
export function createAutoscaleGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAutoscaleGetResponse;
}
/**
 * The deserialization information for the current model
 * @param AutoscaleGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAutoscaleGetResponse(autoscaleGetResponse: Partial<AutoscaleGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "autoscale": n => { autoscaleGetResponse.autoscale = n.getObjectValue<Database_autoscale_params>(createDatabase_autoscale_paramsFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param AutoscaleGetResponse The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAutoscaleGetResponse(writer: SerializationWriter, autoscaleGetResponse: Partial<AutoscaleGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!autoscaleGetResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<Database_autoscale_params>("autoscale", autoscaleGetResponse.autoscale, serializeDatabase_autoscale_params);
    writer.writeAdditionalData(autoscaleGetResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const AutoscaleRequestBuilderUriTemplate = "{+baseurl}/v2/databases/{database_cluster_uuid}/autoscale";
/**
 * Metadata for all the requests in the request builder.
 */
export const AutoscaleRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: AutoscaleRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createAutoscaleGetResponseFromDiscriminatorValue,
    },
    put: {
        uriTemplate: AutoscaleRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            422: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDatabase_autoscale_params,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
