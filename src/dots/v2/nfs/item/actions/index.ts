/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createNfs_action_resizeFromDiscriminatorValue, createNfs_action_snapshotFromDiscriminatorValue, createNfs_actions_responseFromDiscriminatorValue, deserializeIntoNfs_action_resize, deserializeIntoNfs_action_snapshot, serializeNfs_action_resize, serializeNfs_action_snapshot, serializeNfs_actions_response, type ErrorEscaped, type Nfs_action_resize, type Nfs_action_snapshot, type Nfs_actions_response } from '../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

export type ActionsPostRequestBody = Nfs_action_resize | Nfs_action_snapshot;
/**
 * Builds and executes requests for operations under /v2/nfs/{nfs_id}/actions
 */
export interface ActionsRequestBuilder extends BaseRequestBuilder<ActionsRequestBuilder> {
    /**
     * To execute an action (such as resize) on a specified NFS share, send a POST request to `/v2/nfs/{nfs_id}/actions`. In the JSON body to the request, set the `type` attribute to on of the supported action types:| Action                           | Details || -------------------------------- | ----------- || <nobr>`resize`</nobr>            | Resizes an NFS share. Set the size_gib attribute to a desired value in GiB || <nobr>`snapshot`</nobr>          | Takes a snapshot of an NFS share |
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Nfs_actions_response>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: Nfs_action_resize | Nfs_action_snapshot, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Nfs_actions_response | undefined>;
    /**
     * To execute an action (such as resize) on a specified NFS share, send a POST request to `/v2/nfs/{nfs_id}/actions`. In the JSON body to the request, set the `type` attribute to on of the supported action types:| Action                           | Details || -------------------------------- | ----------- || <nobr>`resize`</nobr>            | Resizes an NFS share. Set the size_gib attribute to a desired value in GiB || <nobr>`snapshot`</nobr>          | Takes a snapshot of an NFS share |
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: Nfs_action_resize | Nfs_action_snapshot, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Nfs_action_resize | Nfs_action_snapshot}
 */
// @ts-ignore
export function createActionsPostRequestBodyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoActionsPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @param ActionsPostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoActionsPostRequestBody(actionsPostRequestBody: Partial<Nfs_action_resize | Nfs_action_snapshot> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoNfs_action_resize(actionsPostRequestBody as Nfs_action_resize),
        ...deserializeIntoNfs_action_snapshot(actionsPostRequestBody as Nfs_action_snapshot),
    }
}
/**
 * Serializes information the current object
 * @param ActionsPostRequestBody The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeActionsPostRequestBody(writer: SerializationWriter, actionsPostRequestBody: Partial<Nfs_action_resize | Nfs_action_snapshot> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    serializeNfs_action_resize(writer, actionsPostRequestBody as Nfs_action_resize);
    serializeNfs_action_snapshot(writer, actionsPostRequestBody as Nfs_action_snapshot);
}
/**
 * Uri template for the request builder.
 */
export const ActionsRequestBuilderUriTemplate = "{+baseurl}/v2/nfs/{nfs_id}/actions";
/**
 * Metadata for all the requests in the request builder.
 */
export const ActionsRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: ActionsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createNfs_actions_responseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeActionsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
