/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue } from '../../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Service_keyGetResponse_service_key}
 */
// @ts-ignore
export function createService_keyGetResponse_service_keyFromDiscriminatorValue(parseNode) {
    return deserializeIntoService_keyGetResponse_service_key;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Service_keyGetResponse}
 */
// @ts-ignore
export function createService_keyGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoService_keyGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Service_keyPostResponse}
 */
// @ts-ignore
export function createService_keyPostResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoService_keyPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoService_keyGetResponse(service_keyGetResponse = {}) {
    return {
        "service_key": n => { service_keyGetResponse.serviceKey = n.getObjectValue(createService_keyGetResponse_service_keyFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoService_keyGetResponse_service_key(service_keyGetResponse_service_key = {}) {
    return {};
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoService_keyPostResponse(service_keyPostResponse = {}) {
    return {};
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeService_keyGetResponse(writer, service_keyGetResponse = {}) {
    if (service_keyGetResponse) {
        writer.writeObjectValue("service_key", service_keyGetResponse.serviceKey, serializeService_keyGetResponse_service_key);
        writer.writeAdditionalData(service_keyGetResponse.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeService_keyGetResponse_service_key(writer, service_keyGetResponse_service_key = {}) {
    if (service_keyGetResponse_service_key) {
        writer.writeAdditionalData(service_keyGetResponse_service_key.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeService_keyPostResponse(writer, service_keyPostResponse = {}) {
    if (service_keyPostResponse) {
        writer.writeAdditionalData(service_keyPostResponse.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const Service_keyRequestBuilderUriTemplate = "{+baseurl}/v2/partner_network_connect/attachments/{pa_id}/service_key";
/**
 * Metadata for all the requests in the request builder.
 */
export const Service_keyRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: Service_keyRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createService_keyGetResponseFromDiscriminatorValue,
    },
    post: {
        uriTemplate: Service_keyRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createService_keyPostResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
