/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, type ErrorEscaped } from '../../../../../models/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Service_keyGetResponse_service_key}
 */
// @ts-ignore
export function createService_keyGetResponse_service_keyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoService_keyGetResponse_service_key;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Service_keyGetResponse}
 */
// @ts-ignore
export function createService_keyGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoService_keyGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Service_keyPostResponse}
 */
// @ts-ignore
export function createService_keyPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoService_keyPostResponse;
}
/**
 * The deserialization information for the current model
 * @param Service_keyGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoService_keyGetResponse(service_keyGetResponse: Partial<Service_keyGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "service_key": n => { service_keyGetResponse.serviceKey = n.getObjectValue<Service_keyGetResponse_service_key>(createService_keyGetResponse_service_keyFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Service_keyGetResponse_service_key The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoService_keyGetResponse_service_key(service_keyGetResponse_service_key: Partial<Service_keyGetResponse_service_key> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @param Service_keyPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoService_keyPostResponse(service_keyPostResponse: Partial<Service_keyPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Service_keyGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeService_keyGetResponse(writer: SerializationWriter, service_keyGetResponse: Partial<Service_keyGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!service_keyGetResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<Service_keyGetResponse_service_key>("service_key", service_keyGetResponse.serviceKey, serializeService_keyGetResponse_service_key);
    writer.writeAdditionalData(service_keyGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Service_keyGetResponse_service_key The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeService_keyGetResponse_service_key(writer: SerializationWriter, service_keyGetResponse_service_key: Partial<Service_keyGetResponse_service_key> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!service_keyGetResponse_service_key || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(service_keyGetResponse_service_key.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Service_keyPostResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeService_keyPostResponse(writer: SerializationWriter, service_keyPostResponse: Partial<Service_keyPostResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!service_keyPostResponse || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(service_keyPostResponse.additionalData);
}
export interface Service_keyGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * The service_key property
     */
    serviceKey?: Service_keyGetResponse_service_key | null;
}
export interface Service_keyGetResponse_service_key extends AdditionalDataHolder, Parsable {
}
export interface Service_keyPostResponse extends AdditionalDataHolder, Parsable {
}
/**
 * Builds and executes requests for operations under /v2/partner_network_connect/attachments/{pa_id}/service_key
 */
export interface Service_keyRequestBuilder extends BaseRequestBuilder<Service_keyRequestBuilder> {
    /**
     * To get the current service key for a partner attachment, send a `GET` request to`/v2/partner_network_connect/attachments/{pa_id}/service_key`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Service_keyGetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Service_keyGetResponse | undefined>;
    /**
     * This operation generates a new service key for the specified partner attachment. The operation is asynchronous, and the response is an empty JSON object returned with a 202 status code. To poll for the new service key, send a `GET` request to `/v2/partner_network_connect/attachments/{pa_id}/service_key`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Service_keyPostResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Service_keyPostResponse | undefined>;
    /**
     * To get the current service key for a partner attachment, send a `GET` request to`/v2/partner_network_connect/attachments/{pa_id}/service_key`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * This operation generates a new service key for the specified partner attachment. The operation is asynchronous, and the response is an empty JSON object returned with a 202 status code. To poll for the new service key, send a `GET` request to `/v2/partner_network_connect/attachments/{pa_id}/service_key`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const Service_keyRequestBuilderUriTemplate = "{+baseurl}/v2/partner_network_connect/attachments/{pa_id}/service_key";
/**
 * Metadata for all the requests in the request builder.
 */
export const Service_keyRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Service_keyRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createService_keyGetResponseFromDiscriminatorValue,
    },
    post: {
        uriTemplate: Service_keyRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createService_keyPostResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
