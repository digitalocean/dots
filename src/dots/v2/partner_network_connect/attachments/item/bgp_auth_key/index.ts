/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, type ErrorEscaped } from '../../../../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface Bgp_auth_keyGetResponse extends Parsable {
    /**
     * The bgp_auth_key property
     */
    bgpAuthKey?: Bgp_auth_keyGetResponse_bgp_auth_key | null;
}
export interface Bgp_auth_keyGetResponse_bgp_auth_key extends Parsable {
}
/**
 * Builds and executes requests for operations under /v2/partner_network_connect/attachments/{pa_id}/bgp_auth_key
 */
export interface Bgp_auth_keyRequestBuilder extends BaseRequestBuilder<Bgp_auth_keyRequestBuilder> {
    /**
     * To get the current BGP auth key for a partner attachment, send a `GET` request to`/v2/partner_network_connect/attachments/{pa_id}/bgp_auth_key`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Bgp_auth_keyGetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Bgp_auth_keyGetResponse | undefined>;
    /**
     * To get the current BGP auth key for a partner attachment, send a `GET` request to`/v2/partner_network_connect/attachments/{pa_id}/bgp_auth_key`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Bgp_auth_keyGetResponse_bgp_auth_key}
 */
// @ts-ignore
export function createBgp_auth_keyGetResponse_bgp_auth_keyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBgp_auth_keyGetResponse_bgp_auth_key;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Bgp_auth_keyGetResponse}
 */
// @ts-ignore
export function createBgp_auth_keyGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBgp_auth_keyGetResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBgp_auth_keyGetResponse(bgp_auth_keyGetResponse: Partial<Bgp_auth_keyGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bgp_auth_key": n => { bgp_auth_keyGetResponse.bgpAuthKey = n.getObjectValue<Bgp_auth_keyGetResponse_bgp_auth_key>(createBgp_auth_keyGetResponse_bgp_auth_keyFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBgp_auth_keyGetResponse_bgp_auth_key(bgp_auth_keyGetResponse_bgp_auth_key: Partial<Bgp_auth_keyGetResponse_bgp_auth_key> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBgp_auth_keyGetResponse(writer: SerializationWriter, bgp_auth_keyGetResponse: Partial<Bgp_auth_keyGetResponse> | undefined | null = {}) : void {
    if (bgp_auth_keyGetResponse) {
        writer.writeObjectValue<Bgp_auth_keyGetResponse_bgp_auth_key>("bgp_auth_key", bgp_auth_keyGetResponse.bgpAuthKey, serializeBgp_auth_keyGetResponse_bgp_auth_key);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBgp_auth_keyGetResponse_bgp_auth_key(writer: SerializationWriter, bgp_auth_keyGetResponse_bgp_auth_key: Partial<Bgp_auth_keyGetResponse_bgp_auth_key> | undefined | null = {}) : void {
    if (bgp_auth_keyGetResponse_bgp_auth_key) {
    }
}
/**
 * Uri template for the request builder.
 */
export const Bgp_auth_keyRequestBuilderUriTemplate = "{+baseurl}/v2/partner_network_connect/attachments/{pa_id}/bgp_auth_key";
/**
 * Metadata for all the requests in the request builder.
 */
export const Bgp_auth_keyRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Bgp_auth_keyRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createBgp_auth_keyGetResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
