/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createPartner_attachment_updatableMember1FromDiscriminatorValue, createPartner_attachment_updatableMember2FromDiscriminatorValue, createPartner_attachment_updatableMember3FromDiscriminatorValue, createPartner_attachmentFromDiscriminatorValue, deserializeIntoPartner_attachment_updatableMember1, deserializeIntoPartner_attachment_updatableMember2, deserializeIntoPartner_attachment_updatableMember3, serializePartner_attachment, serializePartner_attachment_updatableMember1, serializePartner_attachment_updatableMember2, serializePartner_attachment_updatableMember3, type ErrorEscaped, type Partner_attachment, type Partner_attachment_updatableMember1, type Partner_attachment_updatableMember2, type Partner_attachment_updatableMember3 } from '../../../../models/index.js';
// @ts-ignore
import { Bgp_auth_keyRequestBuilderRequestsMetadata, type Bgp_auth_keyRequestBuilder } from './bgp_auth_key/index.js';
// @ts-ignore
import { Remote_routesRequestBuilderRequestsMetadata, type Remote_routesRequestBuilder } from './remote_routes/index.js';
// @ts-ignore
import { Service_keyRequestBuilderRequestsMetadata, type Service_keyRequestBuilder } from './service_key/index.js';
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Partner_attachment_updatableMember1 | Partner_attachment_updatableMember2 | Partner_attachment_updatableMember3}
 */
// @ts-ignore
export function createPartner_attachment_updatableFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoPartner_attachment_updatable;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithPa_DeleteResponse}
 */
// @ts-ignore
export function createWithPa_DeleteResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithPa_DeleteResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithPa_GetResponse}
 */
// @ts-ignore
export function createWithPa_GetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithPa_GetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithPa_PatchResponse}
 */
// @ts-ignore
export function createWithPa_PatchResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithPa_PatchResponse;
}
/**
 * The deserialization information for the current model
 * @param Partner_attachment_updatable The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoPartner_attachment_updatable(partner_attachment_updatable: Partial<Partner_attachment_updatableMember1 | Partner_attachment_updatableMember2 | Partner_attachment_updatableMember3> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        ...deserializeIntoPartner_attachment_updatableMember1(partner_attachment_updatable as Partner_attachment_updatableMember1),
        ...deserializeIntoPartner_attachment_updatableMember2(partner_attachment_updatable as Partner_attachment_updatableMember2),
        ...deserializeIntoPartner_attachment_updatableMember3(partner_attachment_updatable as Partner_attachment_updatableMember3),
    }
}
/**
 * The deserialization information for the current model
 * @param WithPa_DeleteResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithPa_DeleteResponse(withPa_DeleteResponse: Partial<WithPa_DeleteResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "partner_attachment": n => { withPa_DeleteResponse.partnerAttachment = n.getObjectValue<Partner_attachment>(createPartner_attachmentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param WithPa_GetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithPa_GetResponse(withPa_GetResponse: Partial<WithPa_GetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "partner_attachment": n => { withPa_GetResponse.partnerAttachment = n.getObjectValue<Partner_attachment>(createPartner_attachmentFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param WithPa_PatchResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithPa_PatchResponse(withPa_PatchResponse: Partial<WithPa_PatchResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "partner_attachment": n => { withPa_PatchResponse.partnerAttachment = n.getObjectValue<Partner_attachment>(createPartner_attachmentFromDiscriminatorValue); },
    }
}
export type Partner_attachment_updatable = Partner_attachment_updatableMember1 | Partner_attachment_updatableMember2 | Partner_attachment_updatableMember3;
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Partner_attachment_updatable The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializePartner_attachment_updatable(writer: SerializationWriter, partner_attachment_updatable: Partial<Partner_attachment_updatableMember1 | Partner_attachment_updatableMember2 | Partner_attachment_updatableMember3> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    serializePartner_attachment_updatableMember1(writer, partner_attachment_updatable as Partner_attachment_updatableMember1);
    serializePartner_attachment_updatableMember2(writer, partner_attachment_updatable as Partner_attachment_updatableMember2);
    serializePartner_attachment_updatableMember3(writer, partner_attachment_updatable as Partner_attachment_updatableMember3);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithPa_DeleteResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithPa_DeleteResponse(writer: SerializationWriter, withPa_DeleteResponse: Partial<WithPa_DeleteResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withPa_DeleteResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<Partner_attachment>("partner_attachment", withPa_DeleteResponse.partnerAttachment, serializePartner_attachment);
    writer.writeAdditionalData(withPa_DeleteResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithPa_GetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithPa_GetResponse(writer: SerializationWriter, withPa_GetResponse: Partial<WithPa_GetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withPa_GetResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<Partner_attachment>("partner_attachment", withPa_GetResponse.partnerAttachment, serializePartner_attachment);
    writer.writeAdditionalData(withPa_GetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithPa_PatchResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithPa_PatchResponse(writer: SerializationWriter, withPa_PatchResponse: Partial<WithPa_PatchResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withPa_PatchResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<Partner_attachment>("partner_attachment", withPa_PatchResponse.partnerAttachment, serializePartner_attachment);
    writer.writeAdditionalData(withPa_PatchResponse.additionalData);
}
export interface WithPa_DeleteResponse extends AdditionalDataHolder, Parsable {
    /**
     * The partner_attachment property
     */
    partnerAttachment?: Partner_attachment | null;
}
export interface WithPa_GetResponse extends AdditionalDataHolder, Parsable {
    /**
     * The partner_attachment property
     */
    partnerAttachment?: Partner_attachment | null;
}
/**
 * Builds and executes requests for operations under /v2/partner_network_connect/attachments/{pa_id}
 */
export interface WithPa_ItemRequestBuilder extends BaseRequestBuilder<WithPa_ItemRequestBuilder> {
    /**
     * The bgp_auth_key property
     */
    get bgp_auth_key(): Bgp_auth_keyRequestBuilder;
    /**
     * The remote_routes property
     */
    get remote_routes(): Remote_routesRequestBuilder;
    /**
     * The service_key property
     */
    get service_key(): Service_keyRequestBuilder;
    /**
     * To delete an existing partner attachment, send a `DELETE` request to`/v2/partner_network_connect/attachments/{pa_id}`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithPa_DeleteResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithPa_DeleteResponse | undefined>;
    /**
     * To get the details of a partner attachment, send a `GET` request to`/v2/partner_network_connect/attachments/{pa_id}`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithPa_GetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithPa_GetResponse | undefined>;
    /**
     * To update an existing partner attachment, send a `PATCH` request to`/v2/partner_network_connect/attachments/{pa_id}` with a JSON object containing thefields to be updated.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithPa_PatchResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     patch(body: Partner_attachment_updatableMember1 | Partner_attachment_updatableMember2 | Partner_attachment_updatableMember3, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithPa_PatchResponse | undefined>;
    /**
     * To delete an existing partner attachment, send a `DELETE` request to`/v2/partner_network_connect/attachments/{pa_id}`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To get the details of a partner attachment, send a `GET` request to`/v2/partner_network_connect/attachments/{pa_id}`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To update an existing partner attachment, send a `PATCH` request to`/v2/partner_network_connect/attachments/{pa_id}` with a JSON object containing thefields to be updated.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(body: Partner_attachment_updatableMember1 | Partner_attachment_updatableMember2 | Partner_attachment_updatableMember3, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
export interface WithPa_PatchResponse extends AdditionalDataHolder, Parsable {
    /**
     * The partner_attachment property
     */
    partnerAttachment?: Partner_attachment | null;
}
/**
 * Uri template for the request builder.
 */
export const WithPa_ItemRequestBuilderUriTemplate = "{+baseurl}/v2/partner_network_connect/attachments/{pa_id}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithPa_ItemRequestBuilderNavigationMetadata: Record<Exclude<keyof WithPa_ItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    bgp_auth_key: {
        requestsMetadata: Bgp_auth_keyRequestBuilderRequestsMetadata,
    },
    remote_routes: {
        requestsMetadata: Remote_routesRequestBuilderRequestsMetadata,
    },
    service_key: {
        requestsMetadata: Service_keyRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithPa_ItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: WithPa_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWithPa_DeleteResponseFromDiscriminatorValue,
    },
    get: {
        uriTemplate: WithPa_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWithPa_GetResponseFromDiscriminatorValue,
    },
    patch: {
        uriTemplate: WithPa_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWithPa_PatchResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePartner_attachment_updatable,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
