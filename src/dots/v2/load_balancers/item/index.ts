/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createLoad_balancerFromDiscriminatorValue, serializeLoad_balancer, type ErrorEscaped, type Load_balancer } from '../../../models/index.js';
// @ts-ignore
import { CacheRequestBuilderRequestsMetadata, type CacheRequestBuilder } from './cache/index.js';
// @ts-ignore
import { DropletsRequestBuilderRequestsMetadata, type DropletsRequestBuilder } from './droplets/index.js';
// @ts-ignore
import { Forwarding_rulesRequestBuilderRequestsMetadata, type Forwarding_rulesRequestBuilder } from './forwarding_rules/index.js';
// @ts-ignore
import { createUntypedNodeFromDiscriminatorValue, type AdditionalDataHolder, type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter, type UntypedNode } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithLb_GetResponse}
 */
// @ts-ignore
export function createWithLb_GetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithLb_GetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithLb_PutResponse}
 */
// @ts-ignore
export function createWithLb_PutResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithLb_PutResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithLb_GetResponse(withLb_GetResponse: Partial<WithLb_GetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "load_balancer": n => { withLb_GetResponse.loadBalancer = n.getObjectValue<Load_balancer>(createLoad_balancerFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithLb_PutResponse(withLb_PutResponse: Partial<WithLb_PutResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "load_balancer": n => { withLb_PutResponse.loadBalancer = n.getObjectValue<Load_balancer>(createLoad_balancerFromDiscriminatorValue); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithLb_GetResponse(writer: SerializationWriter, withLb_GetResponse: Partial<WithLb_GetResponse> | undefined | null = {}) : void {
    if (withLb_GetResponse) {
        writer.writeObjectValue<Load_balancer>("load_balancer", withLb_GetResponse.loadBalancer, serializeLoad_balancer);
        writer.writeAdditionalData(withLb_GetResponse.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithLb_PutResponse(writer: SerializationWriter, withLb_PutResponse: Partial<WithLb_PutResponse> | undefined | null = {}) : void {
    if (withLb_PutResponse) {
        writer.writeObjectValue<Load_balancer>("load_balancer", withLb_PutResponse.loadBalancer, serializeLoad_balancer);
        writer.writeAdditionalData(withLb_PutResponse.additionalData);
    }
}
export interface WithLb_GetResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The load_balancer property
     */
    loadBalancer?: Load_balancer | null;
}
/**
 * Builds and executes requests for operations under /v2/load_balancers/{lb_id}
 */
export interface WithLb_ItemRequestBuilder extends BaseRequestBuilder<WithLb_ItemRequestBuilder> {
    /**
     * The cache property
     */
    get cache(): CacheRequestBuilder;
    /**
     * The droplets property
     */
    get droplets(): DropletsRequestBuilder;
    /**
     * The forwarding_rules property
     */
    get forwarding_rules(): Forwarding_rulesRequestBuilder;
    /**
     * To delete a load balancer instance, disassociating any Droplets assigned to itand removing it from your account, send a DELETE request to`/v2/load_balancers/$LOAD_BALANCER_ID`.A successful request will receive a 204 status code with no body in response.This indicates that the request was processed successfully.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<void>;
    /**
     * To show information about a load balancer instance, send a GET request to`/v2/load_balancers/$LOAD_BALANCER_ID`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithLb_GetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithLb_GetResponse | undefined>;
    /**
     * To update a load balancer's settings, send a PUT request to`/v2/load_balancers/$LOAD_BALANCER_ID`. The request should contain a fullrepresentation of the load balancer including existing attributes. It maycontain _one of_ the `droplets_ids` or `tag` attributes as they are mutuallyexclusive. **Note that any attribute that is not provided will be reset to itsdefault value.**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithLb_PutResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 404 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     put(body: UntypedNode, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithLb_PutResponse | undefined>;
    /**
     * To delete a load balancer instance, disassociating any Droplets assigned to itand removing it from your account, send a DELETE request to`/v2/load_balancers/$LOAD_BALANCER_ID`.A successful request will receive a 204 status code with no body in response.This indicates that the request was processed successfully.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To show information about a load balancer instance, send a GET request to`/v2/load_balancers/$LOAD_BALANCER_ID`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * To update a load balancer's settings, send a PUT request to`/v2/load_balancers/$LOAD_BALANCER_ID`. The request should contain a fullrepresentation of the load balancer including existing attributes. It maycontain _one of_ the `droplets_ids` or `tag` attributes as they are mutuallyexclusive. **Note that any attribute that is not provided will be reset to itsdefault value.**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPutRequestInformation(body: UntypedNode, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
export interface WithLb_PutResponse extends AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    additionalData?: Record<string, unknown>;
    /**
     * The load_balancer property
     */
    loadBalancer?: Load_balancer | null;
}
/**
 * Uri template for the request builder.
 */
export const WithLb_ItemRequestBuilderUriTemplate = "{+baseurl}/v2/load_balancers/{lb_id}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const WithLb_ItemRequestBuilderNavigationMetadata: Record<Exclude<keyof WithLb_ItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    cache: {
        requestsMetadata: CacheRequestBuilderRequestsMetadata,
    },
    droplets: {
        requestsMetadata: DropletsRequestBuilderRequestsMetadata,
    },
    forwarding_rules: {
        requestsMetadata: Forwarding_rulesRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const WithLb_ItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: WithLb_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "sendNoResponseContent",
    },
    get: {
        uriTemplate: WithLb_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWithLb_GetResponseFromDiscriminatorValue,
    },
    put: {
        uriTemplate: WithLb_ItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            404: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createWithLb_PutResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestInformationContentSetMethod: "setContentFromScalar",
    },
};
/* tslint:enable */
/* eslint-enable */
