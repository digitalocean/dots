/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue } from '../../../../models/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DropletsDeleteRequestBody}
 */
// @ts-ignore
export function createDropletsDeleteRequestBodyFromDiscriminatorValue(parseNode) {
    return deserializeIntoDropletsDeleteRequestBody;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {DropletsPostRequestBody}
 */
// @ts-ignore
export function createDropletsPostRequestBodyFromDiscriminatorValue(parseNode) {
    return deserializeIntoDropletsPostRequestBody;
}
/**
 * The deserialization information for the current model
 * @param DropletsDeleteRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDropletsDeleteRequestBody(dropletsDeleteRequestBody = {}) {
    return {
        "droplet_ids": n => { dropletsDeleteRequestBody.dropletIds = n.getCollectionOfPrimitiveValues(); },
    };
}
/**
 * The deserialization information for the current model
 * @param DropletsPostRequestBody The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoDropletsPostRequestBody(dropletsPostRequestBody = {}) {
    return {
        "droplet_ids": n => { dropletsPostRequestBody.dropletIds = n.getCollectionOfPrimitiveValues(); },
    };
}
/**
 * Serializes information the current object
 * @param DropletsDeleteRequestBody The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDropletsDeleteRequestBody(writer, dropletsDeleteRequestBody = {}, isSerializingDerivedType = false) {
    if (!dropletsDeleteRequestBody || isSerializingDerivedType) {
        return;
    }
    writer.writeCollectionOfPrimitiveValues("droplet_ids", dropletsDeleteRequestBody.dropletIds);
    writer.writeAdditionalData(dropletsDeleteRequestBody.additionalData);
}
/**
 * Serializes information the current object
 * @param DropletsPostRequestBody The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeDropletsPostRequestBody(writer, dropletsPostRequestBody = {}, isSerializingDerivedType = false) {
    if (!dropletsPostRequestBody || isSerializingDerivedType) {
        return;
    }
    writer.writeCollectionOfPrimitiveValues("droplet_ids", dropletsPostRequestBody.dropletIds);
    writer.writeAdditionalData(dropletsPostRequestBody.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const DropletsRequestBuilderUriTemplate = "{+baseurl}/v2/load_balancers/{lb_id}/droplets";
/**
 * Metadata for all the requests in the request builder.
 */
export const DropletsRequestBuilderRequestsMetadata = {
    delete: {
        uriTemplate: DropletsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDropletsDeleteRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
    post: {
        uriTemplate: DropletsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            404: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "sendNoResponseContent",
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeDropletsPostRequestBody,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
