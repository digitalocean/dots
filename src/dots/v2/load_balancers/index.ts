/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createLoad_balancerFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, serializeLoad_balancer, serializeMeta_properties, serializePage_links, type ErrorEscaped, type Load_balancer, type Meta_properties, type Page_links } from '../../models/index.js';
// @ts-ignore
import { type WithLb_ItemRequestBuilder, WithLb_ItemRequestBuilderNavigationMetadata, WithLb_ItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { createUntypedNodeFromDiscriminatorValue, type AdditionalDataHolder, type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter, type UntypedNode } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Load_balancersGetResponse}
 */
// @ts-ignore
export function createLoad_balancersGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLoad_balancersGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Load_balancersPostResponse}
 */
// @ts-ignore
export function createLoad_balancersPostResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLoad_balancersPostResponse;
}
/**
 * The deserialization information for the current model
 * @param Load_balancersGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoad_balancersGetResponse(load_balancersGetResponse: Partial<Load_balancersGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "links": n => { load_balancersGetResponse.links = n.getObjectValue<Page_links>(createPage_linksFromDiscriminatorValue); },
        "load_balancers": n => { load_balancersGetResponse.loadBalancers = n.getCollectionOfObjectValues<Load_balancer>(createLoad_balancerFromDiscriminatorValue); },
        "meta": n => { load_balancersGetResponse.meta = n.getObjectValue<Meta_properties>(createMeta_propertiesFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @param Load_balancersPostResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoad_balancersPostResponse(load_balancersPostResponse: Partial<Load_balancersPostResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "load_balancer": n => { load_balancersPostResponse.loadBalancer = n.getObjectValue<Load_balancer>(createLoad_balancerFromDiscriminatorValue); },
    }
}
export interface Load_balancersGetResponse extends AdditionalDataHolder, Parsable {
    /**
     * The links property
     */
    links?: Page_links | null;
    /**
     * The load_balancers property
     */
    loadBalancers?: Load_balancer[] | null;
    /**
     * The meta property
     */
    meta?: Meta_properties | null;
}
export interface Load_balancersPostResponse extends AdditionalDataHolder, Parsable {
    /**
     * The load_balancer property
     */
    loadBalancer?: Load_balancer | null;
}
/**
 * Builds and executes requests for operations under /v2/load_balancers
 */
export interface Load_balancersRequestBuilder extends BaseRequestBuilder<Load_balancersRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.v2.load_balancers.item collection
     * @param lb_id A unique identifier for a load balancer.
     * @returns {WithLb_ItemRequestBuilder}
     */
     byLb_id(lb_id: string) : WithLb_ItemRequestBuilder;
    /**
     * To list all of the load balancer instances on your account, send a GET requestto `/v2/load_balancers`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Load_balancersGetResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     get(requestConfiguration?: RequestConfiguration<Load_balancersRequestBuilderGetQueryParameters> | undefined) : Promise<Load_balancersGetResponse | undefined>;
    /**
     * To create a new load balancer instance, send a POST request to`/v2/load_balancers`.You can specify the Droplets that will sit behind the load balancer using oneof two methods:* Set `droplet_ids` to a list of specific Droplet IDs.* Set `tag` to the name of a tag. All Droplets with this tag applied will be  assigned to the load balancer. Additional Droplets will be automatically  assigned as they are tagged.These methods are mutually exclusive.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Load_balancersPostResponse>}
     * @throws {ErrorEscaped} error when the service returns a 401 status code
     * @throws {ErrorEscaped} error when the service returns a 429 status code
     * @throws {ErrorEscaped} error when the service returns a 500 status code
     * @throws {ErrorEscaped} error when the service returns a 4XX or 5XX status code
     */
     post(body: UntypedNode, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Load_balancersPostResponse | undefined>;
    /**
     * To list all of the load balancer instances on your account, send a GET requestto `/v2/load_balancers`.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<Load_balancersRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * To create a new load balancer instance, send a POST request to`/v2/load_balancers`.You can specify the Droplets that will sit behind the load balancer using oneof two methods:* Set `droplet_ids` to a list of specific Droplet IDs.* Set `tag` to the name of a tag. All Droplets with this tag applied will be  assigned to the load balancer. Additional Droplets will be automatically  assigned as they are tagged.These methods are mutually exclusive.
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: UntypedNode, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * To list all of the load balancer instances on your account, send a GET requestto `/v2/load_balancers`.
 */
export interface Load_balancersRequestBuilderGetQueryParameters {
    /**
     * Which 'page' of paginated results to return.
     */
    page?: number;
    /**
     * Number of items returned per page
     */
    perPage?: number;
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Load_balancersGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoad_balancersGetResponse(writer: SerializationWriter, load_balancersGetResponse: Partial<Load_balancersGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!load_balancersGetResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<Page_links>("links", load_balancersGetResponse.links, serializePage_links);
    writer.writeCollectionOfObjectValues<Load_balancer>("load_balancers", load_balancersGetResponse.loadBalancers, serializeLoad_balancer);
    writer.writeObjectValue<Meta_properties>("meta", load_balancersGetResponse.meta, serializeMeta_properties);
    writer.writeAdditionalData(load_balancersGetResponse.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param Load_balancersPostResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoad_balancersPostResponse(writer: SerializationWriter, load_balancersPostResponse: Partial<Load_balancersPostResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!load_balancersPostResponse || isSerializingDerivedType) { return; }
    writer.writeObjectValue<Load_balancer>("load_balancer", load_balancersPostResponse.loadBalancer, serializeLoad_balancer);
    writer.writeAdditionalData(load_balancersPostResponse.additionalData);
}
/**
 * Uri template for the request builder.
 */
export const Load_balancersRequestBuilderUriTemplate = "{+baseurl}/v2/load_balancers{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const Load_balancersRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Load_balancersRequestBuilderNavigationMetadata: Record<Exclude<keyof Load_balancersRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byLb_id: {
        requestsMetadata: WithLb_ItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithLb_ItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["lb_id"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Load_balancersRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: Load_balancersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createLoad_balancersGetResponseFromDiscriminatorValue,
        queryParametersMapper: Load_balancersRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: Load_balancersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            429: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            500: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
            XXX: createErrorEscapedFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createLoad_balancersPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestInformationContentSetMethod: "setContentFromScalar",
    },
};
/* tslint:enable */
/* eslint-enable */
