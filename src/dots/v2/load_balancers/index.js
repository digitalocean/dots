/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createErrorEscapedFromDiscriminatorValue, createLoad_balancerFromDiscriminatorValue, createMeta_propertiesFromDiscriminatorValue, createPage_linksFromDiscriminatorValue, serializeLoad_balancer, serializeMeta_properties, serializePage_links } from '../../models/index.js';
// @ts-ignore
import { WithLb_ItemRequestBuilderNavigationMetadata, WithLb_ItemRequestBuilderRequestsMetadata } from './item/index.js';
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Load_balancersGetResponse}
 */
// @ts-ignore
export function createLoad_balancersGetResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoLoad_balancersGetResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {Load_balancersPostResponse}
 */
// @ts-ignore
export function createLoad_balancersPostResponseFromDiscriminatorValue(parseNode) {
    return deserializeIntoLoad_balancersPostResponse;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoad_balancersGetResponse(load_balancersGetResponse = {}) {
    return {
        "links": n => { load_balancersGetResponse.links = n.getObjectValue(createPage_linksFromDiscriminatorValue); },
        "load_balancers": n => { load_balancersGetResponse.loadBalancers = n.getCollectionOfObjectValues(createLoad_balancerFromDiscriminatorValue); },
        "meta": n => { load_balancersGetResponse.meta = n.getObjectValue(createMeta_propertiesFromDiscriminatorValue); },
    };
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoad_balancersPostResponse(load_balancersPostResponse = {}) {
    return {
        "load_balancer": n => { load_balancersPostResponse.loadBalancer = n.getObjectValue(createLoad_balancerFromDiscriminatorValue); },
    };
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoad_balancersGetResponse(writer, load_balancersGetResponse = {}) {
    if (load_balancersGetResponse) {
        writer.writeObjectValue("links", load_balancersGetResponse.links, serializePage_links);
        writer.writeCollectionOfObjectValues("load_balancers", load_balancersGetResponse.loadBalancers, serializeLoad_balancer);
        writer.writeObjectValue("meta", load_balancersGetResponse.meta, serializeMeta_properties);
        writer.writeAdditionalData(load_balancersGetResponse.additionalData);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoad_balancersPostResponse(writer, load_balancersPostResponse = {}) {
    if (load_balancersPostResponse) {
        writer.writeObjectValue("load_balancer", load_balancersPostResponse.loadBalancer, serializeLoad_balancer);
        writer.writeAdditionalData(load_balancersPostResponse.additionalData);
    }
}
/**
 * Uri template for the request builder.
 */
export const Load_balancersRequestBuilderUriTemplate = "{+baseurl}/v2/load_balancers{?page*,per_page*}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const Load_balancersRequestBuilderGetQueryParametersMapper = {
    "perPage": "per_page",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const Load_balancersRequestBuilderNavigationMetadata = {
    byLb_id: {
        requestsMetadata: WithLb_ItemRequestBuilderRequestsMetadata,
        navigationMetadata: WithLb_ItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["lb_id"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const Load_balancersRequestBuilderRequestsMetadata = {
    get: {
        uriTemplate: Load_balancersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createLoad_balancersGetResponseFromDiscriminatorValue,
        queryParametersMapper: Load_balancersRequestBuilderGetQueryParametersMapper,
    },
    post: {
        uriTemplate: Load_balancersRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            401: createErrorEscapedFromDiscriminatorValue,
            429: createErrorEscapedFromDiscriminatorValue,
            500: createErrorEscapedFromDiscriminatorValue,
            XXX: createErrorEscapedFromDiscriminatorValue,
        },
        adapterMethodName: "send",
        responseBodyFactory: createLoad_balancersPostResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestInformationContentSetMethod: "setContentFromScalar",
    },
};
/* tslint:enable */
/* eslint-enable */
